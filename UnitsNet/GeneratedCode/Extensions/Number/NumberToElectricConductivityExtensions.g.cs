//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyUnit.extra.cs files to add code to generated quantities.
//     Add Extensions\MyUnitExtensions.cs to decorate quantities with new behavior.
//     Add UnitDefinitions\MyUnit.json and run GeneratUnits.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com).
// https://github.com/angularsen/UnitsNet
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

using System;

// Windows Runtime Component does not support extension methods and method overloads: https://msdn.microsoft.com/en-us/library/br230301.aspx
#if !WINDOWS_UWP
namespace UnitsNet.Extensions.NumberToElectricConductivity
{
    public static class NumberToElectricConductivityExtensions
    {
        #region KiloohmPerCentimeter

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double)"/>
        public static ElectricConductivity KiloohmsPerCentimeter(this int value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerCentimeter(this int? value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double)"/>
        public static ElectricConductivity KiloohmsPerCentimeter(this long value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerCentimeter(this long? value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double)"/>
        public static ElectricConductivity KiloohmsPerCentimeter(this double value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerCentimeter(this double? value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double)"/>
        public static ElectricConductivity KiloohmsPerCentimeter(this float value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerCentimeter(this float? value) => ElectricConductivity.FromKiloohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double)"/>
        public static ElectricConductivity KiloohmsPerCentimeter(this decimal value) => ElectricConductivity.FromKiloohmsPerCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerCentimeter(this decimal? value) => ElectricConductivity.FromKiloohmsPerCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KiloohmPerMeter

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double)"/>
        public static ElectricConductivity KiloohmsPerMeter(this int value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerMeter(this int? value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double)"/>
        public static ElectricConductivity KiloohmsPerMeter(this long value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerMeter(this long? value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double)"/>
        public static ElectricConductivity KiloohmsPerMeter(this double value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerMeter(this double? value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double)"/>
        public static ElectricConductivity KiloohmsPerMeter(this float value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerMeter(this float? value) => ElectricConductivity.FromKiloohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double)"/>
        public static ElectricConductivity KiloohmsPerMeter(this decimal value) => ElectricConductivity.FromKiloohmsPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromKiloohmsPerMeter(double?)"/>
        public static ElectricConductivity? KiloohmsPerMeter(this decimal? value) => ElectricConductivity.FromKiloohmsPerMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MegaohmPerCentimeter

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double)"/>
        public static ElectricConductivity MegaohmsPerCentimeter(this int value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerCentimeter(this int? value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double)"/>
        public static ElectricConductivity MegaohmsPerCentimeter(this long value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerCentimeter(this long? value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double)"/>
        public static ElectricConductivity MegaohmsPerCentimeter(this double value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerCentimeter(this double? value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double)"/>
        public static ElectricConductivity MegaohmsPerCentimeter(this float value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerCentimeter(this float? value) => ElectricConductivity.FromMegaohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double)"/>
        public static ElectricConductivity MegaohmsPerCentimeter(this decimal value) => ElectricConductivity.FromMegaohmsPerCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerCentimeter(this decimal? value) => ElectricConductivity.FromMegaohmsPerCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MegaohmPerMeter

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double)"/>
        public static ElectricConductivity MegaohmsPerMeter(this int value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerMeter(this int? value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double)"/>
        public static ElectricConductivity MegaohmsPerMeter(this long value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerMeter(this long? value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double)"/>
        public static ElectricConductivity MegaohmsPerMeter(this double value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerMeter(this double? value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double)"/>
        public static ElectricConductivity MegaohmsPerMeter(this float value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerMeter(this float? value) => ElectricConductivity.FromMegaohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double)"/>
        public static ElectricConductivity MegaohmsPerMeter(this decimal value) => ElectricConductivity.FromMegaohmsPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromMegaohmsPerMeter(double?)"/>
        public static ElectricConductivity? MegaohmsPerMeter(this decimal? value) => ElectricConductivity.FromMegaohmsPerMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicroohmPerCentimeter

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double)"/>
        public static ElectricConductivity MicroohmsPerCentimeter(this int value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerCentimeter(this int? value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double)"/>
        public static ElectricConductivity MicroohmsPerCentimeter(this long value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerCentimeter(this long? value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double)"/>
        public static ElectricConductivity MicroohmsPerCentimeter(this double value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerCentimeter(this double? value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double)"/>
        public static ElectricConductivity MicroohmsPerCentimeter(this float value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerCentimeter(this float? value) => ElectricConductivity.FromMicroohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double)"/>
        public static ElectricConductivity MicroohmsPerCentimeter(this decimal value) => ElectricConductivity.FromMicroohmsPerCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerCentimeter(this decimal? value) => ElectricConductivity.FromMicroohmsPerCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicroohmPerMeter

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double)"/>
        public static ElectricConductivity MicroohmsPerMeter(this int value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerMeter(this int? value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double)"/>
        public static ElectricConductivity MicroohmsPerMeter(this long value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerMeter(this long? value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double)"/>
        public static ElectricConductivity MicroohmsPerMeter(this double value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerMeter(this double? value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double)"/>
        public static ElectricConductivity MicroohmsPerMeter(this float value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerMeter(this float? value) => ElectricConductivity.FromMicroohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double)"/>
        public static ElectricConductivity MicroohmsPerMeter(this decimal value) => ElectricConductivity.FromMicroohmsPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromMicroohmsPerMeter(double?)"/>
        public static ElectricConductivity? MicroohmsPerMeter(this decimal? value) => ElectricConductivity.FromMicroohmsPerMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MilliohmPerCentimeter

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double)"/>
        public static ElectricConductivity MilliohmsPerCentimeter(this int value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerCentimeter(this int? value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double)"/>
        public static ElectricConductivity MilliohmsPerCentimeter(this long value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerCentimeter(this long? value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double)"/>
        public static ElectricConductivity MilliohmsPerCentimeter(this double value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerCentimeter(this double? value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double)"/>
        public static ElectricConductivity MilliohmsPerCentimeter(this float value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerCentimeter(this float? value) => ElectricConductivity.FromMilliohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double)"/>
        public static ElectricConductivity MilliohmsPerCentimeter(this decimal value) => ElectricConductivity.FromMilliohmsPerCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerCentimeter(this decimal? value) => ElectricConductivity.FromMilliohmsPerCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MilliohmPerMeter

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double)"/>
        public static ElectricConductivity MilliohmsPerMeter(this int value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerMeter(this int? value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double)"/>
        public static ElectricConductivity MilliohmsPerMeter(this long value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerMeter(this long? value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double)"/>
        public static ElectricConductivity MilliohmsPerMeter(this double value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerMeter(this double? value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double)"/>
        public static ElectricConductivity MilliohmsPerMeter(this float value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerMeter(this float? value) => ElectricConductivity.FromMilliohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double)"/>
        public static ElectricConductivity MilliohmsPerMeter(this decimal value) => ElectricConductivity.FromMilliohmsPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromMilliohmsPerMeter(double?)"/>
        public static ElectricConductivity? MilliohmsPerMeter(this decimal? value) => ElectricConductivity.FromMilliohmsPerMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanoohmPerCentimeter

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double)"/>
        public static ElectricConductivity NanoohmsPerCentimeter(this int value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerCentimeter(this int? value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double)"/>
        public static ElectricConductivity NanoohmsPerCentimeter(this long value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerCentimeter(this long? value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double)"/>
        public static ElectricConductivity NanoohmsPerCentimeter(this double value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerCentimeter(this double? value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double)"/>
        public static ElectricConductivity NanoohmsPerCentimeter(this float value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerCentimeter(this float? value) => ElectricConductivity.FromNanoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double)"/>
        public static ElectricConductivity NanoohmsPerCentimeter(this decimal value) => ElectricConductivity.FromNanoohmsPerCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerCentimeter(this decimal? value) => ElectricConductivity.FromNanoohmsPerCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanoohmPerMeter

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double)"/>
        public static ElectricConductivity NanoohmsPerMeter(this int value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerMeter(this int? value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double)"/>
        public static ElectricConductivity NanoohmsPerMeter(this long value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerMeter(this long? value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double)"/>
        public static ElectricConductivity NanoohmsPerMeter(this double value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerMeter(this double? value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double)"/>
        public static ElectricConductivity NanoohmsPerMeter(this float value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerMeter(this float? value) => ElectricConductivity.FromNanoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double)"/>
        public static ElectricConductivity NanoohmsPerMeter(this decimal value) => ElectricConductivity.FromNanoohmsPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromNanoohmsPerMeter(double?)"/>
        public static ElectricConductivity? NanoohmsPerMeter(this decimal? value) => ElectricConductivity.FromNanoohmsPerMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region OhmPerCentimeter

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double)"/>
        public static ElectricConductivity OhmsPerCentimeter(this int value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double?)"/>
        public static ElectricConductivity? OhmsPerCentimeter(this int? value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double)"/>
        public static ElectricConductivity OhmsPerCentimeter(this long value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double?)"/>
        public static ElectricConductivity? OhmsPerCentimeter(this long? value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double)"/>
        public static ElectricConductivity OhmsPerCentimeter(this double value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double?)"/>
        public static ElectricConductivity? OhmsPerCentimeter(this double? value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double)"/>
        public static ElectricConductivity OhmsPerCentimeter(this float value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double?)"/>
        public static ElectricConductivity? OhmsPerCentimeter(this float? value) => ElectricConductivity.FromOhmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double)"/>
        public static ElectricConductivity OhmsPerCentimeter(this decimal value) => ElectricConductivity.FromOhmsPerCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerCentimeter(double?)"/>
        public static ElectricConductivity? OhmsPerCentimeter(this decimal? value) => ElectricConductivity.FromOhmsPerCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region OhmPerMeter

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double)"/>
        public static ElectricConductivity OhmsPerMeter(this int value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double?)"/>
        public static ElectricConductivity? OhmsPerMeter(this int? value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double)"/>
        public static ElectricConductivity OhmsPerMeter(this long value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double?)"/>
        public static ElectricConductivity? OhmsPerMeter(this long? value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double)"/>
        public static ElectricConductivity OhmsPerMeter(this double value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double?)"/>
        public static ElectricConductivity? OhmsPerMeter(this double? value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double)"/>
        public static ElectricConductivity OhmsPerMeter(this float value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double?)"/>
        public static ElectricConductivity? OhmsPerMeter(this float? value) => ElectricConductivity.FromOhmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double)"/>
        public static ElectricConductivity OhmsPerMeter(this decimal value) => ElectricConductivity.FromOhmsPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromOhmsPerMeter(double?)"/>
        public static ElectricConductivity? OhmsPerMeter(this decimal? value) => ElectricConductivity.FromOhmsPerMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PicoohmPerCentimeter

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double)"/>
        public static ElectricConductivity PicoohmsPerCentimeter(this int value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerCentimeter(this int? value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double)"/>
        public static ElectricConductivity PicoohmsPerCentimeter(this long value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerCentimeter(this long? value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double)"/>
        public static ElectricConductivity PicoohmsPerCentimeter(this double value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerCentimeter(this double? value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double)"/>
        public static ElectricConductivity PicoohmsPerCentimeter(this float value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerCentimeter(this float? value) => ElectricConductivity.FromPicoohmsPerCentimeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double)"/>
        public static ElectricConductivity PicoohmsPerCentimeter(this decimal value) => ElectricConductivity.FromPicoohmsPerCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerCentimeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerCentimeter(this decimal? value) => ElectricConductivity.FromPicoohmsPerCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PicoohmPerMeter

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double)"/>
        public static ElectricConductivity PicoohmsPerMeter(this int value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerMeter(this int? value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double)"/>
        public static ElectricConductivity PicoohmsPerMeter(this long value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerMeter(this long? value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double)"/>
        public static ElectricConductivity PicoohmsPerMeter(this double value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerMeter(this double? value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double)"/>
        public static ElectricConductivity PicoohmsPerMeter(this float value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerMeter(this float? value) => ElectricConductivity.FromPicoohmsPerMeter(value);

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double)"/>
        public static ElectricConductivity PicoohmsPerMeter(this decimal value) => ElectricConductivity.FromPicoohmsPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricConductivity.FromPicoohmsPerMeter(double?)"/>
        public static ElectricConductivity? PicoohmsPerMeter(this decimal? value) => ElectricConductivity.FromPicoohmsPerMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

    }
}
#endif
