//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add Extensions\MyQuantityExtensions.cs to decorate quantities with new behavior.
//     Add UnitDefinitions\MyQuantity.json and run GeneratUnits.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com).
// https://github.com/angularsen/UnitsNet
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

using System;

// Windows Runtime Component does not support extension methods and method overloads: https://msdn.microsoft.com/en-us/library/br230301.aspx
#if !WINDOWS_UWP
namespace UnitsNet.Extensions.NumberToMassFlow
{
    public static class NumberToMassFlowExtensions
    {
        #region CentigramPerDay

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double)"/>
        public static MassFlow CentigramsPerDay(this int value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double?)"/>
        public static MassFlow? CentigramsPerDay(this int? value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double)"/>
        public static MassFlow CentigramsPerDay(this long value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double?)"/>
        public static MassFlow? CentigramsPerDay(this long? value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double)"/>
        public static MassFlow CentigramsPerDay(this double value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double?)"/>
        public static MassFlow? CentigramsPerDay(this double? value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double)"/>
        public static MassFlow CentigramsPerDay(this float value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double?)"/>
        public static MassFlow? CentigramsPerDay(this float? value) => MassFlow.FromCentigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double)"/>
        public static MassFlow CentigramsPerDay(this decimal value) => MassFlow.FromCentigramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromCentigramsPerDay(double?)"/>
        public static MassFlow? CentigramsPerDay(this decimal? value) => MassFlow.FromCentigramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CentigramPerSecond

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double)"/>
        public static MassFlow CentigramsPerSecond(this int value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double?)"/>
        public static MassFlow? CentigramsPerSecond(this int? value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double)"/>
        public static MassFlow CentigramsPerSecond(this long value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double?)"/>
        public static MassFlow? CentigramsPerSecond(this long? value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double)"/>
        public static MassFlow CentigramsPerSecond(this double value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double?)"/>
        public static MassFlow? CentigramsPerSecond(this double? value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double)"/>
        public static MassFlow CentigramsPerSecond(this float value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double?)"/>
        public static MassFlow? CentigramsPerSecond(this float? value) => MassFlow.FromCentigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double)"/>
        public static MassFlow CentigramsPerSecond(this decimal value) => MassFlow.FromCentigramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromCentigramsPerSecond(double?)"/>
        public static MassFlow? CentigramsPerSecond(this decimal? value) => MassFlow.FromCentigramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecagramPerDay

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double)"/>
        public static MassFlow DecagramsPerDay(this int value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double?)"/>
        public static MassFlow? DecagramsPerDay(this int? value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double)"/>
        public static MassFlow DecagramsPerDay(this long value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double?)"/>
        public static MassFlow? DecagramsPerDay(this long? value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double)"/>
        public static MassFlow DecagramsPerDay(this double value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double?)"/>
        public static MassFlow? DecagramsPerDay(this double? value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double)"/>
        public static MassFlow DecagramsPerDay(this float value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double?)"/>
        public static MassFlow? DecagramsPerDay(this float? value) => MassFlow.FromDecagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double)"/>
        public static MassFlow DecagramsPerDay(this decimal value) => MassFlow.FromDecagramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromDecagramsPerDay(double?)"/>
        public static MassFlow? DecagramsPerDay(this decimal? value) => MassFlow.FromDecagramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecagramPerSecond

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double)"/>
        public static MassFlow DecagramsPerSecond(this int value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double?)"/>
        public static MassFlow? DecagramsPerSecond(this int? value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double)"/>
        public static MassFlow DecagramsPerSecond(this long value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double?)"/>
        public static MassFlow? DecagramsPerSecond(this long? value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double)"/>
        public static MassFlow DecagramsPerSecond(this double value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double?)"/>
        public static MassFlow? DecagramsPerSecond(this double? value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double)"/>
        public static MassFlow DecagramsPerSecond(this float value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double?)"/>
        public static MassFlow? DecagramsPerSecond(this float? value) => MassFlow.FromDecagramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double)"/>
        public static MassFlow DecagramsPerSecond(this decimal value) => MassFlow.FromDecagramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromDecagramsPerSecond(double?)"/>
        public static MassFlow? DecagramsPerSecond(this decimal? value) => MassFlow.FromDecagramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecigramPerDay

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double)"/>
        public static MassFlow DecigramsPerDay(this int value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double?)"/>
        public static MassFlow? DecigramsPerDay(this int? value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double)"/>
        public static MassFlow DecigramsPerDay(this long value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double?)"/>
        public static MassFlow? DecigramsPerDay(this long? value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double)"/>
        public static MassFlow DecigramsPerDay(this double value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double?)"/>
        public static MassFlow? DecigramsPerDay(this double? value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double)"/>
        public static MassFlow DecigramsPerDay(this float value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double?)"/>
        public static MassFlow? DecigramsPerDay(this float? value) => MassFlow.FromDecigramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double)"/>
        public static MassFlow DecigramsPerDay(this decimal value) => MassFlow.FromDecigramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromDecigramsPerDay(double?)"/>
        public static MassFlow? DecigramsPerDay(this decimal? value) => MassFlow.FromDecigramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecigramPerSecond

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double)"/>
        public static MassFlow DecigramsPerSecond(this int value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double?)"/>
        public static MassFlow? DecigramsPerSecond(this int? value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double)"/>
        public static MassFlow DecigramsPerSecond(this long value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double?)"/>
        public static MassFlow? DecigramsPerSecond(this long? value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double)"/>
        public static MassFlow DecigramsPerSecond(this double value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double?)"/>
        public static MassFlow? DecigramsPerSecond(this double? value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double)"/>
        public static MassFlow DecigramsPerSecond(this float value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double?)"/>
        public static MassFlow? DecigramsPerSecond(this float? value) => MassFlow.FromDecigramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double)"/>
        public static MassFlow DecigramsPerSecond(this decimal value) => MassFlow.FromDecigramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromDecigramsPerSecond(double?)"/>
        public static MassFlow? DecigramsPerSecond(this decimal? value) => MassFlow.FromDecigramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerDay

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double)"/>
        public static MassFlow GramsPerDay(this int value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double?)"/>
        public static MassFlow? GramsPerDay(this int? value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double)"/>
        public static MassFlow GramsPerDay(this long value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double?)"/>
        public static MassFlow? GramsPerDay(this long? value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double)"/>
        public static MassFlow GramsPerDay(this double value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double?)"/>
        public static MassFlow? GramsPerDay(this double? value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double)"/>
        public static MassFlow GramsPerDay(this float value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double?)"/>
        public static MassFlow? GramsPerDay(this float? value) => MassFlow.FromGramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double)"/>
        public static MassFlow GramsPerDay(this decimal value) => MassFlow.FromGramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromGramsPerDay(double?)"/>
        public static MassFlow? GramsPerDay(this decimal? value) => MassFlow.FromGramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerSecond

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double)"/>
        public static MassFlow GramsPerSecond(this int value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double?)"/>
        public static MassFlow? GramsPerSecond(this int? value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double)"/>
        public static MassFlow GramsPerSecond(this long value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double?)"/>
        public static MassFlow? GramsPerSecond(this long? value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double)"/>
        public static MassFlow GramsPerSecond(this double value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double?)"/>
        public static MassFlow? GramsPerSecond(this double? value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double)"/>
        public static MassFlow GramsPerSecond(this float value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double?)"/>
        public static MassFlow? GramsPerSecond(this float? value) => MassFlow.FromGramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double)"/>
        public static MassFlow GramsPerSecond(this decimal value) => MassFlow.FromGramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromGramsPerSecond(double?)"/>
        public static MassFlow? GramsPerSecond(this decimal? value) => MassFlow.FromGramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region HectogramPerDay

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double)"/>
        public static MassFlow HectogramsPerDay(this int value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double?)"/>
        public static MassFlow? HectogramsPerDay(this int? value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double)"/>
        public static MassFlow HectogramsPerDay(this long value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double?)"/>
        public static MassFlow? HectogramsPerDay(this long? value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double)"/>
        public static MassFlow HectogramsPerDay(this double value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double?)"/>
        public static MassFlow? HectogramsPerDay(this double? value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double)"/>
        public static MassFlow HectogramsPerDay(this float value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double?)"/>
        public static MassFlow? HectogramsPerDay(this float? value) => MassFlow.FromHectogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double)"/>
        public static MassFlow HectogramsPerDay(this decimal value) => MassFlow.FromHectogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromHectogramsPerDay(double?)"/>
        public static MassFlow? HectogramsPerDay(this decimal? value) => MassFlow.FromHectogramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region HectogramPerSecond

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double)"/>
        public static MassFlow HectogramsPerSecond(this int value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double?)"/>
        public static MassFlow? HectogramsPerSecond(this int? value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double)"/>
        public static MassFlow HectogramsPerSecond(this long value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double?)"/>
        public static MassFlow? HectogramsPerSecond(this long? value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double)"/>
        public static MassFlow HectogramsPerSecond(this double value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double?)"/>
        public static MassFlow? HectogramsPerSecond(this double? value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double)"/>
        public static MassFlow HectogramsPerSecond(this float value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double?)"/>
        public static MassFlow? HectogramsPerSecond(this float? value) => MassFlow.FromHectogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double)"/>
        public static MassFlow HectogramsPerSecond(this decimal value) => MassFlow.FromHectogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromHectogramsPerSecond(double?)"/>
        public static MassFlow? HectogramsPerSecond(this decimal? value) => MassFlow.FromHectogramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilogramPerDay

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double)"/>
        public static MassFlow KilogramsPerDay(this int value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double?)"/>
        public static MassFlow? KilogramsPerDay(this int? value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double)"/>
        public static MassFlow KilogramsPerDay(this long value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double?)"/>
        public static MassFlow? KilogramsPerDay(this long? value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double)"/>
        public static MassFlow KilogramsPerDay(this double value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double?)"/>
        public static MassFlow? KilogramsPerDay(this double? value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double)"/>
        public static MassFlow KilogramsPerDay(this float value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double?)"/>
        public static MassFlow? KilogramsPerDay(this float? value) => MassFlow.FromKilogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double)"/>
        public static MassFlow KilogramsPerDay(this decimal value) => MassFlow.FromKilogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromKilogramsPerDay(double?)"/>
        public static MassFlow? KilogramsPerDay(this decimal? value) => MassFlow.FromKilogramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilogramPerHour

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double)"/>
        public static MassFlow KilogramsPerHour(this int value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double?)"/>
        public static MassFlow? KilogramsPerHour(this int? value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double)"/>
        public static MassFlow KilogramsPerHour(this long value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double?)"/>
        public static MassFlow? KilogramsPerHour(this long? value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double)"/>
        public static MassFlow KilogramsPerHour(this double value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double?)"/>
        public static MassFlow? KilogramsPerHour(this double? value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double)"/>
        public static MassFlow KilogramsPerHour(this float value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double?)"/>
        public static MassFlow? KilogramsPerHour(this float? value) => MassFlow.FromKilogramsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double)"/>
        public static MassFlow KilogramsPerHour(this decimal value) => MassFlow.FromKilogramsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromKilogramsPerHour(double?)"/>
        public static MassFlow? KilogramsPerHour(this decimal? value) => MassFlow.FromKilogramsPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilogramPerSecond

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double)"/>
        public static MassFlow KilogramsPerSecond(this int value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double?)"/>
        public static MassFlow? KilogramsPerSecond(this int? value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double)"/>
        public static MassFlow KilogramsPerSecond(this long value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double?)"/>
        public static MassFlow? KilogramsPerSecond(this long? value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double)"/>
        public static MassFlow KilogramsPerSecond(this double value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double?)"/>
        public static MassFlow? KilogramsPerSecond(this double? value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double)"/>
        public static MassFlow KilogramsPerSecond(this float value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double?)"/>
        public static MassFlow? KilogramsPerSecond(this float? value) => MassFlow.FromKilogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double)"/>
        public static MassFlow KilogramsPerSecond(this decimal value) => MassFlow.FromKilogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromKilogramsPerSecond(double?)"/>
        public static MassFlow? KilogramsPerSecond(this decimal? value) => MassFlow.FromKilogramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MegagramPerDay

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double)"/>
        public static MassFlow MegagramsPerDay(this int value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double?)"/>
        public static MassFlow? MegagramsPerDay(this int? value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double)"/>
        public static MassFlow MegagramsPerDay(this long value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double?)"/>
        public static MassFlow? MegagramsPerDay(this long? value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double)"/>
        public static MassFlow MegagramsPerDay(this double value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double?)"/>
        public static MassFlow? MegagramsPerDay(this double? value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double)"/>
        public static MassFlow MegagramsPerDay(this float value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double?)"/>
        public static MassFlow? MegagramsPerDay(this float? value) => MassFlow.FromMegagramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double)"/>
        public static MassFlow MegagramsPerDay(this decimal value) => MassFlow.FromMegagramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromMegagramsPerDay(double?)"/>
        public static MassFlow? MegagramsPerDay(this decimal? value) => MassFlow.FromMegagramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MegapoundPerDay

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double)"/>
        public static MassFlow MegapoundsPerDay(this int value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double?)"/>
        public static MassFlow? MegapoundsPerDay(this int? value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double)"/>
        public static MassFlow MegapoundsPerDay(this long value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double?)"/>
        public static MassFlow? MegapoundsPerDay(this long? value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double)"/>
        public static MassFlow MegapoundsPerDay(this double value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double?)"/>
        public static MassFlow? MegapoundsPerDay(this double? value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double)"/>
        public static MassFlow MegapoundsPerDay(this float value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double?)"/>
        public static MassFlow? MegapoundsPerDay(this float? value) => MassFlow.FromMegapoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double)"/>
        public static MassFlow MegapoundsPerDay(this decimal value) => MassFlow.FromMegapoundsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerDay(double?)"/>
        public static MassFlow? MegapoundsPerDay(this decimal? value) => MassFlow.FromMegapoundsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MegapoundPerHour

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double)"/>
        public static MassFlow MegapoundsPerHour(this int value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double?)"/>
        public static MassFlow? MegapoundsPerHour(this int? value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double)"/>
        public static MassFlow MegapoundsPerHour(this long value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double?)"/>
        public static MassFlow? MegapoundsPerHour(this long? value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double)"/>
        public static MassFlow MegapoundsPerHour(this double value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double?)"/>
        public static MassFlow? MegapoundsPerHour(this double? value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double)"/>
        public static MassFlow MegapoundsPerHour(this float value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double?)"/>
        public static MassFlow? MegapoundsPerHour(this float? value) => MassFlow.FromMegapoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double)"/>
        public static MassFlow MegapoundsPerHour(this decimal value) => MassFlow.FromMegapoundsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromMegapoundsPerHour(double?)"/>
        public static MassFlow? MegapoundsPerHour(this decimal? value) => MassFlow.FromMegapoundsPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicrogramPerDay

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double)"/>
        public static MassFlow MicrogramsPerDay(this int value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double?)"/>
        public static MassFlow? MicrogramsPerDay(this int? value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double)"/>
        public static MassFlow MicrogramsPerDay(this long value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double?)"/>
        public static MassFlow? MicrogramsPerDay(this long? value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double)"/>
        public static MassFlow MicrogramsPerDay(this double value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double?)"/>
        public static MassFlow? MicrogramsPerDay(this double? value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double)"/>
        public static MassFlow MicrogramsPerDay(this float value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double?)"/>
        public static MassFlow? MicrogramsPerDay(this float? value) => MassFlow.FromMicrogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double)"/>
        public static MassFlow MicrogramsPerDay(this decimal value) => MassFlow.FromMicrogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerDay(double?)"/>
        public static MassFlow? MicrogramsPerDay(this decimal? value) => MassFlow.FromMicrogramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicrogramPerSecond

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double)"/>
        public static MassFlow MicrogramsPerSecond(this int value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double?)"/>
        public static MassFlow? MicrogramsPerSecond(this int? value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double)"/>
        public static MassFlow MicrogramsPerSecond(this long value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double?)"/>
        public static MassFlow? MicrogramsPerSecond(this long? value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double)"/>
        public static MassFlow MicrogramsPerSecond(this double value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double?)"/>
        public static MassFlow? MicrogramsPerSecond(this double? value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double)"/>
        public static MassFlow MicrogramsPerSecond(this float value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double?)"/>
        public static MassFlow? MicrogramsPerSecond(this float? value) => MassFlow.FromMicrogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double)"/>
        public static MassFlow MicrogramsPerSecond(this decimal value) => MassFlow.FromMicrogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromMicrogramsPerSecond(double?)"/>
        public static MassFlow? MicrogramsPerSecond(this decimal? value) => MassFlow.FromMicrogramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MilligramPerDay

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double)"/>
        public static MassFlow MilligramsPerDay(this int value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double?)"/>
        public static MassFlow? MilligramsPerDay(this int? value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double)"/>
        public static MassFlow MilligramsPerDay(this long value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double?)"/>
        public static MassFlow? MilligramsPerDay(this long? value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double)"/>
        public static MassFlow MilligramsPerDay(this double value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double?)"/>
        public static MassFlow? MilligramsPerDay(this double? value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double)"/>
        public static MassFlow MilligramsPerDay(this float value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double?)"/>
        public static MassFlow? MilligramsPerDay(this float? value) => MassFlow.FromMilligramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double)"/>
        public static MassFlow MilligramsPerDay(this decimal value) => MassFlow.FromMilligramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromMilligramsPerDay(double?)"/>
        public static MassFlow? MilligramsPerDay(this decimal? value) => MassFlow.FromMilligramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MilligramPerSecond

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double)"/>
        public static MassFlow MilligramsPerSecond(this int value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double?)"/>
        public static MassFlow? MilligramsPerSecond(this int? value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double)"/>
        public static MassFlow MilligramsPerSecond(this long value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double?)"/>
        public static MassFlow? MilligramsPerSecond(this long? value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double)"/>
        public static MassFlow MilligramsPerSecond(this double value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double?)"/>
        public static MassFlow? MilligramsPerSecond(this double? value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double)"/>
        public static MassFlow MilligramsPerSecond(this float value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double?)"/>
        public static MassFlow? MilligramsPerSecond(this float? value) => MassFlow.FromMilligramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double)"/>
        public static MassFlow MilligramsPerSecond(this decimal value) => MassFlow.FromMilligramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromMilligramsPerSecond(double?)"/>
        public static MassFlow? MilligramsPerSecond(this decimal? value) => MassFlow.FromMilligramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanogramPerDay

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double)"/>
        public static MassFlow NanogramsPerDay(this int value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double?)"/>
        public static MassFlow? NanogramsPerDay(this int? value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double)"/>
        public static MassFlow NanogramsPerDay(this long value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double?)"/>
        public static MassFlow? NanogramsPerDay(this long? value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double)"/>
        public static MassFlow NanogramsPerDay(this double value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double?)"/>
        public static MassFlow? NanogramsPerDay(this double? value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double)"/>
        public static MassFlow NanogramsPerDay(this float value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double?)"/>
        public static MassFlow? NanogramsPerDay(this float? value) => MassFlow.FromNanogramsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double)"/>
        public static MassFlow NanogramsPerDay(this decimal value) => MassFlow.FromNanogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromNanogramsPerDay(double?)"/>
        public static MassFlow? NanogramsPerDay(this decimal? value) => MassFlow.FromNanogramsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanogramPerSecond

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double)"/>
        public static MassFlow NanogramsPerSecond(this int value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double?)"/>
        public static MassFlow? NanogramsPerSecond(this int? value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double)"/>
        public static MassFlow NanogramsPerSecond(this long value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double?)"/>
        public static MassFlow? NanogramsPerSecond(this long? value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double)"/>
        public static MassFlow NanogramsPerSecond(this double value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double?)"/>
        public static MassFlow? NanogramsPerSecond(this double? value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double)"/>
        public static MassFlow NanogramsPerSecond(this float value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double?)"/>
        public static MassFlow? NanogramsPerSecond(this float? value) => MassFlow.FromNanogramsPerSecond(value);

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double)"/>
        public static MassFlow NanogramsPerSecond(this decimal value) => MassFlow.FromNanogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromNanogramsPerSecond(double?)"/>
        public static MassFlow? NanogramsPerSecond(this decimal? value) => MassFlow.FromNanogramsPerSecond(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PoundPerDay

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double)"/>
        public static MassFlow PoundsPerDay(this int value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double?)"/>
        public static MassFlow? PoundsPerDay(this int? value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double)"/>
        public static MassFlow PoundsPerDay(this long value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double?)"/>
        public static MassFlow? PoundsPerDay(this long? value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double)"/>
        public static MassFlow PoundsPerDay(this double value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double?)"/>
        public static MassFlow? PoundsPerDay(this double? value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double)"/>
        public static MassFlow PoundsPerDay(this float value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double?)"/>
        public static MassFlow? PoundsPerDay(this float? value) => MassFlow.FromPoundsPerDay(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double)"/>
        public static MassFlow PoundsPerDay(this decimal value) => MassFlow.FromPoundsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromPoundsPerDay(double?)"/>
        public static MassFlow? PoundsPerDay(this decimal? value) => MassFlow.FromPoundsPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PoundPerHour

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double)"/>
        public static MassFlow PoundsPerHour(this int value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double?)"/>
        public static MassFlow? PoundsPerHour(this int? value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double)"/>
        public static MassFlow PoundsPerHour(this long value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double?)"/>
        public static MassFlow? PoundsPerHour(this long? value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double)"/>
        public static MassFlow PoundsPerHour(this double value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double?)"/>
        public static MassFlow? PoundsPerHour(this double? value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double)"/>
        public static MassFlow PoundsPerHour(this float value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double?)"/>
        public static MassFlow? PoundsPerHour(this float? value) => MassFlow.FromPoundsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double)"/>
        public static MassFlow PoundsPerHour(this decimal value) => MassFlow.FromPoundsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromPoundsPerHour(double?)"/>
        public static MassFlow? PoundsPerHour(this decimal? value) => MassFlow.FromPoundsPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region ShortTonPerHour

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double)"/>
        public static MassFlow ShortTonsPerHour(this int value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double?)"/>
        public static MassFlow? ShortTonsPerHour(this int? value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double)"/>
        public static MassFlow ShortTonsPerHour(this long value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double?)"/>
        public static MassFlow? ShortTonsPerHour(this long? value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double)"/>
        public static MassFlow ShortTonsPerHour(this double value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double?)"/>
        public static MassFlow? ShortTonsPerHour(this double? value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double)"/>
        public static MassFlow ShortTonsPerHour(this float value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double?)"/>
        public static MassFlow? ShortTonsPerHour(this float? value) => MassFlow.FromShortTonsPerHour(value);

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double)"/>
        public static MassFlow ShortTonsPerHour(this decimal value) => MassFlow.FromShortTonsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromShortTonsPerHour(double?)"/>
        public static MassFlow? ShortTonsPerHour(this decimal? value) => MassFlow.FromShortTonsPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region TonnePerDay

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double)"/>
        public static MassFlow TonnesPerDay(this int value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double?)"/>
        public static MassFlow? TonnesPerDay(this int? value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double)"/>
        public static MassFlow TonnesPerDay(this long value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double?)"/>
        public static MassFlow? TonnesPerDay(this long? value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double)"/>
        public static MassFlow TonnesPerDay(this double value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double?)"/>
        public static MassFlow? TonnesPerDay(this double? value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double)"/>
        public static MassFlow TonnesPerDay(this float value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double?)"/>
        public static MassFlow? TonnesPerDay(this float? value) => MassFlow.FromTonnesPerDay(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double)"/>
        public static MassFlow TonnesPerDay(this decimal value) => MassFlow.FromTonnesPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromTonnesPerDay(double?)"/>
        public static MassFlow? TonnesPerDay(this decimal? value) => MassFlow.FromTonnesPerDay(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region TonnePerHour

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double)"/>
        public static MassFlow TonnesPerHour(this int value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double?)"/>
        public static MassFlow? TonnesPerHour(this int? value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double)"/>
        public static MassFlow TonnesPerHour(this long value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double?)"/>
        public static MassFlow? TonnesPerHour(this long? value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double)"/>
        public static MassFlow TonnesPerHour(this double value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double?)"/>
        public static MassFlow? TonnesPerHour(this double? value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double)"/>
        public static MassFlow TonnesPerHour(this float value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double?)"/>
        public static MassFlow? TonnesPerHour(this float? value) => MassFlow.FromTonnesPerHour(value);

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double)"/>
        public static MassFlow TonnesPerHour(this decimal value) => MassFlow.FromTonnesPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow.FromTonnesPerHour(double?)"/>
        public static MassFlow? TonnesPerHour(this decimal? value) => MassFlow.FromTonnesPerHour(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

    }
}
#endif
