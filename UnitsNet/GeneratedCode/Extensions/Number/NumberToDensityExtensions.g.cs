//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyUnit.extra.cs files to add code to generated quantities.
//     Add Extensions\MyUnitExtensions.cs to decorate quantities with new behavior.
//     Add UnitDefinitions\MyUnit.json and run GeneratUnits.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2007 Andreas Gullberg Larsen (angularsen@gmail.com).
// https://github.com/angularsen/UnitsNet
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

using System;

// Windows Runtime Component does not support extension methods and method overloads: https://msdn.microsoft.com/en-us/library/br230301.aspx
#if !WINDOWS_UWP
namespace UnitsNet.Extensions.NumberToDensity
{
    public static class NumberToDensityExtensions
    {
        #region CentigramPerDeciliter

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double)"/>
        public static Density CentigramsPerDeciLiter(this int value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double?)"/>
        public static Density? CentigramsPerDeciLiter(this int? value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double)"/>
        public static Density CentigramsPerDeciLiter(this long value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double?)"/>
        public static Density? CentigramsPerDeciLiter(this long? value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double)"/>
        public static Density CentigramsPerDeciLiter(this double value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double?)"/>
        public static Density? CentigramsPerDeciLiter(this double? value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double)"/>
        public static Density CentigramsPerDeciLiter(this float value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double?)"/>
        public static Density? CentigramsPerDeciLiter(this float? value) => Density.FromCentigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double)"/>
        public static Density CentigramsPerDeciLiter(this decimal value) => Density.FromCentigramsPerDeciLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromCentigramsPerDeciLiter(double?)"/>
        public static Density? CentigramsPerDeciLiter(this decimal? value) => Density.FromCentigramsPerDeciLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CentigramPerLiter

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double)"/>
        public static Density CentigramsPerLiter(this int value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double?)"/>
        public static Density? CentigramsPerLiter(this int? value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double)"/>
        public static Density CentigramsPerLiter(this long value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double?)"/>
        public static Density? CentigramsPerLiter(this long? value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double)"/>
        public static Density CentigramsPerLiter(this double value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double?)"/>
        public static Density? CentigramsPerLiter(this double? value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double)"/>
        public static Density CentigramsPerLiter(this float value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double?)"/>
        public static Density? CentigramsPerLiter(this float? value) => Density.FromCentigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double)"/>
        public static Density CentigramsPerLiter(this decimal value) => Density.FromCentigramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromCentigramsPerLiter(double?)"/>
        public static Density? CentigramsPerLiter(this decimal? value) => Density.FromCentigramsPerLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region CentigramPerMilliliter

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double)"/>
        public static Density CentigramsPerMilliliter(this int value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double?)"/>
        public static Density? CentigramsPerMilliliter(this int? value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double)"/>
        public static Density CentigramsPerMilliliter(this long value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double?)"/>
        public static Density? CentigramsPerMilliliter(this long? value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double)"/>
        public static Density CentigramsPerMilliliter(this double value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double?)"/>
        public static Density? CentigramsPerMilliliter(this double? value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double)"/>
        public static Density CentigramsPerMilliliter(this float value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double?)"/>
        public static Density? CentigramsPerMilliliter(this float? value) => Density.FromCentigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double)"/>
        public static Density CentigramsPerMilliliter(this decimal value) => Density.FromCentigramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromCentigramsPerMilliliter(double?)"/>
        public static Density? CentigramsPerMilliliter(this decimal? value) => Density.FromCentigramsPerMilliliter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecigramPerDeciliter

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double)"/>
        public static Density DecigramsPerDeciLiter(this int value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double?)"/>
        public static Density? DecigramsPerDeciLiter(this int? value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double)"/>
        public static Density DecigramsPerDeciLiter(this long value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double?)"/>
        public static Density? DecigramsPerDeciLiter(this long? value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double)"/>
        public static Density DecigramsPerDeciLiter(this double value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double?)"/>
        public static Density? DecigramsPerDeciLiter(this double? value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double)"/>
        public static Density DecigramsPerDeciLiter(this float value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double?)"/>
        public static Density? DecigramsPerDeciLiter(this float? value) => Density.FromDecigramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double)"/>
        public static Density DecigramsPerDeciLiter(this decimal value) => Density.FromDecigramsPerDeciLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromDecigramsPerDeciLiter(double?)"/>
        public static Density? DecigramsPerDeciLiter(this decimal? value) => Density.FromDecigramsPerDeciLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecigramPerLiter

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double)"/>
        public static Density DecigramsPerLiter(this int value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double?)"/>
        public static Density? DecigramsPerLiter(this int? value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double)"/>
        public static Density DecigramsPerLiter(this long value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double?)"/>
        public static Density? DecigramsPerLiter(this long? value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double)"/>
        public static Density DecigramsPerLiter(this double value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double?)"/>
        public static Density? DecigramsPerLiter(this double? value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double)"/>
        public static Density DecigramsPerLiter(this float value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double?)"/>
        public static Density? DecigramsPerLiter(this float? value) => Density.FromDecigramsPerLiter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double)"/>
        public static Density DecigramsPerLiter(this decimal value) => Density.FromDecigramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromDecigramsPerLiter(double?)"/>
        public static Density? DecigramsPerLiter(this decimal? value) => Density.FromDecigramsPerLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region DecigramPerMilliliter

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double)"/>
        public static Density DecigramsPerMilliliter(this int value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double?)"/>
        public static Density? DecigramsPerMilliliter(this int? value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double)"/>
        public static Density DecigramsPerMilliliter(this long value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double?)"/>
        public static Density? DecigramsPerMilliliter(this long? value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double)"/>
        public static Density DecigramsPerMilliliter(this double value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double?)"/>
        public static Density? DecigramsPerMilliliter(this double? value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double)"/>
        public static Density DecigramsPerMilliliter(this float value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double?)"/>
        public static Density? DecigramsPerMilliliter(this float? value) => Density.FromDecigramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double)"/>
        public static Density DecigramsPerMilliliter(this decimal value) => Density.FromDecigramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromDecigramsPerMilliliter(double?)"/>
        public static Density? DecigramsPerMilliliter(this decimal? value) => Density.FromDecigramsPerMilliliter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerCubicCentimeter

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double)"/>
        public static Density GramsPerCubicCentimeter(this int value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double?)"/>
        public static Density? GramsPerCubicCentimeter(this int? value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double)"/>
        public static Density GramsPerCubicCentimeter(this long value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double?)"/>
        public static Density? GramsPerCubicCentimeter(this long? value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double)"/>
        public static Density GramsPerCubicCentimeter(this double value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double?)"/>
        public static Density? GramsPerCubicCentimeter(this double? value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double)"/>
        public static Density GramsPerCubicCentimeter(this float value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double?)"/>
        public static Density? GramsPerCubicCentimeter(this float? value) => Density.FromGramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double)"/>
        public static Density GramsPerCubicCentimeter(this decimal value) => Density.FromGramsPerCubicCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromGramsPerCubicCentimeter(double?)"/>
        public static Density? GramsPerCubicCentimeter(this decimal? value) => Density.FromGramsPerCubicCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerCubicMeter

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double)"/>
        public static Density GramsPerCubicMeter(this int value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double?)"/>
        public static Density? GramsPerCubicMeter(this int? value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double)"/>
        public static Density GramsPerCubicMeter(this long value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double?)"/>
        public static Density? GramsPerCubicMeter(this long? value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double)"/>
        public static Density GramsPerCubicMeter(this double value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double?)"/>
        public static Density? GramsPerCubicMeter(this double? value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double)"/>
        public static Density GramsPerCubicMeter(this float value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double?)"/>
        public static Density? GramsPerCubicMeter(this float? value) => Density.FromGramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double)"/>
        public static Density GramsPerCubicMeter(this decimal value) => Density.FromGramsPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromGramsPerCubicMeter(double?)"/>
        public static Density? GramsPerCubicMeter(this decimal? value) => Density.FromGramsPerCubicMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerCubicMillimeter

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double)"/>
        public static Density GramsPerCubicMillimeter(this int value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double?)"/>
        public static Density? GramsPerCubicMillimeter(this int? value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double)"/>
        public static Density GramsPerCubicMillimeter(this long value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double?)"/>
        public static Density? GramsPerCubicMillimeter(this long? value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double)"/>
        public static Density GramsPerCubicMillimeter(this double value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double?)"/>
        public static Density? GramsPerCubicMillimeter(this double? value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double)"/>
        public static Density GramsPerCubicMillimeter(this float value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double?)"/>
        public static Density? GramsPerCubicMillimeter(this float? value) => Density.FromGramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double)"/>
        public static Density GramsPerCubicMillimeter(this decimal value) => Density.FromGramsPerCubicMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromGramsPerCubicMillimeter(double?)"/>
        public static Density? GramsPerCubicMillimeter(this decimal? value) => Density.FromGramsPerCubicMillimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerDeciliter

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double)"/>
        public static Density GramsPerDeciLiter(this int value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double?)"/>
        public static Density? GramsPerDeciLiter(this int? value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double)"/>
        public static Density GramsPerDeciLiter(this long value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double?)"/>
        public static Density? GramsPerDeciLiter(this long? value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double)"/>
        public static Density GramsPerDeciLiter(this double value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double?)"/>
        public static Density? GramsPerDeciLiter(this double? value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double)"/>
        public static Density GramsPerDeciLiter(this float value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double?)"/>
        public static Density? GramsPerDeciLiter(this float? value) => Density.FromGramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double)"/>
        public static Density GramsPerDeciLiter(this decimal value) => Density.FromGramsPerDeciLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromGramsPerDeciLiter(double?)"/>
        public static Density? GramsPerDeciLiter(this decimal? value) => Density.FromGramsPerDeciLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerLiter

        /// <inheritdoc cref="Density.FromGramsPerLiter(double)"/>
        public static Density GramsPerLiter(this int value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double?)"/>
        public static Density? GramsPerLiter(this int? value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double)"/>
        public static Density GramsPerLiter(this long value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double?)"/>
        public static Density? GramsPerLiter(this long? value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double)"/>
        public static Density GramsPerLiter(this double value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double?)"/>
        public static Density? GramsPerLiter(this double? value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double)"/>
        public static Density GramsPerLiter(this float value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double?)"/>
        public static Density? GramsPerLiter(this float? value) => Density.FromGramsPerLiter(value);

        /// <inheritdoc cref="Density.FromGramsPerLiter(double)"/>
        public static Density GramsPerLiter(this decimal value) => Density.FromGramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromGramsPerLiter(double?)"/>
        public static Density? GramsPerLiter(this decimal? value) => Density.FromGramsPerLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region GramPerMilliliter

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double)"/>
        public static Density GramsPerMilliliter(this int value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double?)"/>
        public static Density? GramsPerMilliliter(this int? value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double)"/>
        public static Density GramsPerMilliliter(this long value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double?)"/>
        public static Density? GramsPerMilliliter(this long? value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double)"/>
        public static Density GramsPerMilliliter(this double value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double?)"/>
        public static Density? GramsPerMilliliter(this double? value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double)"/>
        public static Density GramsPerMilliliter(this float value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double?)"/>
        public static Density? GramsPerMilliliter(this float? value) => Density.FromGramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double)"/>
        public static Density GramsPerMilliliter(this decimal value) => Density.FromGramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromGramsPerMilliliter(double?)"/>
        public static Density? GramsPerMilliliter(this decimal? value) => Density.FromGramsPerMilliliter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilogramPerCubicCentimeter

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double)"/>
        public static Density KilogramsPerCubicCentimeter(this int value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double?)"/>
        public static Density? KilogramsPerCubicCentimeter(this int? value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double)"/>
        public static Density KilogramsPerCubicCentimeter(this long value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double?)"/>
        public static Density? KilogramsPerCubicCentimeter(this long? value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double)"/>
        public static Density KilogramsPerCubicCentimeter(this double value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double?)"/>
        public static Density? KilogramsPerCubicCentimeter(this double? value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double)"/>
        public static Density KilogramsPerCubicCentimeter(this float value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double?)"/>
        public static Density? KilogramsPerCubicCentimeter(this float? value) => Density.FromKilogramsPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double)"/>
        public static Density KilogramsPerCubicCentimeter(this decimal value) => Density.FromKilogramsPerCubicCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromKilogramsPerCubicCentimeter(double?)"/>
        public static Density? KilogramsPerCubicCentimeter(this decimal? value) => Density.FromKilogramsPerCubicCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilogramPerCubicMeter

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double)"/>
        public static Density KilogramsPerCubicMeter(this int value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double?)"/>
        public static Density? KilogramsPerCubicMeter(this int? value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double)"/>
        public static Density KilogramsPerCubicMeter(this long value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double?)"/>
        public static Density? KilogramsPerCubicMeter(this long? value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double)"/>
        public static Density KilogramsPerCubicMeter(this double value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double?)"/>
        public static Density? KilogramsPerCubicMeter(this double? value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double)"/>
        public static Density KilogramsPerCubicMeter(this float value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double?)"/>
        public static Density? KilogramsPerCubicMeter(this float? value) => Density.FromKilogramsPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double)"/>
        public static Density KilogramsPerCubicMeter(this decimal value) => Density.FromKilogramsPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMeter(double?)"/>
        public static Density? KilogramsPerCubicMeter(this decimal? value) => Density.FromKilogramsPerCubicMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilogramPerCubicMillimeter

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double)"/>
        public static Density KilogramsPerCubicMillimeter(this int value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double?)"/>
        public static Density? KilogramsPerCubicMillimeter(this int? value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double)"/>
        public static Density KilogramsPerCubicMillimeter(this long value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double?)"/>
        public static Density? KilogramsPerCubicMillimeter(this long? value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double)"/>
        public static Density KilogramsPerCubicMillimeter(this double value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double?)"/>
        public static Density? KilogramsPerCubicMillimeter(this double? value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double)"/>
        public static Density KilogramsPerCubicMillimeter(this float value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double?)"/>
        public static Density? KilogramsPerCubicMillimeter(this float? value) => Density.FromKilogramsPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double)"/>
        public static Density KilogramsPerCubicMillimeter(this decimal value) => Density.FromKilogramsPerCubicMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromKilogramsPerCubicMillimeter(double?)"/>
        public static Density? KilogramsPerCubicMillimeter(this decimal? value) => Density.FromKilogramsPerCubicMillimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilopoundPerCubicFoot

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double)"/>
        public static Density KilopoundsPerCubicFoot(this int value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double?)"/>
        public static Density? KilopoundsPerCubicFoot(this int? value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double)"/>
        public static Density KilopoundsPerCubicFoot(this long value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double?)"/>
        public static Density? KilopoundsPerCubicFoot(this long? value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double)"/>
        public static Density KilopoundsPerCubicFoot(this double value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double?)"/>
        public static Density? KilopoundsPerCubicFoot(this double? value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double)"/>
        public static Density KilopoundsPerCubicFoot(this float value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double?)"/>
        public static Density? KilopoundsPerCubicFoot(this float? value) => Density.FromKilopoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double)"/>
        public static Density KilopoundsPerCubicFoot(this decimal value) => Density.FromKilopoundsPerCubicFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicFoot(double?)"/>
        public static Density? KilopoundsPerCubicFoot(this decimal? value) => Density.FromKilopoundsPerCubicFoot(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region KilopoundPerCubicInch

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double)"/>
        public static Density KilopoundsPerCubicInch(this int value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double?)"/>
        public static Density? KilopoundsPerCubicInch(this int? value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double)"/>
        public static Density KilopoundsPerCubicInch(this long value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double?)"/>
        public static Density? KilopoundsPerCubicInch(this long? value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double)"/>
        public static Density KilopoundsPerCubicInch(this double value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double?)"/>
        public static Density? KilopoundsPerCubicInch(this double? value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double)"/>
        public static Density KilopoundsPerCubicInch(this float value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double?)"/>
        public static Density? KilopoundsPerCubicInch(this float? value) => Density.FromKilopoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double)"/>
        public static Density KilopoundsPerCubicInch(this decimal value) => Density.FromKilopoundsPerCubicInch(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromKilopoundsPerCubicInch(double?)"/>
        public static Density? KilopoundsPerCubicInch(this decimal? value) => Density.FromKilopoundsPerCubicInch(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicrogramPerDeciliter

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double)"/>
        public static Density MicrogramsPerDeciLiter(this int value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double?)"/>
        public static Density? MicrogramsPerDeciLiter(this int? value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double)"/>
        public static Density MicrogramsPerDeciLiter(this long value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double?)"/>
        public static Density? MicrogramsPerDeciLiter(this long? value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double)"/>
        public static Density MicrogramsPerDeciLiter(this double value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double?)"/>
        public static Density? MicrogramsPerDeciLiter(this double? value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double)"/>
        public static Density MicrogramsPerDeciLiter(this float value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double?)"/>
        public static Density? MicrogramsPerDeciLiter(this float? value) => Density.FromMicrogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double)"/>
        public static Density MicrogramsPerDeciLiter(this decimal value) => Density.FromMicrogramsPerDeciLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromMicrogramsPerDeciLiter(double?)"/>
        public static Density? MicrogramsPerDeciLiter(this decimal? value) => Density.FromMicrogramsPerDeciLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicrogramPerLiter

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double)"/>
        public static Density MicrogramsPerLiter(this int value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double?)"/>
        public static Density? MicrogramsPerLiter(this int? value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double)"/>
        public static Density MicrogramsPerLiter(this long value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double?)"/>
        public static Density? MicrogramsPerLiter(this long? value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double)"/>
        public static Density MicrogramsPerLiter(this double value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double?)"/>
        public static Density? MicrogramsPerLiter(this double? value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double)"/>
        public static Density MicrogramsPerLiter(this float value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double?)"/>
        public static Density? MicrogramsPerLiter(this float? value) => Density.FromMicrogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double)"/>
        public static Density MicrogramsPerLiter(this decimal value) => Density.FromMicrogramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromMicrogramsPerLiter(double?)"/>
        public static Density? MicrogramsPerLiter(this decimal? value) => Density.FromMicrogramsPerLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MicrogramPerMilliliter

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double)"/>
        public static Density MicrogramsPerMilliliter(this int value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double?)"/>
        public static Density? MicrogramsPerMilliliter(this int? value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double)"/>
        public static Density MicrogramsPerMilliliter(this long value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double?)"/>
        public static Density? MicrogramsPerMilliliter(this long? value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double)"/>
        public static Density MicrogramsPerMilliliter(this double value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double?)"/>
        public static Density? MicrogramsPerMilliliter(this double? value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double)"/>
        public static Density MicrogramsPerMilliliter(this float value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double?)"/>
        public static Density? MicrogramsPerMilliliter(this float? value) => Density.FromMicrogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double)"/>
        public static Density MicrogramsPerMilliliter(this decimal value) => Density.FromMicrogramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromMicrogramsPerMilliliter(double?)"/>
        public static Density? MicrogramsPerMilliliter(this decimal? value) => Density.FromMicrogramsPerMilliliter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MilligramPerDeciliter

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double)"/>
        public static Density MilligramsPerDeciLiter(this int value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double?)"/>
        public static Density? MilligramsPerDeciLiter(this int? value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double)"/>
        public static Density MilligramsPerDeciLiter(this long value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double?)"/>
        public static Density? MilligramsPerDeciLiter(this long? value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double)"/>
        public static Density MilligramsPerDeciLiter(this double value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double?)"/>
        public static Density? MilligramsPerDeciLiter(this double? value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double)"/>
        public static Density MilligramsPerDeciLiter(this float value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double?)"/>
        public static Density? MilligramsPerDeciLiter(this float? value) => Density.FromMilligramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double)"/>
        public static Density MilligramsPerDeciLiter(this decimal value) => Density.FromMilligramsPerDeciLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromMilligramsPerDeciLiter(double?)"/>
        public static Density? MilligramsPerDeciLiter(this decimal? value) => Density.FromMilligramsPerDeciLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MilligramPerLiter

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double)"/>
        public static Density MilligramsPerLiter(this int value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double?)"/>
        public static Density? MilligramsPerLiter(this int? value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double)"/>
        public static Density MilligramsPerLiter(this long value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double?)"/>
        public static Density? MilligramsPerLiter(this long? value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double)"/>
        public static Density MilligramsPerLiter(this double value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double?)"/>
        public static Density? MilligramsPerLiter(this double? value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double)"/>
        public static Density MilligramsPerLiter(this float value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double?)"/>
        public static Density? MilligramsPerLiter(this float? value) => Density.FromMilligramsPerLiter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double)"/>
        public static Density MilligramsPerLiter(this decimal value) => Density.FromMilligramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromMilligramsPerLiter(double?)"/>
        public static Density? MilligramsPerLiter(this decimal? value) => Density.FromMilligramsPerLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region MilligramPerMilliliter

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double)"/>
        public static Density MilligramsPerMilliliter(this int value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double?)"/>
        public static Density? MilligramsPerMilliliter(this int? value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double)"/>
        public static Density MilligramsPerMilliliter(this long value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double?)"/>
        public static Density? MilligramsPerMilliliter(this long? value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double)"/>
        public static Density MilligramsPerMilliliter(this double value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double?)"/>
        public static Density? MilligramsPerMilliliter(this double? value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double)"/>
        public static Density MilligramsPerMilliliter(this float value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double?)"/>
        public static Density? MilligramsPerMilliliter(this float? value) => Density.FromMilligramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double)"/>
        public static Density MilligramsPerMilliliter(this decimal value) => Density.FromMilligramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromMilligramsPerMilliliter(double?)"/>
        public static Density? MilligramsPerMilliliter(this decimal? value) => Density.FromMilligramsPerMilliliter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanogramPerDeciliter

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double)"/>
        public static Density NanogramsPerDeciLiter(this int value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double?)"/>
        public static Density? NanogramsPerDeciLiter(this int? value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double)"/>
        public static Density NanogramsPerDeciLiter(this long value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double?)"/>
        public static Density? NanogramsPerDeciLiter(this long? value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double)"/>
        public static Density NanogramsPerDeciLiter(this double value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double?)"/>
        public static Density? NanogramsPerDeciLiter(this double? value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double)"/>
        public static Density NanogramsPerDeciLiter(this float value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double?)"/>
        public static Density? NanogramsPerDeciLiter(this float? value) => Density.FromNanogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double)"/>
        public static Density NanogramsPerDeciLiter(this decimal value) => Density.FromNanogramsPerDeciLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromNanogramsPerDeciLiter(double?)"/>
        public static Density? NanogramsPerDeciLiter(this decimal? value) => Density.FromNanogramsPerDeciLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanogramPerLiter

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double)"/>
        public static Density NanogramsPerLiter(this int value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double?)"/>
        public static Density? NanogramsPerLiter(this int? value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double)"/>
        public static Density NanogramsPerLiter(this long value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double?)"/>
        public static Density? NanogramsPerLiter(this long? value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double)"/>
        public static Density NanogramsPerLiter(this double value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double?)"/>
        public static Density? NanogramsPerLiter(this double? value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double)"/>
        public static Density NanogramsPerLiter(this float value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double?)"/>
        public static Density? NanogramsPerLiter(this float? value) => Density.FromNanogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double)"/>
        public static Density NanogramsPerLiter(this decimal value) => Density.FromNanogramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromNanogramsPerLiter(double?)"/>
        public static Density? NanogramsPerLiter(this decimal? value) => Density.FromNanogramsPerLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region NanogramPerMilliliter

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double)"/>
        public static Density NanogramsPerMilliliter(this int value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double?)"/>
        public static Density? NanogramsPerMilliliter(this int? value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double)"/>
        public static Density NanogramsPerMilliliter(this long value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double?)"/>
        public static Density? NanogramsPerMilliliter(this long? value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double)"/>
        public static Density NanogramsPerMilliliter(this double value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double?)"/>
        public static Density? NanogramsPerMilliliter(this double? value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double)"/>
        public static Density NanogramsPerMilliliter(this float value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double?)"/>
        public static Density? NanogramsPerMilliliter(this float? value) => Density.FromNanogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double)"/>
        public static Density NanogramsPerMilliliter(this decimal value) => Density.FromNanogramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromNanogramsPerMilliliter(double?)"/>
        public static Density? NanogramsPerMilliliter(this decimal? value) => Density.FromNanogramsPerMilliliter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PicogramPerDeciliter

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double)"/>
        public static Density PicogramsPerDeciLiter(this int value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double?)"/>
        public static Density? PicogramsPerDeciLiter(this int? value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double)"/>
        public static Density PicogramsPerDeciLiter(this long value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double?)"/>
        public static Density? PicogramsPerDeciLiter(this long? value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double)"/>
        public static Density PicogramsPerDeciLiter(this double value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double?)"/>
        public static Density? PicogramsPerDeciLiter(this double? value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double)"/>
        public static Density PicogramsPerDeciLiter(this float value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double?)"/>
        public static Density? PicogramsPerDeciLiter(this float? value) => Density.FromPicogramsPerDeciLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double)"/>
        public static Density PicogramsPerDeciLiter(this decimal value) => Density.FromPicogramsPerDeciLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromPicogramsPerDeciLiter(double?)"/>
        public static Density? PicogramsPerDeciLiter(this decimal? value) => Density.FromPicogramsPerDeciLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PicogramPerLiter

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double)"/>
        public static Density PicogramsPerLiter(this int value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double?)"/>
        public static Density? PicogramsPerLiter(this int? value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double)"/>
        public static Density PicogramsPerLiter(this long value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double?)"/>
        public static Density? PicogramsPerLiter(this long? value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double)"/>
        public static Density PicogramsPerLiter(this double value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double?)"/>
        public static Density? PicogramsPerLiter(this double? value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double)"/>
        public static Density PicogramsPerLiter(this float value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double?)"/>
        public static Density? PicogramsPerLiter(this float? value) => Density.FromPicogramsPerLiter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double)"/>
        public static Density PicogramsPerLiter(this decimal value) => Density.FromPicogramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromPicogramsPerLiter(double?)"/>
        public static Density? PicogramsPerLiter(this decimal? value) => Density.FromPicogramsPerLiter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PicogramPerMilliliter

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double)"/>
        public static Density PicogramsPerMilliliter(this int value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double?)"/>
        public static Density? PicogramsPerMilliliter(this int? value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double)"/>
        public static Density PicogramsPerMilliliter(this long value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double?)"/>
        public static Density? PicogramsPerMilliliter(this long? value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double)"/>
        public static Density PicogramsPerMilliliter(this double value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double?)"/>
        public static Density? PicogramsPerMilliliter(this double? value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double)"/>
        public static Density PicogramsPerMilliliter(this float value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double?)"/>
        public static Density? PicogramsPerMilliliter(this float? value) => Density.FromPicogramsPerMilliliter(value);

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double)"/>
        public static Density PicogramsPerMilliliter(this decimal value) => Density.FromPicogramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromPicogramsPerMilliliter(double?)"/>
        public static Density? PicogramsPerMilliliter(this decimal? value) => Density.FromPicogramsPerMilliliter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PoundPerCubicFoot

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double)"/>
        public static Density PoundsPerCubicFoot(this int value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double?)"/>
        public static Density? PoundsPerCubicFoot(this int? value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double)"/>
        public static Density PoundsPerCubicFoot(this long value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double?)"/>
        public static Density? PoundsPerCubicFoot(this long? value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double)"/>
        public static Density PoundsPerCubicFoot(this double value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double?)"/>
        public static Density? PoundsPerCubicFoot(this double? value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double)"/>
        public static Density PoundsPerCubicFoot(this float value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double?)"/>
        public static Density? PoundsPerCubicFoot(this float? value) => Density.FromPoundsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double)"/>
        public static Density PoundsPerCubicFoot(this decimal value) => Density.FromPoundsPerCubicFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromPoundsPerCubicFoot(double?)"/>
        public static Density? PoundsPerCubicFoot(this decimal? value) => Density.FromPoundsPerCubicFoot(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region PoundPerCubicInch

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double)"/>
        public static Density PoundsPerCubicInch(this int value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double?)"/>
        public static Density? PoundsPerCubicInch(this int? value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double)"/>
        public static Density PoundsPerCubicInch(this long value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double?)"/>
        public static Density? PoundsPerCubicInch(this long? value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double)"/>
        public static Density PoundsPerCubicInch(this double value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double?)"/>
        public static Density? PoundsPerCubicInch(this double? value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double)"/>
        public static Density PoundsPerCubicInch(this float value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double?)"/>
        public static Density? PoundsPerCubicInch(this float? value) => Density.FromPoundsPerCubicInch(value);

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double)"/>
        public static Density PoundsPerCubicInch(this decimal value) => Density.FromPoundsPerCubicInch(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromPoundsPerCubicInch(double?)"/>
        public static Density? PoundsPerCubicInch(this decimal? value) => Density.FromPoundsPerCubicInch(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region SlugPerCubicFoot

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double)"/>
        public static Density SlugsPerCubicFoot(this int value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double?)"/>
        public static Density? SlugsPerCubicFoot(this int? value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double)"/>
        public static Density SlugsPerCubicFoot(this long value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double?)"/>
        public static Density? SlugsPerCubicFoot(this long? value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double)"/>
        public static Density SlugsPerCubicFoot(this double value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double?)"/>
        public static Density? SlugsPerCubicFoot(this double? value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double)"/>
        public static Density SlugsPerCubicFoot(this float value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double?)"/>
        public static Density? SlugsPerCubicFoot(this float? value) => Density.FromSlugsPerCubicFoot(value);

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double)"/>
        public static Density SlugsPerCubicFoot(this decimal value) => Density.FromSlugsPerCubicFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromSlugsPerCubicFoot(double?)"/>
        public static Density? SlugsPerCubicFoot(this decimal? value) => Density.FromSlugsPerCubicFoot(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region TonnePerCubicCentimeter

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double)"/>
        public static Density TonnesPerCubicCentimeter(this int value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double?)"/>
        public static Density? TonnesPerCubicCentimeter(this int? value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double)"/>
        public static Density TonnesPerCubicCentimeter(this long value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double?)"/>
        public static Density? TonnesPerCubicCentimeter(this long? value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double)"/>
        public static Density TonnesPerCubicCentimeter(this double value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double?)"/>
        public static Density? TonnesPerCubicCentimeter(this double? value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double)"/>
        public static Density TonnesPerCubicCentimeter(this float value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double?)"/>
        public static Density? TonnesPerCubicCentimeter(this float? value) => Density.FromTonnesPerCubicCentimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double)"/>
        public static Density TonnesPerCubicCentimeter(this decimal value) => Density.FromTonnesPerCubicCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromTonnesPerCubicCentimeter(double?)"/>
        public static Density? TonnesPerCubicCentimeter(this decimal? value) => Density.FromTonnesPerCubicCentimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region TonnePerCubicMeter

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double)"/>
        public static Density TonnesPerCubicMeter(this int value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double?)"/>
        public static Density? TonnesPerCubicMeter(this int? value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double)"/>
        public static Density TonnesPerCubicMeter(this long value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double?)"/>
        public static Density? TonnesPerCubicMeter(this long? value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double)"/>
        public static Density TonnesPerCubicMeter(this double value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double?)"/>
        public static Density? TonnesPerCubicMeter(this double? value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double)"/>
        public static Density TonnesPerCubicMeter(this float value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double?)"/>
        public static Density? TonnesPerCubicMeter(this float? value) => Density.FromTonnesPerCubicMeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double)"/>
        public static Density TonnesPerCubicMeter(this decimal value) => Density.FromTonnesPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromTonnesPerCubicMeter(double?)"/>
        public static Density? TonnesPerCubicMeter(this decimal? value) => Density.FromTonnesPerCubicMeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

        #region TonnePerCubicMillimeter

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double)"/>
        public static Density TonnesPerCubicMillimeter(this int value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double?)"/>
        public static Density? TonnesPerCubicMillimeter(this int? value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double)"/>
        public static Density TonnesPerCubicMillimeter(this long value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double?)"/>
        public static Density? TonnesPerCubicMillimeter(this long? value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double)"/>
        public static Density TonnesPerCubicMillimeter(this double value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double?)"/>
        public static Density? TonnesPerCubicMillimeter(this double? value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double)"/>
        public static Density TonnesPerCubicMillimeter(this float value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double?)"/>
        public static Density? TonnesPerCubicMillimeter(this float? value) => Density.FromTonnesPerCubicMillimeter(value);

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double)"/>
        public static Density TonnesPerCubicMillimeter(this decimal value) => Density.FromTonnesPerCubicMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Density.FromTonnesPerCubicMillimeter(double?)"/>
        public static Density? TonnesPerCubicMillimeter(this decimal? value) => Density.FromTonnesPerCubicMillimeter(value == null ? (double?)null : Convert.ToDouble(value.Value));

        #endregion

    }
}
#endif
