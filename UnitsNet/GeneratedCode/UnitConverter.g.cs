//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com).
// https://github.com/angularsen/UnitsNet
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

using System;
using UnitsNet.Units;

// ReSharper disable RedundantCommaInArrayInitializer
// ReSharper disable once CheckNamespace

namespace UnitsNet
{
    public sealed partial class UnitConverter
    {
        public static void RegisterDefaultConversions(UnitConverter unitConverter)
        {
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.CentimeterPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.CentimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.CentimeterPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.DecimeterPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.DecimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.DecimeterPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.FootPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.FootPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.FootPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.InchPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.InchPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.InchPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KilometerPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.KilometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KilometerPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KnotPerHour, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.KnotPerHour));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KnotPerHour, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KnotPerMinute, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.KnotPerMinute));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KnotPerMinute, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.KnotPerSecond, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.KnotPerSecond));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.KnotPerSecond, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, Acceleration.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.MicrometerPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.MicrometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.MicrometerPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.MillimeterPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.MillimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.MillimeterPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.NanometerPerSecondSquared, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.NanometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.NanometerPerSecondSquared, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration>(Acceleration.BaseUnit, AccelerationUnit.StandardGravity, (q) => ((Acceleration)q).ToUnit(AccelerationUnit.StandardGravity));
            unitConverter.SetConversionFunction<Acceleration>(AccelerationUnit.StandardGravity, Acceleration.BaseUnit, (q) => ((Acceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Centimole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.Centimole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Centimole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.CentipoundMole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.CentipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.CentipoundMole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Decimole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.Decimole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Decimole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.DecipoundMole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.DecipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.DecipoundMole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Kilomole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.Kilomole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Kilomole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.KilopoundMole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.KilopoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.KilopoundMole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Megamole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.Megamole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Megamole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Micromole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.Micromole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Micromole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.MicropoundMole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.MicropoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.MicropoundMole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Millimole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.Millimole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Millimole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.MillipoundMole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.MillipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.MillipoundMole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.Nanomole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.Nanomole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.Nanomole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.NanopoundMole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.NanopoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.NanopoundMole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstance.BaseUnit, AmountOfSubstanceUnit.PoundMole, (q) => ((AmountOfSubstance)q).ToUnit(AmountOfSubstanceUnit.PoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance>(AmountOfSubstanceUnit.PoundMole, AmountOfSubstance.BaseUnit, (q) => ((AmountOfSubstance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatioUnit.DecibelMicrovolt, (q) => ((AmplitudeRatio)q).ToUnit(AmplitudeRatioUnit.DecibelMicrovolt));
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatioUnit.DecibelMicrovolt, AmplitudeRatio.BaseUnit, (q) => ((AmplitudeRatio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatioUnit.DecibelMillivolt, (q) => ((AmplitudeRatio)q).ToUnit(AmplitudeRatioUnit.DecibelMillivolt));
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatioUnit.DecibelMillivolt, AmplitudeRatio.BaseUnit, (q) => ((AmplitudeRatio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatioUnit.DecibelUnloaded, (q) => ((AmplitudeRatio)q).ToUnit(AmplitudeRatioUnit.DecibelUnloaded));
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatioUnit.DecibelUnloaded, AmplitudeRatio.BaseUnit, (q) => ((AmplitudeRatio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio>(AmplitudeRatio.BaseUnit, AmplitudeRatio.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Arcminute, (q) => ((Angle)q).ToUnit(AngleUnit.Arcminute));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Arcminute, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Arcsecond, (q) => ((Angle)q).ToUnit(AngleUnit.Arcsecond));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Arcsecond, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Centiradian, (q) => ((Angle)q).ToUnit(AngleUnit.Centiradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Centiradian, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Deciradian, (q) => ((Angle)q).ToUnit(AngleUnit.Deciradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Deciradian, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, Angle.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Gradian, (q) => ((Angle)q).ToUnit(AngleUnit.Gradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Gradian, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Microdegree, (q) => ((Angle)q).ToUnit(AngleUnit.Microdegree));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Microdegree, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Microradian, (q) => ((Angle)q).ToUnit(AngleUnit.Microradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Microradian, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Millidegree, (q) => ((Angle)q).ToUnit(AngleUnit.Millidegree));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Millidegree, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Milliradian, (q) => ((Angle)q).ToUnit(AngleUnit.Milliradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Milliradian, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Nanodegree, (q) => ((Angle)q).ToUnit(AngleUnit.Nanodegree));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Nanodegree, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Nanoradian, (q) => ((Angle)q).ToUnit(AngleUnit.Nanoradian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Nanoradian, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Radian, (q) => ((Angle)q).ToUnit(AngleUnit.Radian));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Radian, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Angle>(Angle.BaseUnit, AngleUnit.Revolution, (q) => ((Angle)q).ToUnit(AngleUnit.Revolution));
            unitConverter.SetConversionFunction<Angle>(AngleUnit.Revolution, Angle.BaseUnit, (q) => ((Angle)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergy.BaseUnit, ApparentEnergyUnit.KilovoltampereHour, (q) => ((ApparentEnergy)q).ToUnit(ApparentEnergyUnit.KilovoltampereHour));
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergyUnit.KilovoltampereHour, ApparentEnergy.BaseUnit, (q) => ((ApparentEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergy.BaseUnit, ApparentEnergyUnit.MegavoltampereHour, (q) => ((ApparentEnergy)q).ToUnit(ApparentEnergyUnit.MegavoltampereHour));
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergyUnit.MegavoltampereHour, ApparentEnergy.BaseUnit, (q) => ((ApparentEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy>(ApparentEnergy.BaseUnit, ApparentEnergy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPowerUnit.Gigavoltampere, (q) => ((ApparentPower)q).ToUnit(ApparentPowerUnit.Gigavoltampere));
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPowerUnit.Gigavoltampere, ApparentPower.BaseUnit, (q) => ((ApparentPower)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPowerUnit.Kilovoltampere, (q) => ((ApparentPower)q).ToUnit(ApparentPowerUnit.Kilovoltampere));
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPowerUnit.Kilovoltampere, ApparentPower.BaseUnit, (q) => ((ApparentPower)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPowerUnit.Megavoltampere, (q) => ((ApparentPower)q).ToUnit(ApparentPowerUnit.Megavoltampere));
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPowerUnit.Megavoltampere, ApparentPower.BaseUnit, (q) => ((ApparentPower)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower>(ApparentPower.BaseUnit, ApparentPower.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.Acre, (q) => ((Area)q).ToUnit(AreaUnit.Acre));
            unitConverter.SetConversionFunction<Area>(AreaUnit.Acre, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.Hectare, (q) => ((Area)q).ToUnit(AreaUnit.Hectare));
            unitConverter.SetConversionFunction<Area>(AreaUnit.Hectare, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareCentimeter, (q) => ((Area)q).ToUnit(AreaUnit.SquareCentimeter));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareCentimeter, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareDecimeter, (q) => ((Area)q).ToUnit(AreaUnit.SquareDecimeter));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareDecimeter, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareFoot, (q) => ((Area)q).ToUnit(AreaUnit.SquareFoot));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareFoot, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareInch, (q) => ((Area)q).ToUnit(AreaUnit.SquareInch));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareInch, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareKilometer, (q) => ((Area)q).ToUnit(AreaUnit.SquareKilometer));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareKilometer, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, Area.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareMicrometer, (q) => ((Area)q).ToUnit(AreaUnit.SquareMicrometer));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareMicrometer, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareMile, (q) => ((Area)q).ToUnit(AreaUnit.SquareMile));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareMile, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareMillimeter, (q) => ((Area)q).ToUnit(AreaUnit.SquareMillimeter));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareMillimeter, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.SquareYard, (q) => ((Area)q).ToUnit(AreaUnit.SquareYard));
            unitConverter.SetConversionFunction<Area>(AreaUnit.SquareYard, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Area>(Area.BaseUnit, AreaUnit.UsSurveySquareFoot, (q) => ((Area)q).ToUnit(AreaUnit.UsSurveySquareFoot));
            unitConverter.SetConversionFunction<Area>(AreaUnit.UsSurveySquareFoot, Area.BaseUnit, (q) => ((Area)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AreaDensity>(AreaDensity.BaseUnit, AreaDensity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.CentimeterToTheFourth, (q) => ((AreaMomentOfInertia)q).ToUnit(AreaMomentOfInertiaUnit.CentimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.CentimeterToTheFourth, AreaMomentOfInertia.BaseUnit, (q) => ((AreaMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.DecimeterToTheFourth, (q) => ((AreaMomentOfInertia)q).ToUnit(AreaMomentOfInertiaUnit.DecimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.DecimeterToTheFourth, AreaMomentOfInertia.BaseUnit, (q) => ((AreaMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.FootToTheFourth, (q) => ((AreaMomentOfInertia)q).ToUnit(AreaMomentOfInertiaUnit.FootToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.FootToTheFourth, AreaMomentOfInertia.BaseUnit, (q) => ((AreaMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.InchToTheFourth, (q) => ((AreaMomentOfInertia)q).ToUnit(AreaMomentOfInertiaUnit.InchToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.InchToTheFourth, AreaMomentOfInertia.BaseUnit, (q) => ((AreaMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertia.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertia.BaseUnit, AreaMomentOfInertiaUnit.MillimeterToTheFourth, (q) => ((AreaMomentOfInertia)q).ToUnit(AreaMomentOfInertiaUnit.MillimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia>(AreaMomentOfInertiaUnit.MillimeterToTheFourth, AreaMomentOfInertia.BaseUnit, (q) => ((AreaMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRate.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.BytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.BytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.BytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExabitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.ExabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExabitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExabytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.ExabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExabytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExbibitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.ExbibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExbibitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.ExbibytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.ExbibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.ExbibytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GibibitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.GibibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GibibitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GibibytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.GibibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GibibytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GigabitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.GigabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GigabitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.GigabytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.GigabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.GigabytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KibibitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.KibibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KibibitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KibibytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.KibibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KibibytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KilobitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.KilobitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KilobitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.KilobytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.KilobytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.KilobytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MebibitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.MebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MebibitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MebibytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.MebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MebibytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MegabitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.MegabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MegabitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.MegabytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.MegabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.MegabytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PebibitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.PebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PebibitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PebibytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.PebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PebibytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PetabitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.PetabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PetabitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.PetabytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.PetabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.PetabytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TebibitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.TebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TebibitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TebibytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.TebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TebibytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TerabitPerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.TerabitPerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TerabitPerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate>(BitRate.BaseUnit, BitRateUnit.TerabytePerSecond, (q) => ((BitRate)q).ToUnit(BitRateUnit.TerabytePerSecond));
            unitConverter.SetConversionFunction<BitRate>(BitRateUnit.TerabytePerSecond, BitRate.BaseUnit, (q) => ((BitRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumption.BaseUnit, BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour, (q) => ((BrakeSpecificFuelConsumption)q).ToUnit(BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour));
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour, BrakeSpecificFuelConsumption.BaseUnit, (q) => ((BrakeSpecificFuelConsumption)q).ToBaseUnit());
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumption.BaseUnit, BrakeSpecificFuelConsumption.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumption.BaseUnit, BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour, (q) => ((BrakeSpecificFuelConsumption)q).ToUnit(BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour));
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption>(BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour, BrakeSpecificFuelConsumption.BaseUnit, (q) => ((BrakeSpecificFuelConsumption)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, Capacitance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Kilofarad, (q) => ((Capacitance)q).ToUnit(CapacitanceUnit.Kilofarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Kilofarad, Capacitance.BaseUnit, (q) => ((Capacitance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Megafarad, (q) => ((Capacitance)q).ToUnit(CapacitanceUnit.Megafarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Megafarad, Capacitance.BaseUnit, (q) => ((Capacitance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Microfarad, (q) => ((Capacitance)q).ToUnit(CapacitanceUnit.Microfarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Microfarad, Capacitance.BaseUnit, (q) => ((Capacitance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Millifarad, (q) => ((Capacitance)q).ToUnit(CapacitanceUnit.Millifarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Millifarad, Capacitance.BaseUnit, (q) => ((Capacitance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Nanofarad, (q) => ((Capacitance)q).ToUnit(CapacitanceUnit.Nanofarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Nanofarad, Capacitance.BaseUnit, (q) => ((Capacitance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance>(Capacitance.BaseUnit, CapacitanceUnit.Picofarad, (q) => ((Capacitance)q).ToUnit(CapacitanceUnit.Picofarad));
            unitConverter.SetConversionFunction<Capacitance>(CapacitanceUnit.Picofarad, Capacitance.BaseUnit, (q) => ((Capacitance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansion.BaseUnit, CoefficientOfThermalExpansionUnit.InverseDegreeCelsius, (q) => ((CoefficientOfThermalExpansion)q).ToUnit(CoefficientOfThermalExpansionUnit.InverseDegreeCelsius));
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansionUnit.InverseDegreeCelsius, CoefficientOfThermalExpansion.BaseUnit, (q) => ((CoefficientOfThermalExpansion)q).ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansion.BaseUnit, CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit, (q) => ((CoefficientOfThermalExpansion)q).ToUnit(CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit));
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit, CoefficientOfThermalExpansion.BaseUnit, (q) => ((CoefficientOfThermalExpansion)q).ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion>(CoefficientOfThermalExpansion.BaseUnit, CoefficientOfThermalExpansion.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.CentigramPerDeciliter, (q) => ((Density)q).ToUnit(DensityUnit.CentigramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.CentigramPerDeciliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.CentigramPerLiter, (q) => ((Density)q).ToUnit(DensityUnit.CentigramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.CentigramPerLiter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.CentigramPerMilliliter, (q) => ((Density)q).ToUnit(DensityUnit.CentigramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.CentigramPerMilliliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.DecigramPerDeciliter, (q) => ((Density)q).ToUnit(DensityUnit.DecigramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.DecigramPerDeciliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.DecigramPerLiter, (q) => ((Density)q).ToUnit(DensityUnit.DecigramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.DecigramPerLiter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.DecigramPerMilliliter, (q) => ((Density)q).ToUnit(DensityUnit.DecigramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.DecigramPerMilliliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerCubicCentimeter, (q) => ((Density)q).ToUnit(DensityUnit.GramPerCubicCentimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerCubicCentimeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerCubicMeter, (q) => ((Density)q).ToUnit(DensityUnit.GramPerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerCubicMeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerCubicMillimeter, (q) => ((Density)q).ToUnit(DensityUnit.GramPerCubicMillimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerCubicMillimeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerDeciliter, (q) => ((Density)q).ToUnit(DensityUnit.GramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerDeciliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerLiter, (q) => ((Density)q).ToUnit(DensityUnit.GramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerLiter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.GramPerMilliliter, (q) => ((Density)q).ToUnit(DensityUnit.GramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.GramPerMilliliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilogramPerCubicCentimeter, (q) => ((Density)q).ToUnit(DensityUnit.KilogramPerCubicCentimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilogramPerCubicCentimeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, Density.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilogramPerCubicMillimeter, (q) => ((Density)q).ToUnit(DensityUnit.KilogramPerCubicMillimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilogramPerCubicMillimeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilopoundPerCubicFoot, (q) => ((Density)q).ToUnit(DensityUnit.KilopoundPerCubicFoot));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilopoundPerCubicFoot, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.KilopoundPerCubicInch, (q) => ((Density)q).ToUnit(DensityUnit.KilopoundPerCubicInch));
            unitConverter.SetConversionFunction<Density>(DensityUnit.KilopoundPerCubicInch, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerCubicMeter, (q) => ((Density)q).ToUnit(DensityUnit.MicrogramPerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerCubicMeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerDeciliter, (q) => ((Density)q).ToUnit(DensityUnit.MicrogramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerDeciliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerLiter, (q) => ((Density)q).ToUnit(DensityUnit.MicrogramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerLiter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MicrogramPerMilliliter, (q) => ((Density)q).ToUnit(DensityUnit.MicrogramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MicrogramPerMilliliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerCubicMeter, (q) => ((Density)q).ToUnit(DensityUnit.MilligramPerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerCubicMeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerDeciliter, (q) => ((Density)q).ToUnit(DensityUnit.MilligramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerDeciliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerLiter, (q) => ((Density)q).ToUnit(DensityUnit.MilligramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerLiter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.MilligramPerMilliliter, (q) => ((Density)q).ToUnit(DensityUnit.MilligramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.MilligramPerMilliliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.NanogramPerDeciliter, (q) => ((Density)q).ToUnit(DensityUnit.NanogramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.NanogramPerDeciliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.NanogramPerLiter, (q) => ((Density)q).ToUnit(DensityUnit.NanogramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.NanogramPerLiter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.NanogramPerMilliliter, (q) => ((Density)q).ToUnit(DensityUnit.NanogramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.NanogramPerMilliliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PicogramPerDeciliter, (q) => ((Density)q).ToUnit(DensityUnit.PicogramPerDeciliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PicogramPerDeciliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PicogramPerLiter, (q) => ((Density)q).ToUnit(DensityUnit.PicogramPerLiter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PicogramPerLiter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PicogramPerMilliliter, (q) => ((Density)q).ToUnit(DensityUnit.PicogramPerMilliliter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PicogramPerMilliliter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerCubicFoot, (q) => ((Density)q).ToUnit(DensityUnit.PoundPerCubicFoot));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerCubicFoot, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerCubicInch, (q) => ((Density)q).ToUnit(DensityUnit.PoundPerCubicInch));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerCubicInch, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerImperialGallon, (q) => ((Density)q).ToUnit(DensityUnit.PoundPerImperialGallon));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerImperialGallon, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.PoundPerUSGallon, (q) => ((Density)q).ToUnit(DensityUnit.PoundPerUSGallon));
            unitConverter.SetConversionFunction<Density>(DensityUnit.PoundPerUSGallon, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.SlugPerCubicFoot, (q) => ((Density)q).ToUnit(DensityUnit.SlugPerCubicFoot));
            unitConverter.SetConversionFunction<Density>(DensityUnit.SlugPerCubicFoot, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.TonnePerCubicCentimeter, (q) => ((Density)q).ToUnit(DensityUnit.TonnePerCubicCentimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.TonnePerCubicCentimeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.TonnePerCubicMeter, (q) => ((Density)q).ToUnit(DensityUnit.TonnePerCubicMeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.TonnePerCubicMeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Density>(Density.BaseUnit, DensityUnit.TonnePerCubicMillimeter, (q) => ((Density)q).ToUnit(DensityUnit.TonnePerCubicMillimeter));
            unitConverter.SetConversionFunction<Density>(DensityUnit.TonnePerCubicMillimeter, Density.BaseUnit, (q) => ((Density)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Day, (q) => ((Duration)q).ToUnit(DurationUnit.Day));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Day, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Hour, (q) => ((Duration)q).ToUnit(DurationUnit.Hour));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Hour, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Microsecond, (q) => ((Duration)q).ToUnit(DurationUnit.Microsecond));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Microsecond, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Millisecond, (q) => ((Duration)q).ToUnit(DurationUnit.Millisecond));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Millisecond, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Minute, (q) => ((Duration)q).ToUnit(DurationUnit.Minute));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Minute, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Month30, (q) => ((Duration)q).ToUnit(DurationUnit.Month30));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Month30, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Nanosecond, (q) => ((Duration)q).ToUnit(DurationUnit.Nanosecond));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Nanosecond, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, Duration.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Week, (q) => ((Duration)q).ToUnit(DurationUnit.Week));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Week, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Duration>(Duration.BaseUnit, DurationUnit.Year365, (q) => ((Duration)q).ToUnit(DurationUnit.Year365));
            unitConverter.SetConversionFunction<Duration>(DurationUnit.Year365, Duration.BaseUnit, (q) => ((Duration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.Centipoise, (q) => ((DynamicViscosity)q).ToUnit(DynamicViscosityUnit.Centipoise));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.Centipoise, DynamicViscosity.BaseUnit, (q) => ((DynamicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.MicropascalSecond, (q) => ((DynamicViscosity)q).ToUnit(DynamicViscosityUnit.MicropascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.MicropascalSecond, DynamicViscosity.BaseUnit, (q) => ((DynamicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.MillipascalSecond, (q) => ((DynamicViscosity)q).ToUnit(DynamicViscosityUnit.MillipascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.MillipascalSecond, DynamicViscosity.BaseUnit, (q) => ((DynamicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.PascalSecond, (q) => ((DynamicViscosity)q).ToUnit(DynamicViscosityUnit.PascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.PascalSecond, DynamicViscosity.BaseUnit, (q) => ((DynamicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosity.BaseUnit, DynamicViscosityUnit.Poise, (q) => ((DynamicViscosity)q).ToUnit(DynamicViscosityUnit.Poise));
            unitConverter.SetConversionFunction<DynamicViscosity>(DynamicViscosityUnit.Poise, DynamicViscosity.BaseUnit, (q) => ((DynamicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittanceUnit.Microsiemens, (q) => ((ElectricAdmittance)q).ToUnit(ElectricAdmittanceUnit.Microsiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittanceUnit.Microsiemens, ElectricAdmittance.BaseUnit, (q) => ((ElectricAdmittance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittanceUnit.Millisiemens, (q) => ((ElectricAdmittance)q).ToUnit(ElectricAdmittanceUnit.Millisiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittanceUnit.Millisiemens, ElectricAdmittance.BaseUnit, (q) => ((ElectricAdmittance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittanceUnit.Nanosiemens, (q) => ((ElectricAdmittance)q).ToUnit(ElectricAdmittanceUnit.Nanosiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittanceUnit.Nanosiemens, ElectricAdmittance.BaseUnit, (q) => ((ElectricAdmittance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance>(ElectricAdmittance.BaseUnit, ElectricAdmittance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricCharge>(ElectricCharge.BaseUnit, ElectricCharge.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricChargeDensity>(ElectricChargeDensity.BaseUnit, ElectricChargeDensity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductance.BaseUnit, ElectricConductanceUnit.Microsiemens, (q) => ((ElectricConductance)q).ToUnit(ElectricConductanceUnit.Microsiemens));
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductanceUnit.Microsiemens, ElectricConductance.BaseUnit, (q) => ((ElectricConductance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductance.BaseUnit, ElectricConductanceUnit.Millisiemens, (q) => ((ElectricConductance)q).ToUnit(ElectricConductanceUnit.Millisiemens));
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductanceUnit.Millisiemens, ElectricConductance.BaseUnit, (q) => ((ElectricConductance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductance>(ElectricConductance.BaseUnit, ElectricConductance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricConductivity>(ElectricConductivity.BaseUnit, ElectricConductivity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrent.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Centiampere, (q) => ((ElectricCurrent)q).ToUnit(ElectricCurrentUnit.Centiampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Centiampere, ElectricCurrent.BaseUnit, (q) => ((ElectricCurrent)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Kiloampere, (q) => ((ElectricCurrent)q).ToUnit(ElectricCurrentUnit.Kiloampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Kiloampere, ElectricCurrent.BaseUnit, (q) => ((ElectricCurrent)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Megaampere, (q) => ((ElectricCurrent)q).ToUnit(ElectricCurrentUnit.Megaampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Megaampere, ElectricCurrent.BaseUnit, (q) => ((ElectricCurrent)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Microampere, (q) => ((ElectricCurrent)q).ToUnit(ElectricCurrentUnit.Microampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Microampere, ElectricCurrent.BaseUnit, (q) => ((ElectricCurrent)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Milliampere, (q) => ((ElectricCurrent)q).ToUnit(ElectricCurrentUnit.Milliampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Milliampere, ElectricCurrent.BaseUnit, (q) => ((ElectricCurrent)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Nanoampere, (q) => ((ElectricCurrent)q).ToUnit(ElectricCurrentUnit.Nanoampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Nanoampere, ElectricCurrent.BaseUnit, (q) => ((ElectricCurrent)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrent.BaseUnit, ElectricCurrentUnit.Picoampere, (q) => ((ElectricCurrent)q).ToUnit(ElectricCurrentUnit.Picoampere));
            unitConverter.SetConversionFunction<ElectricCurrent>(ElectricCurrentUnit.Picoampere, ElectricCurrent.BaseUnit, (q) => ((ElectricCurrent)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentDensity>(ElectricCurrentDensity.BaseUnit, ElectricCurrentDensity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricCurrentGradient>(ElectricCurrentGradient.BaseUnit, ElectricCurrentGradient.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricField>(ElectricField.BaseUnit, ElectricField.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductanceUnit.Microhenry, (q) => ((ElectricInductance)q).ToUnit(ElectricInductanceUnit.Microhenry));
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductanceUnit.Microhenry, ElectricInductance.BaseUnit, (q) => ((ElectricInductance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductanceUnit.Millihenry, (q) => ((ElectricInductance)q).ToUnit(ElectricInductanceUnit.Millihenry));
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductanceUnit.Millihenry, ElectricInductance.BaseUnit, (q) => ((ElectricInductance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductance.BaseUnit, ElectricInductanceUnit.Nanohenry, (q) => ((ElectricInductance)q).ToUnit(ElectricInductanceUnit.Nanohenry));
            unitConverter.SetConversionFunction<ElectricInductance>(ElectricInductanceUnit.Nanohenry, ElectricInductance.BaseUnit, (q) => ((ElectricInductance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Kilovolt, (q) => ((ElectricPotential)q).ToUnit(ElectricPotentialUnit.Kilovolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Kilovolt, ElectricPotential.BaseUnit, (q) => ((ElectricPotential)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Megavolt, (q) => ((ElectricPotential)q).ToUnit(ElectricPotentialUnit.Megavolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Megavolt, ElectricPotential.BaseUnit, (q) => ((ElectricPotential)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Microvolt, (q) => ((ElectricPotential)q).ToUnit(ElectricPotentialUnit.Microvolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Microvolt, ElectricPotential.BaseUnit, (q) => ((ElectricPotential)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotentialUnit.Millivolt, (q) => ((ElectricPotential)q).ToUnit(ElectricPotentialUnit.Millivolt));
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotentialUnit.Millivolt, ElectricPotential.BaseUnit, (q) => ((ElectricPotential)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential>(ElectricPotential.BaseUnit, ElectricPotential.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.KilovoltAc, (q) => ((ElectricPotentialAc)q).ToUnit(ElectricPotentialAcUnit.KilovoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.KilovoltAc, ElectricPotentialAc.BaseUnit, (q) => ((ElectricPotentialAc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.MegavoltAc, (q) => ((ElectricPotentialAc)q).ToUnit(ElectricPotentialAcUnit.MegavoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.MegavoltAc, ElectricPotentialAc.BaseUnit, (q) => ((ElectricPotentialAc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.MicrovoltAc, (q) => ((ElectricPotentialAc)q).ToUnit(ElectricPotentialAcUnit.MicrovoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.MicrovoltAc, ElectricPotentialAc.BaseUnit, (q) => ((ElectricPotentialAc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAcUnit.MillivoltAc, (q) => ((ElectricPotentialAc)q).ToUnit(ElectricPotentialAcUnit.MillivoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAcUnit.MillivoltAc, ElectricPotentialAc.BaseUnit, (q) => ((ElectricPotentialAc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc>(ElectricPotentialAc.BaseUnit, ElectricPotentialAc.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.KilovoltDc, (q) => ((ElectricPotentialDc)q).ToUnit(ElectricPotentialDcUnit.KilovoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.KilovoltDc, ElectricPotentialDc.BaseUnit, (q) => ((ElectricPotentialDc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.MegavoltDc, (q) => ((ElectricPotentialDc)q).ToUnit(ElectricPotentialDcUnit.MegavoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.MegavoltDc, ElectricPotentialDc.BaseUnit, (q) => ((ElectricPotentialDc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.MicrovoltDc, (q) => ((ElectricPotentialDc)q).ToUnit(ElectricPotentialDcUnit.MicrovoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.MicrovoltDc, ElectricPotentialDc.BaseUnit, (q) => ((ElectricPotentialDc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDcUnit.MillivoltDc, (q) => ((ElectricPotentialDc)q).ToUnit(ElectricPotentialDcUnit.MillivoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDcUnit.MillivoltDc, ElectricPotentialDc.BaseUnit, (q) => ((ElectricPotentialDc)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc>(ElectricPotentialDc.BaseUnit, ElectricPotentialDc.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Gigaohm, (q) => ((ElectricResistance)q).ToUnit(ElectricResistanceUnit.Gigaohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Gigaohm, ElectricResistance.BaseUnit, (q) => ((ElectricResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Kiloohm, (q) => ((ElectricResistance)q).ToUnit(ElectricResistanceUnit.Kiloohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Kiloohm, ElectricResistance.BaseUnit, (q) => ((ElectricResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Megaohm, (q) => ((ElectricResistance)q).ToUnit(ElectricResistanceUnit.Megaohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Megaohm, ElectricResistance.BaseUnit, (q) => ((ElectricResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistanceUnit.Milliohm, (q) => ((ElectricResistance)q).ToUnit(ElectricResistanceUnit.Milliohm));
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistanceUnit.Milliohm, ElectricResistance.BaseUnit, (q) => ((ElectricResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance>(ElectricResistance.BaseUnit, ElectricResistance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.KiloohmCentimeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.KiloohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.KiloohmCentimeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.KiloohmMeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.KiloohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.KiloohmMeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MegaohmCentimeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.MegaohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MegaohmCentimeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MegaohmMeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.MegaohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MegaohmMeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MicroohmCentimeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.MicroohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MicroohmCentimeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MicroohmMeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.MicroohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MicroohmMeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MilliohmCentimeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.MilliohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MilliohmCentimeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.MilliohmMeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.MilliohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.MilliohmMeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.NanoohmCentimeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.NanoohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.NanoohmCentimeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.NanoohmMeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.NanoohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.NanoohmMeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.OhmCentimeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.OhmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.OhmCentimeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.PicoohmCentimeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.PicoohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.PicoohmCentimeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivity.BaseUnit, ElectricResistivityUnit.PicoohmMeter, (q) => ((ElectricResistivity)q).ToUnit(ElectricResistivityUnit.PicoohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity>(ElectricResistivityUnit.PicoohmMeter, ElectricResistivity.BaseUnit, (q) => ((ElectricResistivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.BritishThermalUnit, (q) => ((Energy)q).ToUnit(EnergyUnit.BritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.BritishThermalUnit, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Calorie, (q) => ((Energy)q).ToUnit(EnergyUnit.Calorie));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Calorie, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.DecathermEc, (q) => ((Energy)q).ToUnit(EnergyUnit.DecathermEc));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.DecathermEc, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.DecathermImperial, (q) => ((Energy)q).ToUnit(EnergyUnit.DecathermImperial));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.DecathermImperial, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.DecathermUs, (q) => ((Energy)q).ToUnit(EnergyUnit.DecathermUs));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.DecathermUs, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ElectronVolt, (q) => ((Energy)q).ToUnit(EnergyUnit.ElectronVolt));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ElectronVolt, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Erg, (q) => ((Energy)q).ToUnit(EnergyUnit.Erg));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Erg, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.FootPound, (q) => ((Energy)q).ToUnit(EnergyUnit.FootPound));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.FootPound, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.GigabritishThermalUnit, (q) => ((Energy)q).ToUnit(EnergyUnit.GigabritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.GigabritishThermalUnit, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.GigawattHour, (q) => ((Energy)q).ToUnit(EnergyUnit.GigawattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.GigawattHour, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, Energy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.KilobritishThermalUnit, (q) => ((Energy)q).ToUnit(EnergyUnit.KilobritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.KilobritishThermalUnit, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Kilocalorie, (q) => ((Energy)q).ToUnit(EnergyUnit.Kilocalorie));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Kilocalorie, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Kilojoule, (q) => ((Energy)q).ToUnit(EnergyUnit.Kilojoule));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Kilojoule, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.KilowattHour, (q) => ((Energy)q).ToUnit(EnergyUnit.KilowattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.KilowattHour, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.MegabritishThermalUnit, (q) => ((Energy)q).ToUnit(EnergyUnit.MegabritishThermalUnit));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.MegabritishThermalUnit, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.Megajoule, (q) => ((Energy)q).ToUnit(EnergyUnit.Megajoule));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.Megajoule, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.MegawattHour, (q) => ((Energy)q).ToUnit(EnergyUnit.MegawattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.MegawattHour, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ThermEc, (q) => ((Energy)q).ToUnit(EnergyUnit.ThermEc));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ThermEc, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ThermImperial, (q) => ((Energy)q).ToUnit(EnergyUnit.ThermImperial));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ThermImperial, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.ThermUs, (q) => ((Energy)q).ToUnit(EnergyUnit.ThermUs));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.ThermUs, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Energy>(Energy.BaseUnit, EnergyUnit.WattHour, (q) => ((Energy)q).ToUnit(EnergyUnit.WattHour));
            unitConverter.SetConversionFunction<Energy>(EnergyUnit.WattHour, Energy.BaseUnit, (q) => ((Energy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.CaloriePerKelvin, (q) => ((Entropy)q).ToUnit(EntropyUnit.CaloriePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.CaloriePerKelvin, Entropy.BaseUnit, (q) => ((Entropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.JoulePerDegreeCelsius, (q) => ((Entropy)q).ToUnit(EntropyUnit.JoulePerDegreeCelsius));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.JoulePerDegreeCelsius, Entropy.BaseUnit, (q) => ((Entropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, Entropy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.KilocaloriePerKelvin, (q) => ((Entropy)q).ToUnit(EntropyUnit.KilocaloriePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.KilocaloriePerKelvin, Entropy.BaseUnit, (q) => ((Entropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.KilojoulePerDegreeCelsius, (q) => ((Entropy)q).ToUnit(EntropyUnit.KilojoulePerDegreeCelsius));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.KilojoulePerDegreeCelsius, Entropy.BaseUnit, (q) => ((Entropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.KilojoulePerKelvin, (q) => ((Entropy)q).ToUnit(EntropyUnit.KilojoulePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.KilojoulePerKelvin, Entropy.BaseUnit, (q) => ((Entropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy>(Entropy.BaseUnit, EntropyUnit.MegajoulePerKelvin, (q) => ((Entropy)q).ToUnit(EntropyUnit.MegajoulePerKelvin));
            unitConverter.SetConversionFunction<Entropy>(EntropyUnit.MegajoulePerKelvin, Entropy.BaseUnit, (q) => ((Entropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Decanewton, (q) => ((Force)q).ToUnit(ForceUnit.Decanewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Decanewton, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Dyn, (q) => ((Force)q).ToUnit(ForceUnit.Dyn));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Dyn, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.KilogramForce, (q) => ((Force)q).ToUnit(ForceUnit.KilogramForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.KilogramForce, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Kilonewton, (q) => ((Force)q).ToUnit(ForceUnit.Kilonewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Kilonewton, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.KiloPond, (q) => ((Force)q).ToUnit(ForceUnit.KiloPond));
            unitConverter.SetConversionFunction<Force>(ForceUnit.KiloPond, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Meganewton, (q) => ((Force)q).ToUnit(ForceUnit.Meganewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Meganewton, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Micronewton, (q) => ((Force)q).ToUnit(ForceUnit.Micronewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Micronewton, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Millinewton, (q) => ((Force)q).ToUnit(ForceUnit.Millinewton));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Millinewton, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, Force.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.OunceForce, (q) => ((Force)q).ToUnit(ForceUnit.OunceForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.OunceForce, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.Poundal, (q) => ((Force)q).ToUnit(ForceUnit.Poundal));
            unitConverter.SetConversionFunction<Force>(ForceUnit.Poundal, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.PoundForce, (q) => ((Force)q).ToUnit(ForceUnit.PoundForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.PoundForce, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Force>(Force.BaseUnit, ForceUnit.TonneForce, (q) => ((Force)q).ToUnit(ForceUnit.TonneForce));
            unitConverter.SetConversionFunction<Force>(ForceUnit.TonneForce, Force.BaseUnit, (q) => ((Force)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.CentinewtonPerSecond, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.CentinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.CentinewtonPerSecond, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.DecanewtonPerMinute, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.DecanewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.DecanewtonPerMinute, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.DecanewtonPerSecond, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.DecanewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.DecanewtonPerSecond, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.DecinewtonPerSecond, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.DecinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.DecinewtonPerSecond, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.KilonewtonPerMinute, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.KilonewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.KilonewtonPerMinute, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.KilonewtonPerSecond, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.KilonewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.KilonewtonPerSecond, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.MicronewtonPerSecond, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.MicronewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.MicronewtonPerSecond, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.MillinewtonPerSecond, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.MillinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.MillinewtonPerSecond, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.NanonewtonPerSecond, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.NanonewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.NanonewtonPerSecond, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRateUnit.NewtonPerMinute, (q) => ((ForceChangeRate)q).ToUnit(ForceChangeRateUnit.NewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRateUnit.NewtonPerMinute, ForceChangeRate.BaseUnit, (q) => ((ForceChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate>(ForceChangeRate.BaseUnit, ForceChangeRate.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.CentinewtonPerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.CentinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.CentinewtonPerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.DecinewtonPerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.DecinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.DecinewtonPerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.KilogramForcePerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.KilogramForcePerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.KilogramForcePerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.KilonewtonPerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.KilonewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.KilonewtonPerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.MeganewtonPerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.MeganewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.MeganewtonPerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.MicronewtonPerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.MicronewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.MicronewtonPerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.MillinewtonPerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.MillinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.MillinewtonPerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLengthUnit.NanonewtonPerMeter, (q) => ((ForcePerLength)q).ToUnit(ForcePerLengthUnit.NanonewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLengthUnit.NanonewtonPerMeter, ForcePerLength.BaseUnit, (q) => ((ForcePerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength>(ForcePerLength.BaseUnit, ForcePerLength.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.CyclePerHour, (q) => ((Frequency)q).ToUnit(FrequencyUnit.CyclePerHour));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.CyclePerHour, Frequency.BaseUnit, (q) => ((Frequency)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.CyclePerMinute, (q) => ((Frequency)q).ToUnit(FrequencyUnit.CyclePerMinute));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.CyclePerMinute, Frequency.BaseUnit, (q) => ((Frequency)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Gigahertz, (q) => ((Frequency)q).ToUnit(FrequencyUnit.Gigahertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Gigahertz, Frequency.BaseUnit, (q) => ((Frequency)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, Frequency.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Kilohertz, (q) => ((Frequency)q).ToUnit(FrequencyUnit.Kilohertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Kilohertz, Frequency.BaseUnit, (q) => ((Frequency)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Megahertz, (q) => ((Frequency)q).ToUnit(FrequencyUnit.Megahertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Megahertz, Frequency.BaseUnit, (q) => ((Frequency)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.RadianPerSecond, (q) => ((Frequency)q).ToUnit(FrequencyUnit.RadianPerSecond));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.RadianPerSecond, Frequency.BaseUnit, (q) => ((Frequency)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency>(Frequency.BaseUnit, FrequencyUnit.Terahertz, (q) => ((Frequency)q).ToUnit(FrequencyUnit.Terahertz));
            unitConverter.SetConversionFunction<Frequency>(FrequencyUnit.Terahertz, Frequency.BaseUnit, (q) => ((Frequency)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerHourSquareFoot, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.BtuPerHourSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerHourSquareFoot, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerMinuteSquareFoot, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.BtuPerMinuteSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerMinuteSquareFoot, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerSecondSquareFoot, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.BtuPerSecondSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerSecondSquareFoot, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.BtuPerSecondSquareInch, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.BtuPerSecondSquareInch));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.BtuPerSecondSquareInch, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.CaloriePerSecondSquareCentimeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.CaloriePerSecondSquareCentimeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.CaloriePerSecondSquareCentimeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.CentiwattPerSquareMeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.CentiwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.CentiwattPerSquareMeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.DeciwattPerSquareMeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.DeciwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.DeciwattPerSquareMeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.KilocaloriePerHourSquareMeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.KilocaloriePerHourSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.KilocaloriePerHourSquareMeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.KilocaloriePerSecondSquareCentimeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.KilocaloriePerSecondSquareCentimeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.KilocaloriePerSecondSquareCentimeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.KilowattPerSquareMeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.KilowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.KilowattPerSquareMeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.MicrowattPerSquareMeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.MicrowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.MicrowattPerSquareMeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.MilliwattPerSquareMeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.MilliwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.MilliwattPerSquareMeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.NanowattPerSquareMeter, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.NanowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.NanowattPerSquareMeter, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.PoundForcePerFootSecond, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.PoundForcePerFootSecond));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.PoundForcePerFootSecond, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.PoundPerSecondCubed, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.PoundPerSecondCubed));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.PoundPerSecondCubed, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.WattPerSquareFoot, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.WattPerSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.WattPerSquareFoot, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFluxUnit.WattPerSquareInch, (q) => ((HeatFlux)q).ToUnit(HeatFluxUnit.WattPerSquareInch));
            unitConverter.SetConversionFunction<HeatFlux>(HeatFluxUnit.WattPerSquareInch, HeatFlux.BaseUnit, (q) => ((HeatFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux>(HeatFlux.BaseUnit, HeatFlux.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficient.BaseUnit, HeatTransferCoefficientUnit.WattPerSquareMeterCelsius, (q) => ((HeatTransferCoefficient)q).ToUnit(HeatTransferCoefficientUnit.WattPerSquareMeterCelsius));
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficientUnit.WattPerSquareMeterCelsius, HeatTransferCoefficient.BaseUnit, (q) => ((HeatTransferCoefficient)q).ToBaseUnit());
            unitConverter.SetConversionFunction<HeatTransferCoefficient>(HeatTransferCoefficient.BaseUnit, HeatTransferCoefficient.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, IlluminanceUnit.Kilolux, (q) => ((Illuminance)q).ToUnit(IlluminanceUnit.Kilolux));
            unitConverter.SetConversionFunction<Illuminance>(IlluminanceUnit.Kilolux, Illuminance.BaseUnit, (q) => ((Illuminance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, Illuminance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, IlluminanceUnit.Megalux, (q) => ((Illuminance)q).ToUnit(IlluminanceUnit.Megalux));
            unitConverter.SetConversionFunction<Illuminance>(IlluminanceUnit.Megalux, Illuminance.BaseUnit, (q) => ((Illuminance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Illuminance>(Illuminance.BaseUnit, IlluminanceUnit.Millilux, (q) => ((Illuminance)q).ToUnit(IlluminanceUnit.Millilux));
            unitConverter.SetConversionFunction<Illuminance>(IlluminanceUnit.Millilux, Illuminance.BaseUnit, (q) => ((Illuminance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, Information.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Byte, (q) => ((Information)q).ToUnit(InformationUnit.Byte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Byte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exabit, (q) => ((Information)q).ToUnit(InformationUnit.Exabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exabit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exabyte, (q) => ((Information)q).ToUnit(InformationUnit.Exabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exabyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exbibit, (q) => ((Information)q).ToUnit(InformationUnit.Exbibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exbibit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Exbibyte, (q) => ((Information)q).ToUnit(InformationUnit.Exbibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Exbibyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gibibit, (q) => ((Information)q).ToUnit(InformationUnit.Gibibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gibibit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gibibyte, (q) => ((Information)q).ToUnit(InformationUnit.Gibibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gibibyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gigabit, (q) => ((Information)q).ToUnit(InformationUnit.Gigabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gigabit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Gigabyte, (q) => ((Information)q).ToUnit(InformationUnit.Gigabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Gigabyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kibibit, (q) => ((Information)q).ToUnit(InformationUnit.Kibibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kibibit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kibibyte, (q) => ((Information)q).ToUnit(InformationUnit.Kibibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kibibyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kilobit, (q) => ((Information)q).ToUnit(InformationUnit.Kilobit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kilobit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Kilobyte, (q) => ((Information)q).ToUnit(InformationUnit.Kilobyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Kilobyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Mebibit, (q) => ((Information)q).ToUnit(InformationUnit.Mebibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Mebibit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Mebibyte, (q) => ((Information)q).ToUnit(InformationUnit.Mebibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Mebibyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Megabit, (q) => ((Information)q).ToUnit(InformationUnit.Megabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Megabit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Megabyte, (q) => ((Information)q).ToUnit(InformationUnit.Megabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Megabyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Pebibit, (q) => ((Information)q).ToUnit(InformationUnit.Pebibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Pebibit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Pebibyte, (q) => ((Information)q).ToUnit(InformationUnit.Pebibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Pebibyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Petabit, (q) => ((Information)q).ToUnit(InformationUnit.Petabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Petabit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Petabyte, (q) => ((Information)q).ToUnit(InformationUnit.Petabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Petabyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Tebibit, (q) => ((Information)q).ToUnit(InformationUnit.Tebibit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Tebibit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Tebibyte, (q) => ((Information)q).ToUnit(InformationUnit.Tebibyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Tebibyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Terabit, (q) => ((Information)q).ToUnit(InformationUnit.Terabit));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Terabit, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Information>(Information.BaseUnit, InformationUnit.Terabyte, (q) => ((Information)q).ToUnit(InformationUnit.Terabyte));
            unitConverter.SetConversionFunction<Information>(InformationUnit.Terabyte, Information.BaseUnit, (q) => ((Information)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.KilowattPerSquareCentimeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.KilowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.KilowattPerSquareCentimeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.KilowattPerSquareMeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.KilowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.KilowattPerSquareMeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MegawattPerSquareCentimeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.MegawattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MegawattPerSquareCentimeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MegawattPerSquareMeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.MegawattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MegawattPerSquareMeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MicrowattPerSquareCentimeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.MicrowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MicrowattPerSquareCentimeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MicrowattPerSquareMeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.MicrowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MicrowattPerSquareMeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MilliwattPerSquareCentimeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.MilliwattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MilliwattPerSquareCentimeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.MilliwattPerSquareMeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.MilliwattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.MilliwattPerSquareMeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.NanowattPerSquareCentimeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.NanowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.NanowattPerSquareCentimeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.NanowattPerSquareMeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.NanowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.NanowattPerSquareMeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.PicowattPerSquareCentimeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.PicowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.PicowattPerSquareCentimeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.PicowattPerSquareMeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.PicowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.PicowattPerSquareMeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, IrradianceUnit.WattPerSquareCentimeter, (q) => ((Irradiance)q).ToUnit(IrradianceUnit.WattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance>(IrradianceUnit.WattPerSquareCentimeter, Irradiance.BaseUnit, (q) => ((Irradiance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance>(Irradiance.BaseUnit, Irradiance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.JoulePerSquareCentimeter, (q) => ((Irradiation)q).ToUnit(IrradiationUnit.JoulePerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.JoulePerSquareCentimeter, Irradiation.BaseUnit, (q) => ((Irradiation)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, Irradiation.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.JoulePerSquareMillimeter, (q) => ((Irradiation)q).ToUnit(IrradiationUnit.JoulePerSquareMillimeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.JoulePerSquareMillimeter, Irradiation.BaseUnit, (q) => ((Irradiation)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.KilojoulePerSquareMeter, (q) => ((Irradiation)q).ToUnit(IrradiationUnit.KilojoulePerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.KilojoulePerSquareMeter, Irradiation.BaseUnit, (q) => ((Irradiation)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.KilowattHourPerSquareMeter, (q) => ((Irradiation)q).ToUnit(IrradiationUnit.KilowattHourPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.KilowattHourPerSquareMeter, Irradiation.BaseUnit, (q) => ((Irradiation)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation>(Irradiation.BaseUnit, IrradiationUnit.WattHourPerSquareMeter, (q) => ((Irradiation)q).ToUnit(IrradiationUnit.WattHourPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation>(IrradiationUnit.WattHourPerSquareMeter, Irradiation.BaseUnit, (q) => ((Irradiation)q).ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Centistokes, (q) => ((KinematicViscosity)q).ToUnit(KinematicViscosityUnit.Centistokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Centistokes, KinematicViscosity.BaseUnit, (q) => ((KinematicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Decistokes, (q) => ((KinematicViscosity)q).ToUnit(KinematicViscosityUnit.Decistokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Decistokes, KinematicViscosity.BaseUnit, (q) => ((KinematicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Kilostokes, (q) => ((KinematicViscosity)q).ToUnit(KinematicViscosityUnit.Kilostokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Kilostokes, KinematicViscosity.BaseUnit, (q) => ((KinematicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Microstokes, (q) => ((KinematicViscosity)q).ToUnit(KinematicViscosityUnit.Microstokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Microstokes, KinematicViscosity.BaseUnit, (q) => ((KinematicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Millistokes, (q) => ((KinematicViscosity)q).ToUnit(KinematicViscosityUnit.Millistokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Millistokes, KinematicViscosity.BaseUnit, (q) => ((KinematicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Nanostokes, (q) => ((KinematicViscosity)q).ToUnit(KinematicViscosityUnit.Nanostokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Nanostokes, KinematicViscosity.BaseUnit, (q) => ((KinematicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosity.BaseUnit, KinematicViscosityUnit.Stokes, (q) => ((KinematicViscosity)q).ToUnit(KinematicViscosityUnit.Stokes));
            unitConverter.SetConversionFunction<KinematicViscosity>(KinematicViscosityUnit.Stokes, KinematicViscosity.BaseUnit, (q) => ((KinematicViscosity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<LapseRate>(LapseRate.BaseUnit, LapseRate.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Centimeter, (q) => ((Length)q).ToUnit(LengthUnit.Centimeter));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Centimeter, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Decimeter, (q) => ((Length)q).ToUnit(LengthUnit.Decimeter));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Decimeter, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.DtpPica, (q) => ((Length)q).ToUnit(LengthUnit.DtpPica));
            unitConverter.SetConversionFunction<Length>(LengthUnit.DtpPica, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.DtpPoint, (q) => ((Length)q).ToUnit(LengthUnit.DtpPoint));
            unitConverter.SetConversionFunction<Length>(LengthUnit.DtpPoint, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Fathom, (q) => ((Length)q).ToUnit(LengthUnit.Fathom));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Fathom, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Foot, (q) => ((Length)q).ToUnit(LengthUnit.Foot));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Foot, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Inch, (q) => ((Length)q).ToUnit(LengthUnit.Inch));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Inch, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Kilometer, (q) => ((Length)q).ToUnit(LengthUnit.Kilometer));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Kilometer, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, Length.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Microinch, (q) => ((Length)q).ToUnit(LengthUnit.Microinch));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Microinch, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Micrometer, (q) => ((Length)q).ToUnit(LengthUnit.Micrometer));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Micrometer, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Mil, (q) => ((Length)q).ToUnit(LengthUnit.Mil));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Mil, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Mile, (q) => ((Length)q).ToUnit(LengthUnit.Mile));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Mile, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Millimeter, (q) => ((Length)q).ToUnit(LengthUnit.Millimeter));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Millimeter, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Nanometer, (q) => ((Length)q).ToUnit(LengthUnit.Nanometer));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Nanometer, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.NauticalMile, (q) => ((Length)q).ToUnit(LengthUnit.NauticalMile));
            unitConverter.SetConversionFunction<Length>(LengthUnit.NauticalMile, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.PrinterPica, (q) => ((Length)q).ToUnit(LengthUnit.PrinterPica));
            unitConverter.SetConversionFunction<Length>(LengthUnit.PrinterPica, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.PrinterPoint, (q) => ((Length)q).ToUnit(LengthUnit.PrinterPoint));
            unitConverter.SetConversionFunction<Length>(LengthUnit.PrinterPoint, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Shackle, (q) => ((Length)q).ToUnit(LengthUnit.Shackle));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Shackle, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Twip, (q) => ((Length)q).ToUnit(LengthUnit.Twip));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Twip, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.UsSurveyFoot, (q) => ((Length)q).ToUnit(LengthUnit.UsSurveyFoot));
            unitConverter.SetConversionFunction<Length>(LengthUnit.UsSurveyFoot, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Length>(Length.BaseUnit, LengthUnit.Yard, (q) => ((Length)q).ToUnit(LengthUnit.Yard));
            unitConverter.SetConversionFunction<Length>(LengthUnit.Yard, Length.BaseUnit, (q) => ((Length)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Level>(Level.BaseUnit, Level.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Level>(Level.BaseUnit, LevelUnit.Neper, (q) => ((Level)q).ToUnit(LevelUnit.Neper));
            unitConverter.SetConversionFunction<Level>(LevelUnit.Neper, Level.BaseUnit, (q) => ((Level)q).ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensity.BaseUnit, LinearDensityUnit.GramPerMeter, (q) => ((LinearDensity)q).ToUnit(LinearDensityUnit.GramPerMeter));
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensityUnit.GramPerMeter, LinearDensity.BaseUnit, (q) => ((LinearDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensity.BaseUnit, LinearDensity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensity.BaseUnit, LinearDensityUnit.PoundPerFoot, (q) => ((LinearDensity)q).ToUnit(LinearDensityUnit.PoundPerFoot));
            unitConverter.SetConversionFunction<LinearDensity>(LinearDensityUnit.PoundPerFoot, LinearDensity.BaseUnit, (q) => ((LinearDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<LuminousFlux>(LuminousFlux.BaseUnit, LuminousFlux.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<LuminousIntensity>(LuminousIntensity.BaseUnit, LuminousIntensity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticFieldUnit.Microtesla, (q) => ((MagneticField)q).ToUnit(MagneticFieldUnit.Microtesla));
            unitConverter.SetConversionFunction<MagneticField>(MagneticFieldUnit.Microtesla, MagneticField.BaseUnit, (q) => ((MagneticField)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticFieldUnit.Millitesla, (q) => ((MagneticField)q).ToUnit(MagneticFieldUnit.Millitesla));
            unitConverter.SetConversionFunction<MagneticField>(MagneticFieldUnit.Millitesla, MagneticField.BaseUnit, (q) => ((MagneticField)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticFieldUnit.Nanotesla, (q) => ((MagneticField)q).ToUnit(MagneticFieldUnit.Nanotesla));
            unitConverter.SetConversionFunction<MagneticField>(MagneticFieldUnit.Nanotesla, MagneticField.BaseUnit, (q) => ((MagneticField)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField>(MagneticField.BaseUnit, MagneticField.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MagneticFlux>(MagneticFlux.BaseUnit, MagneticFlux.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Magnetization>(Magnetization.BaseUnit, Magnetization.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Centigram, (q) => ((Mass)q).ToUnit(MassUnit.Centigram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Centigram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Decagram, (q) => ((Mass)q).ToUnit(MassUnit.Decagram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Decagram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Decigram, (q) => ((Mass)q).ToUnit(MassUnit.Decigram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Decigram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Grain, (q) => ((Mass)q).ToUnit(MassUnit.Grain));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Grain, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Gram, (q) => ((Mass)q).ToUnit(MassUnit.Gram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Gram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Hectogram, (q) => ((Mass)q).ToUnit(MassUnit.Hectogram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Hectogram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, Mass.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Kilopound, (q) => ((Mass)q).ToUnit(MassUnit.Kilopound));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Kilopound, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Kilotonne, (q) => ((Mass)q).ToUnit(MassUnit.Kilotonne));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Kilotonne, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.LongHundredweight, (q) => ((Mass)q).ToUnit(MassUnit.LongHundredweight));
            unitConverter.SetConversionFunction<Mass>(MassUnit.LongHundredweight, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.LongTon, (q) => ((Mass)q).ToUnit(MassUnit.LongTon));
            unitConverter.SetConversionFunction<Mass>(MassUnit.LongTon, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Megapound, (q) => ((Mass)q).ToUnit(MassUnit.Megapound));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Megapound, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Megatonne, (q) => ((Mass)q).ToUnit(MassUnit.Megatonne));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Megatonne, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Microgram, (q) => ((Mass)q).ToUnit(MassUnit.Microgram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Microgram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Milligram, (q) => ((Mass)q).ToUnit(MassUnit.Milligram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Milligram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Nanogram, (q) => ((Mass)q).ToUnit(MassUnit.Nanogram));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Nanogram, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Ounce, (q) => ((Mass)q).ToUnit(MassUnit.Ounce));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Ounce, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Pound, (q) => ((Mass)q).ToUnit(MassUnit.Pound));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Pound, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.ShortHundredweight, (q) => ((Mass)q).ToUnit(MassUnit.ShortHundredweight));
            unitConverter.SetConversionFunction<Mass>(MassUnit.ShortHundredweight, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.ShortTon, (q) => ((Mass)q).ToUnit(MassUnit.ShortTon));
            unitConverter.SetConversionFunction<Mass>(MassUnit.ShortTon, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Slug, (q) => ((Mass)q).ToUnit(MassUnit.Slug));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Slug, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Stone, (q) => ((Mass)q).ToUnit(MassUnit.Stone));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Stone, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Mass>(Mass.BaseUnit, MassUnit.Tonne, (q) => ((Mass)q).ToUnit(MassUnit.Tonne));
            unitConverter.SetConversionFunction<Mass>(MassUnit.Tonne, Mass.BaseUnit, (q) => ((Mass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.CentigramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.CentigramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.CentigramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.CentigramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.CentigramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.CentigramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecagramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.DecagramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecagramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecagramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.DecagramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecagramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecigramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.DecigramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecigramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.DecigramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.DecigramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.DecigramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.GramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.GramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.GramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.GramPerHour, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.GramPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.GramPerHour, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlow.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.HectogramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.HectogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.HectogramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.HectogramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.HectogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.HectogramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.KilogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerHour, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.KilogramPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerHour, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerMinute, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.KilogramPerMinute));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerMinute, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.KilogramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.KilogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.KilogramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegagramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MegagramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegagramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegapoundPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MegapoundPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegapoundPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegapoundPerHour, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MegapoundPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegapoundPerHour, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MegapoundPerMinute, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MegapoundPerMinute));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MegapoundPerMinute, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MicrogramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MicrogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MicrogramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MicrogramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MicrogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MicrogramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MilligramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MilligramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MilligramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.MilligramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.MilligramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.MilligramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.NanogramPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.NanogramPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.NanogramPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.NanogramPerSecond, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.NanogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.NanogramPerSecond, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.PoundPerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.PoundPerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.PoundPerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.PoundPerHour, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.PoundPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.PoundPerHour, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.PoundPerMinute, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.PoundPerMinute));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.PoundPerMinute, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.ShortTonPerHour, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.ShortTonPerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.ShortTonPerHour, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.TonnePerDay, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.TonnePerDay));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.TonnePerDay, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow>(MassFlow.BaseUnit, MassFlowUnit.TonnePerHour, (q) => ((MassFlow)q).ToUnit(MassFlowUnit.TonnePerHour));
            unitConverter.SetConversionFunction<MassFlow>(MassFlowUnit.TonnePerHour, MassFlow.BaseUnit, (q) => ((MassFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux>(MassFlux.BaseUnit, MassFluxUnit.GramPerSecondPerSquareMeter, (q) => ((MassFlux)q).ToUnit(MassFluxUnit.GramPerSecondPerSquareMeter));
            unitConverter.SetConversionFunction<MassFlux>(MassFluxUnit.GramPerSecondPerSquareMeter, MassFlux.BaseUnit, (q) => ((MassFlux)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux>(MassFlux.BaseUnit, MassFlux.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareCentimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.GramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareCentimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareDecimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.GramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareDecimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareMeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.GramSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareMeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.GramSquareMillimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.GramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.GramSquareMillimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareCentimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.KilogramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilogramSquareCentimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareDecimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.KilogramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilogramSquareDecimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertia.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareMillimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.KilogramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilogramSquareMillimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareCentimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.KilotonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareCentimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareDecimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.KilotonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareDecimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareMeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.KilotonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareMeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareMilimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.KilotonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.KilotonneSquareMilimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareCentimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MegatonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareCentimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareDecimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MegatonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareDecimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareMeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MegatonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareMeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareMilimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MegatonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MegatonneSquareMilimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareCentimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MilligramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareCentimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareDecimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MilligramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareDecimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareMeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MilligramSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareMeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareMillimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.MilligramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.MilligramSquareMillimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.PoundSquareFoot, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.PoundSquareFoot));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.PoundSquareFoot, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.PoundSquareInch, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.PoundSquareInch));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.PoundSquareInch, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.SlugSquareFoot, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.SlugSquareFoot));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.SlugSquareFoot, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.SlugSquareInch, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.SlugSquareInch));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.SlugSquareInch, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareCentimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.TonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareCentimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareDecimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.TonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareDecimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareMeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.TonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareMeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertia.BaseUnit, MassMomentOfInertiaUnit.TonneSquareMilimeter, (q) => ((MassMomentOfInertia)q).ToUnit(MassMomentOfInertiaUnit.TonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia>(MassMomentOfInertiaUnit.TonneSquareMilimeter, MassMomentOfInertia.BaseUnit, (q) => ((MassMomentOfInertia)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergy.BaseUnit, MolarEnergy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergy.BaseUnit, MolarEnergyUnit.KilojoulePerMole, (q) => ((MolarEnergy)q).ToUnit(MolarEnergyUnit.KilojoulePerMole));
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergyUnit.KilojoulePerMole, MolarEnergy.BaseUnit, (q) => ((MolarEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergy.BaseUnit, MolarEnergyUnit.MegajoulePerMole, (q) => ((MolarEnergy)q).ToUnit(MolarEnergyUnit.MegajoulePerMole));
            unitConverter.SetConversionFunction<MolarEnergy>(MolarEnergyUnit.MegajoulePerMole, MolarEnergy.BaseUnit, (q) => ((MolarEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropy.BaseUnit, MolarEntropy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropy.BaseUnit, MolarEntropyUnit.KilojoulePerMoleKelvin, (q) => ((MolarEntropy)q).ToUnit(MolarEntropyUnit.KilojoulePerMoleKelvin));
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropyUnit.KilojoulePerMoleKelvin, MolarEntropy.BaseUnit, (q) => ((MolarEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropy.BaseUnit, MolarEntropyUnit.MegajoulePerMoleKelvin, (q) => ((MolarEntropy)q).ToUnit(MolarEntropyUnit.MegajoulePerMoleKelvin));
            unitConverter.SetConversionFunction<MolarEntropy>(MolarEntropyUnit.MegajoulePerMoleKelvin, MolarEntropy.BaseUnit, (q) => ((MolarEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.CentimolesPerLiter, (q) => ((Molarity)q).ToUnit(MolarityUnit.CentimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.CentimolesPerLiter, Molarity.BaseUnit, (q) => ((Molarity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.DecimolesPerLiter, (q) => ((Molarity)q).ToUnit(MolarityUnit.DecimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.DecimolesPerLiter, Molarity.BaseUnit, (q) => ((Molarity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.MicromolesPerLiter, (q) => ((Molarity)q).ToUnit(MolarityUnit.MicromolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.MicromolesPerLiter, Molarity.BaseUnit, (q) => ((Molarity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.MillimolesPerLiter, (q) => ((Molarity)q).ToUnit(MolarityUnit.MillimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.MillimolesPerLiter, Molarity.BaseUnit, (q) => ((Molarity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, Molarity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.MolesPerLiter, (q) => ((Molarity)q).ToUnit(MolarityUnit.MolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.MolesPerLiter, Molarity.BaseUnit, (q) => ((Molarity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.NanomolesPerLiter, (q) => ((Molarity)q).ToUnit(MolarityUnit.NanomolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.NanomolesPerLiter, Molarity.BaseUnit, (q) => ((Molarity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity>(Molarity.BaseUnit, MolarityUnit.PicomolesPerLiter, (q) => ((Molarity)q).ToUnit(MolarityUnit.PicomolesPerLiter));
            unitConverter.SetConversionFunction<Molarity>(MolarityUnit.PicomolesPerLiter, Molarity.BaseUnit, (q) => ((Molarity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.CentigramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.CentigramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.CentigramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.DecagramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.DecagramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.DecagramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.DecigramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.DecigramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.DecigramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.GramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.GramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.GramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.HectogramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.HectogramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.HectogramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMass.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.KilopoundPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.KilopoundPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.KilopoundPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.MegapoundPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.MegapoundPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.MegapoundPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.MicrogramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.MicrogramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.MicrogramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.MilligramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.MilligramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.MilligramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.NanogramPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.NanogramPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.NanogramPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass>(MolarMass.BaseUnit, MolarMassUnit.PoundPerMole, (q) => ((MolarMass)q).ToUnit(MolarMassUnit.PoundPerMole));
            unitConverter.SetConversionFunction<MolarMass>(MolarMassUnit.PoundPerMole, MolarMass.BaseUnit, (q) => ((MolarMass)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Permeability>(Permeability.BaseUnit, Permeability.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Permittivity>(Permittivity.BaseUnit, Permittivity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.BoilerHorsepower, (q) => ((Power)q).ToUnit(PowerUnit.BoilerHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.BoilerHorsepower, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.BritishThermalUnitPerHour, (q) => ((Power)q).ToUnit(PowerUnit.BritishThermalUnitPerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.BritishThermalUnitPerHour, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Decawatt, (q) => ((Power)q).ToUnit(PowerUnit.Decawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Decawatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Deciwatt, (q) => ((Power)q).ToUnit(PowerUnit.Deciwatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Deciwatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.ElectricalHorsepower, (q) => ((Power)q).ToUnit(PowerUnit.ElectricalHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.ElectricalHorsepower, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Femtowatt, (q) => ((Power)q).ToUnit(PowerUnit.Femtowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Femtowatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Gigawatt, (q) => ((Power)q).ToUnit(PowerUnit.Gigawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Gigawatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.HydraulicHorsepower, (q) => ((Power)q).ToUnit(PowerUnit.HydraulicHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.HydraulicHorsepower, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.KilobritishThermalUnitPerHour, (q) => ((Power)q).ToUnit(PowerUnit.KilobritishThermalUnitPerHour));
            unitConverter.SetConversionFunction<Power>(PowerUnit.KilobritishThermalUnitPerHour, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Kilowatt, (q) => ((Power)q).ToUnit(PowerUnit.Kilowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Kilowatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.MechanicalHorsepower, (q) => ((Power)q).ToUnit(PowerUnit.MechanicalHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.MechanicalHorsepower, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Megawatt, (q) => ((Power)q).ToUnit(PowerUnit.Megawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Megawatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.MetricHorsepower, (q) => ((Power)q).ToUnit(PowerUnit.MetricHorsepower));
            unitConverter.SetConversionFunction<Power>(PowerUnit.MetricHorsepower, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Microwatt, (q) => ((Power)q).ToUnit(PowerUnit.Microwatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Microwatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Milliwatt, (q) => ((Power)q).ToUnit(PowerUnit.Milliwatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Milliwatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Nanowatt, (q) => ((Power)q).ToUnit(PowerUnit.Nanowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Nanowatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Petawatt, (q) => ((Power)q).ToUnit(PowerUnit.Petawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Petawatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Picowatt, (q) => ((Power)q).ToUnit(PowerUnit.Picowatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Picowatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, PowerUnit.Terawatt, (q) => ((Power)q).ToUnit(PowerUnit.Terawatt));
            unitConverter.SetConversionFunction<Power>(PowerUnit.Terawatt, Power.BaseUnit, (q) => ((Power)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Power>(Power.BaseUnit, Power.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DecawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DecawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DecawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DecawattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DecawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DecawattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DeciwattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DeciwattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DeciwattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.DeciwattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.DeciwattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.DeciwattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.GigawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.GigawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.GigawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.GigawattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.GigawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.GigawattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.KilowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.KilowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.KilowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.KilowattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.KilowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.KilowattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MegawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MegawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MegawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MegawattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MegawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MegawattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MicrowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MicrowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MicrowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MicrowattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MicrowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MicrowattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MilliwattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MilliwattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MilliwattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.MilliwattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.MilliwattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.MilliwattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.NanowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.NanowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.NanowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.NanowattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.NanowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.NanowattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.PicowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.PicowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.PicowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.PicowattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.PicowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.PicowattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.TerawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.TerawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerCubicMeter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.TerawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerCubicMeter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.TerawattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.TerawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.TerawattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.WattPerCubicFoot, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.WattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.WattPerCubicFoot, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.WattPerCubicInch, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.WattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.WattPerCubicInch, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensity.BaseUnit, PowerDensityUnit.WattPerLiter, (q) => ((PowerDensity)q).ToUnit(PowerDensityUnit.WattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity>(PowerDensityUnit.WattPerLiter, PowerDensity.BaseUnit, (q) => ((PowerDensity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerRatio>(PowerRatio.BaseUnit, PowerRatioUnit.DecibelMilliwatt, (q) => ((PowerRatio)q).ToUnit(PowerRatioUnit.DecibelMilliwatt));
            unitConverter.SetConversionFunction<PowerRatio>(PowerRatioUnit.DecibelMilliwatt, PowerRatio.BaseUnit, (q) => ((PowerRatio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PowerRatio>(PowerRatio.BaseUnit, PowerRatio.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Atmosphere, (q) => ((Pressure)q).ToUnit(PressureUnit.Atmosphere));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Atmosphere, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Bar, (q) => ((Pressure)q).ToUnit(PressureUnit.Bar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Bar, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Centibar, (q) => ((Pressure)q).ToUnit(PressureUnit.Centibar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Centibar, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Decapascal, (q) => ((Pressure)q).ToUnit(PressureUnit.Decapascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Decapascal, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Decibar, (q) => ((Pressure)q).ToUnit(PressureUnit.Decibar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Decibar, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.DynePerSquareCentimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.DynePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.DynePerSquareCentimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.FootOfHead, (q) => ((Pressure)q).ToUnit(PressureUnit.FootOfHead));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.FootOfHead, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Gigapascal, (q) => ((Pressure)q).ToUnit(PressureUnit.Gigapascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Gigapascal, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Hectopascal, (q) => ((Pressure)q).ToUnit(PressureUnit.Hectopascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Hectopascal, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.InchOfMercury, (q) => ((Pressure)q).ToUnit(PressureUnit.InchOfMercury));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.InchOfMercury, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.InchOfWaterColumn, (q) => ((Pressure)q).ToUnit(PressureUnit.InchOfWaterColumn));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.InchOfWaterColumn, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Kilobar, (q) => ((Pressure)q).ToUnit(PressureUnit.Kilobar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Kilobar, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilogramForcePerSquareCentimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.KilogramForcePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilogramForcePerSquareCentimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilogramForcePerSquareMeter, (q) => ((Pressure)q).ToUnit(PressureUnit.KilogramForcePerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilogramForcePerSquareMeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilogramForcePerSquareMillimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.KilogramForcePerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilogramForcePerSquareMillimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilonewtonPerSquareCentimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.KilonewtonPerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilonewtonPerSquareCentimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilonewtonPerSquareMeter, (q) => ((Pressure)q).ToUnit(PressureUnit.KilonewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilonewtonPerSquareMeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilonewtonPerSquareMillimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.KilonewtonPerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilonewtonPerSquareMillimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Kilopascal, (q) => ((Pressure)q).ToUnit(PressureUnit.Kilopascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Kilopascal, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilopoundForcePerSquareFoot, (q) => ((Pressure)q).ToUnit(PressureUnit.KilopoundForcePerSquareFoot));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilopoundForcePerSquareFoot, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.KilopoundForcePerSquareInch, (q) => ((Pressure)q).ToUnit(PressureUnit.KilopoundForcePerSquareInch));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.KilopoundForcePerSquareInch, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Megabar, (q) => ((Pressure)q).ToUnit(PressureUnit.Megabar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Megabar, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.MeganewtonPerSquareMeter, (q) => ((Pressure)q).ToUnit(PressureUnit.MeganewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.MeganewtonPerSquareMeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Megapascal, (q) => ((Pressure)q).ToUnit(PressureUnit.Megapascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Megapascal, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.MeterOfHead, (q) => ((Pressure)q).ToUnit(PressureUnit.MeterOfHead));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.MeterOfHead, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Microbar, (q) => ((Pressure)q).ToUnit(PressureUnit.Microbar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Microbar, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Micropascal, (q) => ((Pressure)q).ToUnit(PressureUnit.Micropascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Micropascal, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Millibar, (q) => ((Pressure)q).ToUnit(PressureUnit.Millibar));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Millibar, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.MillimeterOfMercury, (q) => ((Pressure)q).ToUnit(PressureUnit.MillimeterOfMercury));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.MillimeterOfMercury, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Millipascal, (q) => ((Pressure)q).ToUnit(PressureUnit.Millipascal));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Millipascal, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.NewtonPerSquareCentimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.NewtonPerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.NewtonPerSquareCentimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.NewtonPerSquareMeter, (q) => ((Pressure)q).ToUnit(PressureUnit.NewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.NewtonPerSquareMeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.NewtonPerSquareMillimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.NewtonPerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.NewtonPerSquareMillimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, Pressure.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.PoundForcePerSquareFoot, (q) => ((Pressure)q).ToUnit(PressureUnit.PoundForcePerSquareFoot));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.PoundForcePerSquareFoot, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.PoundForcePerSquareInch, (q) => ((Pressure)q).ToUnit(PressureUnit.PoundForcePerSquareInch));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.PoundForcePerSquareInch, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.PoundPerInchSecondSquared, (q) => ((Pressure)q).ToUnit(PressureUnit.PoundPerInchSecondSquared));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.PoundPerInchSecondSquared, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TechnicalAtmosphere, (q) => ((Pressure)q).ToUnit(PressureUnit.TechnicalAtmosphere));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TechnicalAtmosphere, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TonneForcePerSquareCentimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.TonneForcePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TonneForcePerSquareCentimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TonneForcePerSquareMeter, (q) => ((Pressure)q).ToUnit(PressureUnit.TonneForcePerSquareMeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TonneForcePerSquareMeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.TonneForcePerSquareMillimeter, (q) => ((Pressure)q).ToUnit(PressureUnit.TonneForcePerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.TonneForcePerSquareMillimeter, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure>(Pressure.BaseUnit, PressureUnit.Torr, (q) => ((Pressure)q).ToUnit(PressureUnit.Torr));
            unitConverter.SetConversionFunction<Pressure>(PressureUnit.Torr, Pressure.BaseUnit, (q) => ((Pressure)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.AtmospherePerSecond, (q) => ((PressureChangeRate)q).ToUnit(PressureChangeRateUnit.AtmospherePerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.AtmospherePerSecond, PressureChangeRate.BaseUnit, (q) => ((PressureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.KilopascalPerMinute, (q) => ((PressureChangeRate)q).ToUnit(PressureChangeRateUnit.KilopascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.KilopascalPerMinute, PressureChangeRate.BaseUnit, (q) => ((PressureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.KilopascalPerSecond, (q) => ((PressureChangeRate)q).ToUnit(PressureChangeRateUnit.KilopascalPerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.KilopascalPerSecond, PressureChangeRate.BaseUnit, (q) => ((PressureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.MegapascalPerMinute, (q) => ((PressureChangeRate)q).ToUnit(PressureChangeRateUnit.MegapascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.MegapascalPerMinute, PressureChangeRate.BaseUnit, (q) => ((PressureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.MegapascalPerSecond, (q) => ((PressureChangeRate)q).ToUnit(PressureChangeRateUnit.MegapascalPerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.MegapascalPerSecond, PressureChangeRate.BaseUnit, (q) => ((PressureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRateUnit.PascalPerMinute, (q) => ((PressureChangeRate)q).ToUnit(PressureChangeRateUnit.PascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRateUnit.PascalPerMinute, PressureChangeRate.BaseUnit, (q) => ((PressureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate>(PressureChangeRate.BaseUnit, PressureChangeRate.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, Ratio.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerBillion, (q) => ((Ratio)q).ToUnit(RatioUnit.PartPerBillion));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerBillion, Ratio.BaseUnit, (q) => ((Ratio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerMillion, (q) => ((Ratio)q).ToUnit(RatioUnit.PartPerMillion));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerMillion, Ratio.BaseUnit, (q) => ((Ratio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerThousand, (q) => ((Ratio)q).ToUnit(RatioUnit.PartPerThousand));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerThousand, Ratio.BaseUnit, (q) => ((Ratio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.PartPerTrillion, (q) => ((Ratio)q).ToUnit(RatioUnit.PartPerTrillion));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.PartPerTrillion, Ratio.BaseUnit, (q) => ((Ratio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio>(Ratio.BaseUnit, RatioUnit.Percent, (q) => ((Ratio)q).ToUnit(RatioUnit.Percent));
            unitConverter.SetConversionFunction<Ratio>(RatioUnit.Percent, Ratio.BaseUnit, (q) => ((Ratio)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergy.BaseUnit, ReactiveEnergyUnit.KilovoltampereReactiveHour, (q) => ((ReactiveEnergy)q).ToUnit(ReactiveEnergyUnit.KilovoltampereReactiveHour));
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergyUnit.KilovoltampereReactiveHour, ReactiveEnergy.BaseUnit, (q) => ((ReactiveEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergy.BaseUnit, ReactiveEnergyUnit.MegavoltampereReactiveHour, (q) => ((ReactiveEnergy)q).ToUnit(ReactiveEnergyUnit.MegavoltampereReactiveHour));
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergyUnit.MegavoltampereReactiveHour, ReactiveEnergy.BaseUnit, (q) => ((ReactiveEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy>(ReactiveEnergy.BaseUnit, ReactiveEnergy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePowerUnit.GigavoltampereReactive, (q) => ((ReactivePower)q).ToUnit(ReactivePowerUnit.GigavoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePowerUnit.GigavoltampereReactive, ReactivePower.BaseUnit, (q) => ((ReactivePower)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePowerUnit.KilovoltampereReactive, (q) => ((ReactivePower)q).ToUnit(ReactivePowerUnit.KilovoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePowerUnit.KilovoltampereReactive, ReactivePower.BaseUnit, (q) => ((ReactivePower)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePowerUnit.MegavoltampereReactive, (q) => ((ReactivePower)q).ToUnit(ReactivePowerUnit.MegavoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePowerUnit.MegavoltampereReactive, ReactivePower.BaseUnit, (q) => ((ReactivePower)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower>(ReactivePower.BaseUnit, ReactivePower.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAcceleration.BaseUnit, RotationalAccelerationUnit.DegreePerSecondSquared, (q) => ((RotationalAcceleration)q).ToUnit(RotationalAccelerationUnit.DegreePerSecondSquared));
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAccelerationUnit.DegreePerSecondSquared, RotationalAcceleration.BaseUnit, (q) => ((RotationalAcceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAcceleration.BaseUnit, RotationalAcceleration.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAcceleration.BaseUnit, RotationalAccelerationUnit.RevolutionPerMinutePerSecond, (q) => ((RotationalAcceleration)q).ToUnit(RotationalAccelerationUnit.RevolutionPerMinutePerSecond));
            unitConverter.SetConversionFunction<RotationalAcceleration>(RotationalAccelerationUnit.RevolutionPerMinutePerSecond, RotationalAcceleration.BaseUnit, (q) => ((RotationalAcceleration)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.CentiradianPerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.CentiradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.CentiradianPerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.DeciradianPerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.DeciradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.DeciradianPerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.DegreePerMinute, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.DegreePerMinute));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.DegreePerMinute, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.DegreePerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.DegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.DegreePerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MicrodegreePerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.MicrodegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MicrodegreePerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MicroradianPerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.MicroradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MicroradianPerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MillidegreePerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.MillidegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MillidegreePerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.MilliradianPerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.MilliradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.MilliradianPerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.NanodegreePerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.NanodegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.NanodegreePerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.NanoradianPerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.NanoradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.NanoradianPerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeed.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.RevolutionPerMinute, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.RevolutionPerMinute));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.RevolutionPerMinute, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeed.BaseUnit, RotationalSpeedUnit.RevolutionPerSecond, (q) => ((RotationalSpeed)q).ToUnit(RotationalSpeedUnit.RevolutionPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed>(RotationalSpeedUnit.RevolutionPerSecond, RotationalSpeed.BaseUnit, (q) => ((RotationalSpeed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffness.BaseUnit, RotationalStiffnessUnit.KilonewtonMeterPerRadian, (q) => ((RotationalStiffness)q).ToUnit(RotationalStiffnessUnit.KilonewtonMeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffnessUnit.KilonewtonMeterPerRadian, RotationalStiffness.BaseUnit, (q) => ((RotationalStiffness)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffness.BaseUnit, RotationalStiffnessUnit.MeganewtonMeterPerRadian, (q) => ((RotationalStiffness)q).ToUnit(RotationalStiffnessUnit.MeganewtonMeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffnessUnit.MeganewtonMeterPerRadian, RotationalStiffness.BaseUnit, (q) => ((RotationalStiffness)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness>(RotationalStiffness.BaseUnit, RotationalStiffness.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLength.BaseUnit, RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter, (q) => ((RotationalStiffnessPerLength)q).ToUnit(RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter, RotationalStiffnessPerLength.BaseUnit, (q) => ((RotationalStiffnessPerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLength.BaseUnit, RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter, (q) => ((RotationalStiffnessPerLength)q).ToUnit(RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter, RotationalStiffnessPerLength.BaseUnit, (q) => ((RotationalStiffnessPerLength)q).ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength>(RotationalStiffnessPerLength.BaseUnit, RotationalStiffnessPerLength.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<SolidAngle>(SolidAngle.BaseUnit, SolidAngle.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.BtuPerPound, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.BtuPerPound));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.BtuPerPound, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.CaloriePerGram, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.CaloriePerGram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.CaloriePerGram, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.KilocaloriePerGram, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.KilocaloriePerGram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.KilocaloriePerGram, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.KilojoulePerKilogram, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.KilojoulePerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.KilojoulePerKilogram, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.KilowattHourPerKilogram, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.KilowattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.KilowattHourPerKilogram, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.MegajoulePerKilogram, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.MegajoulePerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.MegajoulePerKilogram, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.MegawattHourPerKilogram, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.MegawattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.MegawattHourPerKilogram, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergy.BaseUnit, SpecificEnergyUnit.WattHourPerKilogram, (q) => ((SpecificEnergy)q).ToUnit(SpecificEnergyUnit.WattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy>(SpecificEnergyUnit.WattHourPerKilogram, SpecificEnergy.BaseUnit, (q) => ((SpecificEnergy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.CaloriePerGramKelvin, (q) => ((SpecificEntropy)q).ToUnit(SpecificEntropyUnit.CaloriePerGramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.CaloriePerGramKelvin, SpecificEntropy.BaseUnit, (q) => ((SpecificEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, (q) => ((SpecificEntropy)q).ToUnit(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, SpecificEntropy.BaseUnit, (q) => ((SpecificEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropy.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.KilocaloriePerGramKelvin, (q) => ((SpecificEntropy)q).ToUnit(SpecificEntropyUnit.KilocaloriePerGramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.KilocaloriePerGramKelvin, SpecificEntropy.BaseUnit, (q) => ((SpecificEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, (q) => ((SpecificEntropy)q).ToUnit(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, SpecificEntropy.BaseUnit, (q) => ((SpecificEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.KilojoulePerKilogramKelvin, (q) => ((SpecificEntropy)q).ToUnit(SpecificEntropyUnit.KilojoulePerKilogramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.KilojoulePerKilogramKelvin, SpecificEntropy.BaseUnit, (q) => ((SpecificEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, (q) => ((SpecificEntropy)q).ToUnit(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, SpecificEntropy.BaseUnit, (q) => ((SpecificEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropy.BaseUnit, SpecificEntropyUnit.MegajoulePerKilogramKelvin, (q) => ((SpecificEntropy)q).ToUnit(SpecificEntropyUnit.MegajoulePerKilogramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy>(SpecificEntropyUnit.MegajoulePerKilogramKelvin, SpecificEntropy.BaseUnit, (q) => ((SpecificEntropy)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolume.BaseUnit, SpecificVolumeUnit.CubicFootPerPound, (q) => ((SpecificVolume)q).ToUnit(SpecificVolumeUnit.CubicFootPerPound));
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolumeUnit.CubicFootPerPound, SpecificVolume.BaseUnit, (q) => ((SpecificVolume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolume.BaseUnit, SpecificVolume.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolume.BaseUnit, SpecificVolumeUnit.MillicubicMeterPerKilogram, (q) => ((SpecificVolume)q).ToUnit(SpecificVolumeUnit.MillicubicMeterPerKilogram));
            unitConverter.SetConversionFunction<SpecificVolume>(SpecificVolumeUnit.MillicubicMeterPerKilogram, SpecificVolume.BaseUnit, (q) => ((SpecificVolume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicCentimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilogramForcePerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilogramForcePerCubicCentimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicMeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilogramForcePerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilogramForcePerCubicMeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicMillimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilogramForcePerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilogramForcePerCubicMillimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicCentimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilonewtonPerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilonewtonPerCubicCentimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicMeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilonewtonPerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilonewtonPerCubicMeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicMillimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilonewtonPerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilonewtonPerCubicMillimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilopoundForcePerCubicFoot, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilopoundForcePerCubicFoot));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilopoundForcePerCubicFoot, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.KilopoundForcePerCubicInch, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.KilopoundForcePerCubicInch));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.KilopoundForcePerCubicInch, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.MeganewtonPerCubicMeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.MeganewtonPerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.MeganewtonPerCubicMeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.NewtonPerCubicCentimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.NewtonPerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.NewtonPerCubicCentimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeight.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.NewtonPerCubicMillimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.NewtonPerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.NewtonPerCubicMillimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.PoundForcePerCubicFoot, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.PoundForcePerCubicFoot));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.PoundForcePerCubicFoot, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.PoundForcePerCubicInch, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.PoundForcePerCubicInch));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.PoundForcePerCubicInch, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.TonneForcePerCubicCentimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.TonneForcePerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.TonneForcePerCubicCentimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.TonneForcePerCubicMeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.TonneForcePerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.TonneForcePerCubicMeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeight.BaseUnit, SpecificWeightUnit.TonneForcePerCubicMillimeter, (q) => ((SpecificWeight)q).ToUnit(SpecificWeightUnit.TonneForcePerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight>(SpecificWeightUnit.TonneForcePerCubicMillimeter, SpecificWeight.BaseUnit, (q) => ((SpecificWeight)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.CentimeterPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.CentimeterPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.CentimeterPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.CentimeterPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.CentimeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.CentimeterPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.CentimeterPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.CentimeterPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.CentimeterPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.DecimeterPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.DecimeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.DecimeterPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.DecimeterPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.DecimeterPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.DecimeterPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.FootPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.FootPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.FootPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.FootPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.FootPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.FootPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.FootPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.FootPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.FootPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.InchPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.InchPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.InchPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.InchPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.InchPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.InchPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.InchPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.InchPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.InchPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.KilometerPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.KilometerPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.KilometerPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.KilometerPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.KilometerPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.KilometerPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.KilometerPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.KilometerPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.KilometerPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.Knot, (q) => ((Speed)q).ToUnit(SpeedUnit.Knot));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.Knot, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MeterPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.MeterPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MeterPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MeterPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.MeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MeterPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, Speed.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MicrometerPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.MicrometerPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MicrometerPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MicrometerPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.MicrometerPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MicrometerPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MilePerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.MilePerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MilePerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MillimeterPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.MillimeterPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MillimeterPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MillimeterPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.MillimeterPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MillimeterPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.MillimeterPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.MillimeterPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.MillimeterPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.NanometerPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.NanometerPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.NanometerPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.NanometerPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.NanometerPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.NanometerPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.UsSurveyFootPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.UsSurveyFootPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.UsSurveyFootPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.UsSurveyFootPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.UsSurveyFootPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.UsSurveyFootPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.UsSurveyFootPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.UsSurveyFootPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.UsSurveyFootPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.YardPerHour, (q) => ((Speed)q).ToUnit(SpeedUnit.YardPerHour));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.YardPerHour, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.YardPerMinute, (q) => ((Speed)q).ToUnit(SpeedUnit.YardPerMinute));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.YardPerMinute, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Speed>(Speed.BaseUnit, SpeedUnit.YardPerSecond, (q) => ((Speed)q).ToUnit(SpeedUnit.YardPerSecond));
            unitConverter.SetConversionFunction<Speed>(SpeedUnit.YardPerSecond, Speed.BaseUnit, (q) => ((Speed)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeCelsius, (q) => ((Temperature)q).ToUnit(TemperatureUnit.DegreeCelsius));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeCelsius, Temperature.BaseUnit, (q) => ((Temperature)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeDelisle, (q) => ((Temperature)q).ToUnit(TemperatureUnit.DegreeDelisle));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeDelisle, Temperature.BaseUnit, (q) => ((Temperature)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeFahrenheit, (q) => ((Temperature)q).ToUnit(TemperatureUnit.DegreeFahrenheit));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeFahrenheit, Temperature.BaseUnit, (q) => ((Temperature)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeNewton, (q) => ((Temperature)q).ToUnit(TemperatureUnit.DegreeNewton));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeNewton, Temperature.BaseUnit, (q) => ((Temperature)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeRankine, (q) => ((Temperature)q).ToUnit(TemperatureUnit.DegreeRankine));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeRankine, Temperature.BaseUnit, (q) => ((Temperature)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeReaumur, (q) => ((Temperature)q).ToUnit(TemperatureUnit.DegreeReaumur));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeReaumur, Temperature.BaseUnit, (q) => ((Temperature)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, TemperatureUnit.DegreeRoemer, (q) => ((Temperature)q).ToUnit(TemperatureUnit.DegreeRoemer));
            unitConverter.SetConversionFunction<Temperature>(TemperatureUnit.DegreeRoemer, Temperature.BaseUnit, (q) => ((Temperature)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature>(Temperature.BaseUnit, Temperature.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.DegreeCelsiusPerMinute, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.DegreeCelsiusPerMinute));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.DegreeCelsiusPerMinute, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRate.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRate.BaseUnit, TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond, (q) => ((TemperatureChangeRate)q).ToUnit(TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate>(TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond, TemperatureChangeRate.BaseUnit, (q) => ((TemperatureChangeRate)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeCelsius, (q) => ((TemperatureDelta)q).ToUnit(TemperatureDeltaUnit.DegreeCelsius));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeCelsius, TemperatureDelta.BaseUnit, (q) => ((TemperatureDelta)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeDelisle, (q) => ((TemperatureDelta)q).ToUnit(TemperatureDeltaUnit.DegreeDelisle));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeDelisle, TemperatureDelta.BaseUnit, (q) => ((TemperatureDelta)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeFahrenheit, (q) => ((TemperatureDelta)q).ToUnit(TemperatureDeltaUnit.DegreeFahrenheit));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeFahrenheit, TemperatureDelta.BaseUnit, (q) => ((TemperatureDelta)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeNewton, (q) => ((TemperatureDelta)q).ToUnit(TemperatureDeltaUnit.DegreeNewton));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeNewton, TemperatureDelta.BaseUnit, (q) => ((TemperatureDelta)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeRankine, (q) => ((TemperatureDelta)q).ToUnit(TemperatureDeltaUnit.DegreeRankine));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeRankine, TemperatureDelta.BaseUnit, (q) => ((TemperatureDelta)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeReaumur, (q) => ((TemperatureDelta)q).ToUnit(TemperatureDeltaUnit.DegreeReaumur));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeReaumur, TemperatureDelta.BaseUnit, (q) => ((TemperatureDelta)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDeltaUnit.DegreeRoemer, (q) => ((TemperatureDelta)q).ToUnit(TemperatureDeltaUnit.DegreeRoemer));
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDeltaUnit.DegreeRoemer, TemperatureDelta.BaseUnit, (q) => ((TemperatureDelta)q).ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta>(TemperatureDelta.BaseUnit, TemperatureDelta.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ThermalConductivity>(ThermalConductivity.BaseUnit, ThermalConductivityUnit.BtuPerHourFootFahrenheit, (q) => ((ThermalConductivity)q).ToUnit(ThermalConductivityUnit.BtuPerHourFootFahrenheit));
            unitConverter.SetConversionFunction<ThermalConductivity>(ThermalConductivityUnit.BtuPerHourFootFahrenheit, ThermalConductivity.BaseUnit, (q) => ((ThermalConductivity)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalConductivity>(ThermalConductivity.BaseUnit, ThermalConductivity.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu, (q) => ((ThermalResistance)q).ToUnit(ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu, ThermalResistance.BaseUnit, (q) => ((ThermalResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie, (q) => ((ThermalResistance)q).ToUnit(ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie, ThermalResistance.BaseUnit, (q) => ((ThermalResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.SquareCentimeterKelvinPerWatt, (q) => ((ThermalResistance)q).ToUnit(ThermalResistanceUnit.SquareCentimeterKelvinPerWatt));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.SquareCentimeterKelvinPerWatt, ThermalResistance.BaseUnit, (q) => ((ThermalResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt, (q) => ((ThermalResistance)q).ToUnit(ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt));
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt, ThermalResistance.BaseUnit, (q) => ((ThermalResistance)q).ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance>(ThermalResistance.BaseUnit, ThermalResistance.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilogramForceCentimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.KilogramForceCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilogramForceCentimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilogramForceMeter, (q) => ((Torque)q).ToUnit(TorqueUnit.KilogramForceMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilogramForceMeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilogramForceMillimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.KilogramForceMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilogramForceMillimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilonewtonCentimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.KilonewtonCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilonewtonCentimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilonewtonMeter, (q) => ((Torque)q).ToUnit(TorqueUnit.KilonewtonMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilonewtonMeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilonewtonMillimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.KilonewtonMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilonewtonMillimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilopoundForceFoot, (q) => ((Torque)q).ToUnit(TorqueUnit.KilopoundForceFoot));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilopoundForceFoot, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.KilopoundForceInch, (q) => ((Torque)q).ToUnit(TorqueUnit.KilopoundForceInch));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.KilopoundForceInch, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MeganewtonCentimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.MeganewtonCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MeganewtonCentimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MeganewtonMeter, (q) => ((Torque)q).ToUnit(TorqueUnit.MeganewtonMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MeganewtonMeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MeganewtonMillimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.MeganewtonMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MeganewtonMillimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MegapoundForceFoot, (q) => ((Torque)q).ToUnit(TorqueUnit.MegapoundForceFoot));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MegapoundForceFoot, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.MegapoundForceInch, (q) => ((Torque)q).ToUnit(TorqueUnit.MegapoundForceInch));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.MegapoundForceInch, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.NewtonCentimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.NewtonCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.NewtonCentimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, Torque.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.NewtonMillimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.NewtonMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.NewtonMillimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.PoundForceFoot, (q) => ((Torque)q).ToUnit(TorqueUnit.PoundForceFoot));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.PoundForceFoot, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.PoundForceInch, (q) => ((Torque)q).ToUnit(TorqueUnit.PoundForceInch));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.PoundForceInch, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.TonneForceCentimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.TonneForceCentimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.TonneForceCentimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.TonneForceMeter, (q) => ((Torque)q).ToUnit(TorqueUnit.TonneForceMeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.TonneForceMeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Torque>(Torque.BaseUnit, TorqueUnit.TonneForceMillimeter, (q) => ((Torque)q).ToUnit(TorqueUnit.TonneForceMillimeter));
            unitConverter.SetConversionFunction<Torque>(TorqueUnit.TonneForceMillimeter, Torque.BaseUnit, (q) => ((Torque)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VitaminA>(VitaminA.BaseUnit, VitaminA.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.AcreFoot, (q) => ((Volume)q).ToUnit(VolumeUnit.AcreFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.AcreFoot, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.AuTablespoon, (q) => ((Volume)q).ToUnit(VolumeUnit.AuTablespoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.AuTablespoon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Centiliter, (q) => ((Volume)q).ToUnit(VolumeUnit.Centiliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Centiliter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicCentimeter, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicCentimeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicCentimeter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicDecimeter, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicDecimeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicDecimeter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicFoot, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicFoot, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicInch, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicInch));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicInch, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicKilometer, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicKilometer));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicKilometer, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, Volume.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicMicrometer, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicMicrometer));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicMicrometer, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicMile, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicMile));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicMile, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicMillimeter, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicMillimeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicMillimeter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.CubicYard, (q) => ((Volume)q).ToUnit(VolumeUnit.CubicYard));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.CubicYard, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Deciliter, (q) => ((Volume)q).ToUnit(VolumeUnit.Deciliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Deciliter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.HectocubicFoot, (q) => ((Volume)q).ToUnit(VolumeUnit.HectocubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.HectocubicFoot, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.HectocubicMeter, (q) => ((Volume)q).ToUnit(VolumeUnit.HectocubicMeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.HectocubicMeter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Hectoliter, (q) => ((Volume)q).ToUnit(VolumeUnit.Hectoliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Hectoliter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.ImperialBeerBarrel, (q) => ((Volume)q).ToUnit(VolumeUnit.ImperialBeerBarrel));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.ImperialBeerBarrel, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.ImperialGallon, (q) => ((Volume)q).ToUnit(VolumeUnit.ImperialGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.ImperialGallon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.ImperialOunce, (q) => ((Volume)q).ToUnit(VolumeUnit.ImperialOunce));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.ImperialOunce, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KilocubicFoot, (q) => ((Volume)q).ToUnit(VolumeUnit.KilocubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KilocubicFoot, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KilocubicMeter, (q) => ((Volume)q).ToUnit(VolumeUnit.KilocubicMeter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KilocubicMeter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KiloimperialGallon, (q) => ((Volume)q).ToUnit(VolumeUnit.KiloimperialGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KiloimperialGallon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Kiloliter, (q) => ((Volume)q).ToUnit(VolumeUnit.Kiloliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Kiloliter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.KilousGallon, (q) => ((Volume)q).ToUnit(VolumeUnit.KilousGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.KilousGallon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Liter, (q) => ((Volume)q).ToUnit(VolumeUnit.Liter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Liter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MegacubicFoot, (q) => ((Volume)q).ToUnit(VolumeUnit.MegacubicFoot));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MegacubicFoot, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MegaimperialGallon, (q) => ((Volume)q).ToUnit(VolumeUnit.MegaimperialGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MegaimperialGallon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Megaliter, (q) => ((Volume)q).ToUnit(VolumeUnit.Megaliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Megaliter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MegausGallon, (q) => ((Volume)q).ToUnit(VolumeUnit.MegausGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MegausGallon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MetricCup, (q) => ((Volume)q).ToUnit(VolumeUnit.MetricCup));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MetricCup, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.MetricTeaspoon, (q) => ((Volume)q).ToUnit(VolumeUnit.MetricTeaspoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.MetricTeaspoon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Microliter, (q) => ((Volume)q).ToUnit(VolumeUnit.Microliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Microliter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.Milliliter, (q) => ((Volume)q).ToUnit(VolumeUnit.Milliliter));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.Milliliter, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.OilBarrel, (q) => ((Volume)q).ToUnit(VolumeUnit.OilBarrel));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.OilBarrel, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UkTablespoon, (q) => ((Volume)q).ToUnit(VolumeUnit.UkTablespoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UkTablespoon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsBeerBarrel, (q) => ((Volume)q).ToUnit(VolumeUnit.UsBeerBarrel));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsBeerBarrel, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsCustomaryCup, (q) => ((Volume)q).ToUnit(VolumeUnit.UsCustomaryCup));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsCustomaryCup, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsGallon, (q) => ((Volume)q).ToUnit(VolumeUnit.UsGallon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsGallon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsLegalCup, (q) => ((Volume)q).ToUnit(VolumeUnit.UsLegalCup));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsLegalCup, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsOunce, (q) => ((Volume)q).ToUnit(VolumeUnit.UsOunce));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsOunce, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsPint, (q) => ((Volume)q).ToUnit(VolumeUnit.UsPint));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsPint, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsQuart, (q) => ((Volume)q).ToUnit(VolumeUnit.UsQuart));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsQuart, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsTablespoon, (q) => ((Volume)q).ToUnit(VolumeUnit.UsTablespoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsTablespoon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<Volume>(Volume.BaseUnit, VolumeUnit.UsTeaspoon, (q) => ((Volume)q).ToUnit(VolumeUnit.UsTeaspoon));
            unitConverter.SetConversionFunction<Volume>(VolumeUnit.UsTeaspoon, Volume.BaseUnit, (q) => ((Volume)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.AcreFootPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerHour, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.AcreFootPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerHour, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.AcreFootPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.AcreFootPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.AcreFootPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.AcreFootPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CentiliterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CentiliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CentiliterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CentiliterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CentiliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CentiliterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicDecimeterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicDecimeterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicDecimeterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicFootPerHour, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicFootPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicFootPerHour, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicFootPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicFootPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicFootPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicFootPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicFootPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicFootPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMeterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicMeterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMeterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMeterPerHour, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicMeterPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMeterPerHour, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMeterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicMeterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMeterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlow.BaseUnit, (q) => q);
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicMillimeterPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicMillimeterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicMillimeterPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicYardPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerHour, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicYardPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerHour, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicYardPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.CubicYardPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.CubicYardPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.CubicYardPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.DeciliterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.DeciliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.DeciliterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.DeciliterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.DeciliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.DeciliterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.KiloliterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.KiloliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.KiloliterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.KiloliterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.KiloliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.KiloliterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.KilousGallonPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.KilousGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.KilousGallonPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.LiterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerHour, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.LiterPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerHour, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.LiterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.LiterPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.LiterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.LiterPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MegaliterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.MegaliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MegaliterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MegaukGallonPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.MegaukGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MegaukGallonPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MicroliterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.MicroliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MicroliterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MicroliterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.MicroliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MicroliterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MilliliterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.MilliliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MilliliterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MilliliterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.MilliliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MilliliterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.MillionUsGallonsPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.MillionUsGallonsPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.MillionUsGallonsPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.NanoliterPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.NanoliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.NanoliterPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.NanoliterPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.NanoliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.NanoliterPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.OilBarrelPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerHour, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.OilBarrelPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerHour, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.OilBarrelPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.OilBarrelPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.OilBarrelPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.OilBarrelPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UkGallonPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.UkGallonPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UkGallonPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UkGallonPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.UkGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UkGallonPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UkGallonPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.UkGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UkGallonPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerDay, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.UsGallonPerDay));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerDay, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerHour, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.UsGallonPerHour));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerHour, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerMinute, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.UsGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerMinute, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlow.BaseUnit, VolumeFlowUnit.UsGallonPerSecond, (q) => ((VolumeFlow)q).ToUnit(VolumeFlowUnit.UsGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow>(VolumeFlowUnit.UsGallonPerSecond, VolumeFlow.BaseUnit, (q) => ((VolumeFlow)q).ToBaseUnit());
        }
    }
}
