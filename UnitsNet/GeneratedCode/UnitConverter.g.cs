//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.Units;

// ReSharper disable RedundantCommaInArrayInitializer
// ReSharper disable once CheckNamespace

namespace UnitsNet
{
    public sealed partial class UnitConverter<T>
    {
        /// <summary>
        /// Registers the default conversion functions in the given <see cref="UnitConverter{T}"/> instance.
        /// </summary>
        /// <param name="unitConverter">The <see cref="UnitConverter{T}"/> to register the default conversion functions in.</param>
        public static void RegisterDefaultConversions(UnitConverter<T> unitConverter)
        {
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.CentimeterPerSecondSquared, q => q.ToUnit(AccelerationUnit.CentimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.CentimeterPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.DecimeterPerSecondSquared, q => q.ToUnit(AccelerationUnit.DecimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.DecimeterPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.FootPerSecondSquared, q => q.ToUnit(AccelerationUnit.FootPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.FootPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.InchPerSecondSquared, q => q.ToUnit(AccelerationUnit.InchPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.InchPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.KilometerPerSecondSquared, q => q.ToUnit(AccelerationUnit.KilometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.KilometerPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.KnotPerHour, q => q.ToUnit(AccelerationUnit.KnotPerHour));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.KnotPerHour, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.KnotPerMinute, q => q.ToUnit(AccelerationUnit.KnotPerMinute));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.KnotPerMinute, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.KnotPerSecond, q => q.ToUnit(AccelerationUnit.KnotPerSecond));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.KnotPerSecond, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, Acceleration<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.MicrometerPerSecondSquared, q => q.ToUnit(AccelerationUnit.MicrometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.MicrometerPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.MillimeterPerSecondSquared, q => q.ToUnit(AccelerationUnit.MillimeterPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.MillimeterPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.MillistandardGravity, q => q.ToUnit(AccelerationUnit.MillistandardGravity));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.MillistandardGravity, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.NanometerPerSecondSquared, q => q.ToUnit(AccelerationUnit.NanometerPerSecondSquared));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.NanometerPerSecondSquared, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Acceleration<T>>(Acceleration<T>.BaseUnit, AccelerationUnit.StandardGravity, q => q.ToUnit(AccelerationUnit.StandardGravity));
            unitConverter.SetConversionFunction<Acceleration<T>>(AccelerationUnit.StandardGravity, Acceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.Centimole, q => q.ToUnit(AmountOfSubstanceUnit.Centimole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.Centimole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.CentipoundMole, q => q.ToUnit(AmountOfSubstanceUnit.CentipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.CentipoundMole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.Decimole, q => q.ToUnit(AmountOfSubstanceUnit.Decimole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.Decimole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.DecipoundMole, q => q.ToUnit(AmountOfSubstanceUnit.DecipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.DecipoundMole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.Kilomole, q => q.ToUnit(AmountOfSubstanceUnit.Kilomole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.Kilomole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.KilopoundMole, q => q.ToUnit(AmountOfSubstanceUnit.KilopoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.KilopoundMole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.Megamole, q => q.ToUnit(AmountOfSubstanceUnit.Megamole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.Megamole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.Micromole, q => q.ToUnit(AmountOfSubstanceUnit.Micromole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.Micromole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.MicropoundMole, q => q.ToUnit(AmountOfSubstanceUnit.MicropoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.MicropoundMole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.Millimole, q => q.ToUnit(AmountOfSubstanceUnit.Millimole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.Millimole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.MillipoundMole, q => q.ToUnit(AmountOfSubstanceUnit.MillipoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.MillipoundMole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.Nanomole, q => q.ToUnit(AmountOfSubstanceUnit.Nanomole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.Nanomole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.NanopoundMole, q => q.ToUnit(AmountOfSubstanceUnit.NanopoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.NanopoundMole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstance<T>.BaseUnit, AmountOfSubstanceUnit.PoundMole, q => q.ToUnit(AmountOfSubstanceUnit.PoundMole));
            unitConverter.SetConversionFunction<AmountOfSubstance<T>>(AmountOfSubstanceUnit.PoundMole, AmountOfSubstance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio<T>>(AmplitudeRatio<T>.BaseUnit, AmplitudeRatioUnit.DecibelMicrovolt, q => q.ToUnit(AmplitudeRatioUnit.DecibelMicrovolt));
            unitConverter.SetConversionFunction<AmplitudeRatio<T>>(AmplitudeRatioUnit.DecibelMicrovolt, AmplitudeRatio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio<T>>(AmplitudeRatio<T>.BaseUnit, AmplitudeRatioUnit.DecibelMillivolt, q => q.ToUnit(AmplitudeRatioUnit.DecibelMillivolt));
            unitConverter.SetConversionFunction<AmplitudeRatio<T>>(AmplitudeRatioUnit.DecibelMillivolt, AmplitudeRatio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio<T>>(AmplitudeRatio<T>.BaseUnit, AmplitudeRatioUnit.DecibelUnloaded, q => q.ToUnit(AmplitudeRatioUnit.DecibelUnloaded));
            unitConverter.SetConversionFunction<AmplitudeRatio<T>>(AmplitudeRatioUnit.DecibelUnloaded, AmplitudeRatio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AmplitudeRatio<T>>(AmplitudeRatio<T>.BaseUnit, AmplitudeRatio<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Arcminute, q => q.ToUnit(AngleUnit.Arcminute));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Arcminute, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Arcsecond, q => q.ToUnit(AngleUnit.Arcsecond));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Arcsecond, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Centiradian, q => q.ToUnit(AngleUnit.Centiradian));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Centiradian, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Deciradian, q => q.ToUnit(AngleUnit.Deciradian));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Deciradian, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, Angle<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Gradian, q => q.ToUnit(AngleUnit.Gradian));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Gradian, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Microdegree, q => q.ToUnit(AngleUnit.Microdegree));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Microdegree, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Microradian, q => q.ToUnit(AngleUnit.Microradian));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Microradian, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Millidegree, q => q.ToUnit(AngleUnit.Millidegree));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Millidegree, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Milliradian, q => q.ToUnit(AngleUnit.Milliradian));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Milliradian, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Nanodegree, q => q.ToUnit(AngleUnit.Nanodegree));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Nanodegree, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Nanoradian, q => q.ToUnit(AngleUnit.Nanoradian));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Nanoradian, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Radian, q => q.ToUnit(AngleUnit.Radian));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Radian, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Angle<T>>(Angle<T>.BaseUnit, AngleUnit.Revolution, q => q.ToUnit(AngleUnit.Revolution));
            unitConverter.SetConversionFunction<Angle<T>>(AngleUnit.Revolution, Angle<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy<T>>(ApparentEnergy<T>.BaseUnit, ApparentEnergyUnit.KilovoltampereHour, q => q.ToUnit(ApparentEnergyUnit.KilovoltampereHour));
            unitConverter.SetConversionFunction<ApparentEnergy<T>>(ApparentEnergyUnit.KilovoltampereHour, ApparentEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy<T>>(ApparentEnergy<T>.BaseUnit, ApparentEnergyUnit.MegavoltampereHour, q => q.ToUnit(ApparentEnergyUnit.MegavoltampereHour));
            unitConverter.SetConversionFunction<ApparentEnergy<T>>(ApparentEnergyUnit.MegavoltampereHour, ApparentEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentEnergy<T>>(ApparentEnergy<T>.BaseUnit, ApparentEnergy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ApparentPower<T>>(ApparentPower<T>.BaseUnit, ApparentPowerUnit.Gigavoltampere, q => q.ToUnit(ApparentPowerUnit.Gigavoltampere));
            unitConverter.SetConversionFunction<ApparentPower<T>>(ApparentPowerUnit.Gigavoltampere, ApparentPower<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower<T>>(ApparentPower<T>.BaseUnit, ApparentPowerUnit.Kilovoltampere, q => q.ToUnit(ApparentPowerUnit.Kilovoltampere));
            unitConverter.SetConversionFunction<ApparentPower<T>>(ApparentPowerUnit.Kilovoltampere, ApparentPower<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower<T>>(ApparentPower<T>.BaseUnit, ApparentPowerUnit.Megavoltampere, q => q.ToUnit(ApparentPowerUnit.Megavoltampere));
            unitConverter.SetConversionFunction<ApparentPower<T>>(ApparentPowerUnit.Megavoltampere, ApparentPower<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ApparentPower<T>>(ApparentPower<T>.BaseUnit, ApparentPower<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.Acre, q => q.ToUnit(AreaUnit.Acre));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.Acre, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.Hectare, q => q.ToUnit(AreaUnit.Hectare));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.Hectare, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareCentimeter, q => q.ToUnit(AreaUnit.SquareCentimeter));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareCentimeter, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareDecimeter, q => q.ToUnit(AreaUnit.SquareDecimeter));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareDecimeter, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareFoot, q => q.ToUnit(AreaUnit.SquareFoot));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareFoot, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareInch, q => q.ToUnit(AreaUnit.SquareInch));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareInch, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareKilometer, q => q.ToUnit(AreaUnit.SquareKilometer));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareKilometer, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, Area<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareMicrometer, q => q.ToUnit(AreaUnit.SquareMicrometer));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareMicrometer, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareMile, q => q.ToUnit(AreaUnit.SquareMile));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareMile, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareMillimeter, q => q.ToUnit(AreaUnit.SquareMillimeter));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareMillimeter, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareNauticalMile, q => q.ToUnit(AreaUnit.SquareNauticalMile));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareNauticalMile, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.SquareYard, q => q.ToUnit(AreaUnit.SquareYard));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.SquareYard, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Area<T>>(Area<T>.BaseUnit, AreaUnit.UsSurveySquareFoot, q => q.ToUnit(AreaUnit.UsSurveySquareFoot));
            unitConverter.SetConversionFunction<Area<T>>(AreaUnit.UsSurveySquareFoot, Area<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaDensity<T>>(AreaDensity<T>.BaseUnit, AreaDensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertia<T>.BaseUnit, AreaMomentOfInertiaUnit.CentimeterToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.CentimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertiaUnit.CentimeterToTheFourth, AreaMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertia<T>.BaseUnit, AreaMomentOfInertiaUnit.DecimeterToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.DecimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertiaUnit.DecimeterToTheFourth, AreaMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertia<T>.BaseUnit, AreaMomentOfInertiaUnit.FootToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.FootToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertiaUnit.FootToTheFourth, AreaMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertia<T>.BaseUnit, AreaMomentOfInertiaUnit.InchToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.InchToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertiaUnit.InchToTheFourth, AreaMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertia<T>.BaseUnit, AreaMomentOfInertia<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertia<T>.BaseUnit, AreaMomentOfInertiaUnit.MillimeterToTheFourth, q => q.ToUnit(AreaMomentOfInertiaUnit.MillimeterToTheFourth));
            unitConverter.SetConversionFunction<AreaMomentOfInertia<T>>(AreaMomentOfInertiaUnit.MillimeterToTheFourth, AreaMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRate<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.BytePerSecond, q => q.ToUnit(BitRateUnit.BytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.BytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.ExabitPerSecond, q => q.ToUnit(BitRateUnit.ExabitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.ExabitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.ExabytePerSecond, q => q.ToUnit(BitRateUnit.ExabytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.ExabytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.ExbibitPerSecond, q => q.ToUnit(BitRateUnit.ExbibitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.ExbibitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.ExbibytePerSecond, q => q.ToUnit(BitRateUnit.ExbibytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.ExbibytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.GibibitPerSecond, q => q.ToUnit(BitRateUnit.GibibitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.GibibitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.GibibytePerSecond, q => q.ToUnit(BitRateUnit.GibibytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.GibibytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.GigabitPerSecond, q => q.ToUnit(BitRateUnit.GigabitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.GigabitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.GigabytePerSecond, q => q.ToUnit(BitRateUnit.GigabytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.GigabytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.KibibitPerSecond, q => q.ToUnit(BitRateUnit.KibibitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.KibibitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.KibibytePerSecond, q => q.ToUnit(BitRateUnit.KibibytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.KibibytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.KilobitPerSecond, q => q.ToUnit(BitRateUnit.KilobitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.KilobitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.KilobytePerSecond, q => q.ToUnit(BitRateUnit.KilobytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.KilobytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.MebibitPerSecond, q => q.ToUnit(BitRateUnit.MebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.MebibitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.MebibytePerSecond, q => q.ToUnit(BitRateUnit.MebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.MebibytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.MegabitPerSecond, q => q.ToUnit(BitRateUnit.MegabitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.MegabitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.MegabytePerSecond, q => q.ToUnit(BitRateUnit.MegabytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.MegabytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.PebibitPerSecond, q => q.ToUnit(BitRateUnit.PebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.PebibitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.PebibytePerSecond, q => q.ToUnit(BitRateUnit.PebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.PebibytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.PetabitPerSecond, q => q.ToUnit(BitRateUnit.PetabitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.PetabitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.PetabytePerSecond, q => q.ToUnit(BitRateUnit.PetabytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.PetabytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.TebibitPerSecond, q => q.ToUnit(BitRateUnit.TebibitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.TebibitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.TebibytePerSecond, q => q.ToUnit(BitRateUnit.TebibytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.TebibytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.TerabitPerSecond, q => q.ToUnit(BitRateUnit.TerabitPerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.TerabitPerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BitRate<T>>(BitRate<T>.BaseUnit, BitRateUnit.TerabytePerSecond, q => q.ToUnit(BitRateUnit.TerabytePerSecond));
            unitConverter.SetConversionFunction<BitRate<T>>(BitRateUnit.TerabytePerSecond, BitRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption<T>>(BrakeSpecificFuelConsumption<T>.BaseUnit, BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour, q => q.ToUnit(BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour));
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption<T>>(BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour, BrakeSpecificFuelConsumption<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption<T>>(BrakeSpecificFuelConsumption<T>.BaseUnit, BrakeSpecificFuelConsumption<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption<T>>(BrakeSpecificFuelConsumption<T>.BaseUnit, BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour, q => q.ToUnit(BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour));
            unitConverter.SetConversionFunction<BrakeSpecificFuelConsumption<T>>(BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour, BrakeSpecificFuelConsumption<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance<T>>(Capacitance<T>.BaseUnit, Capacitance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Capacitance<T>>(Capacitance<T>.BaseUnit, CapacitanceUnit.Kilofarad, q => q.ToUnit(CapacitanceUnit.Kilofarad));
            unitConverter.SetConversionFunction<Capacitance<T>>(CapacitanceUnit.Kilofarad, Capacitance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance<T>>(Capacitance<T>.BaseUnit, CapacitanceUnit.Megafarad, q => q.ToUnit(CapacitanceUnit.Megafarad));
            unitConverter.SetConversionFunction<Capacitance<T>>(CapacitanceUnit.Megafarad, Capacitance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance<T>>(Capacitance<T>.BaseUnit, CapacitanceUnit.Microfarad, q => q.ToUnit(CapacitanceUnit.Microfarad));
            unitConverter.SetConversionFunction<Capacitance<T>>(CapacitanceUnit.Microfarad, Capacitance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance<T>>(Capacitance<T>.BaseUnit, CapacitanceUnit.Millifarad, q => q.ToUnit(CapacitanceUnit.Millifarad));
            unitConverter.SetConversionFunction<Capacitance<T>>(CapacitanceUnit.Millifarad, Capacitance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance<T>>(Capacitance<T>.BaseUnit, CapacitanceUnit.Nanofarad, q => q.ToUnit(CapacitanceUnit.Nanofarad));
            unitConverter.SetConversionFunction<Capacitance<T>>(CapacitanceUnit.Nanofarad, Capacitance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Capacitance<T>>(Capacitance<T>.BaseUnit, CapacitanceUnit.Picofarad, q => q.ToUnit(CapacitanceUnit.Picofarad));
            unitConverter.SetConversionFunction<Capacitance<T>>(CapacitanceUnit.Picofarad, Capacitance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion<T>>(CoefficientOfThermalExpansion<T>.BaseUnit, CoefficientOfThermalExpansionUnit.InverseDegreeCelsius, q => q.ToUnit(CoefficientOfThermalExpansionUnit.InverseDegreeCelsius));
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion<T>>(CoefficientOfThermalExpansionUnit.InverseDegreeCelsius, CoefficientOfThermalExpansion<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion<T>>(CoefficientOfThermalExpansion<T>.BaseUnit, CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit, q => q.ToUnit(CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit));
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion<T>>(CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit, CoefficientOfThermalExpansion<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<CoefficientOfThermalExpansion<T>>(CoefficientOfThermalExpansion<T>.BaseUnit, CoefficientOfThermalExpansion<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.CentigramPerDeciliter, q => q.ToUnit(DensityUnit.CentigramPerDeciliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.CentigramPerDeciliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.CentigramPerLiter, q => q.ToUnit(DensityUnit.CentigramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.CentigramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.CentigramPerMilliliter, q => q.ToUnit(DensityUnit.CentigramPerMilliliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.CentigramPerMilliliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.DecigramPerDeciliter, q => q.ToUnit(DensityUnit.DecigramPerDeciliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.DecigramPerDeciliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.DecigramPerLiter, q => q.ToUnit(DensityUnit.DecigramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.DecigramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.DecigramPerMilliliter, q => q.ToUnit(DensityUnit.DecigramPerMilliliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.DecigramPerMilliliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.GramPerCubicCentimeter, q => q.ToUnit(DensityUnit.GramPerCubicCentimeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.GramPerCubicCentimeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.GramPerCubicMeter, q => q.ToUnit(DensityUnit.GramPerCubicMeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.GramPerCubicMeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.GramPerCubicMillimeter, q => q.ToUnit(DensityUnit.GramPerCubicMillimeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.GramPerCubicMillimeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.GramPerDeciliter, q => q.ToUnit(DensityUnit.GramPerDeciliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.GramPerDeciliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.GramPerLiter, q => q.ToUnit(DensityUnit.GramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.GramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.GramPerMilliliter, q => q.ToUnit(DensityUnit.GramPerMilliliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.GramPerMilliliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.KilogramPerCubicCentimeter, q => q.ToUnit(DensityUnit.KilogramPerCubicCentimeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.KilogramPerCubicCentimeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, Density<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.KilogramPerCubicMillimeter, q => q.ToUnit(DensityUnit.KilogramPerCubicMillimeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.KilogramPerCubicMillimeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.KilogramPerLiter, q => q.ToUnit(DensityUnit.KilogramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.KilogramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.KilopoundPerCubicFoot, q => q.ToUnit(DensityUnit.KilopoundPerCubicFoot));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.KilopoundPerCubicFoot, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.KilopoundPerCubicInch, q => q.ToUnit(DensityUnit.KilopoundPerCubicInch));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.KilopoundPerCubicInch, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MicrogramPerCubicMeter, q => q.ToUnit(DensityUnit.MicrogramPerCubicMeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MicrogramPerCubicMeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MicrogramPerDeciliter, q => q.ToUnit(DensityUnit.MicrogramPerDeciliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MicrogramPerDeciliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MicrogramPerLiter, q => q.ToUnit(DensityUnit.MicrogramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MicrogramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MicrogramPerMilliliter, q => q.ToUnit(DensityUnit.MicrogramPerMilliliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MicrogramPerMilliliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MilligramPerCubicMeter, q => q.ToUnit(DensityUnit.MilligramPerCubicMeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MilligramPerCubicMeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MilligramPerDeciliter, q => q.ToUnit(DensityUnit.MilligramPerDeciliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MilligramPerDeciliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MilligramPerLiter, q => q.ToUnit(DensityUnit.MilligramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MilligramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.MilligramPerMilliliter, q => q.ToUnit(DensityUnit.MilligramPerMilliliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.MilligramPerMilliliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.NanogramPerDeciliter, q => q.ToUnit(DensityUnit.NanogramPerDeciliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.NanogramPerDeciliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.NanogramPerLiter, q => q.ToUnit(DensityUnit.NanogramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.NanogramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.NanogramPerMilliliter, q => q.ToUnit(DensityUnit.NanogramPerMilliliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.NanogramPerMilliliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.PicogramPerDeciliter, q => q.ToUnit(DensityUnit.PicogramPerDeciliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.PicogramPerDeciliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.PicogramPerLiter, q => q.ToUnit(DensityUnit.PicogramPerLiter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.PicogramPerLiter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.PicogramPerMilliliter, q => q.ToUnit(DensityUnit.PicogramPerMilliliter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.PicogramPerMilliliter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.PoundPerCubicFoot, q => q.ToUnit(DensityUnit.PoundPerCubicFoot));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.PoundPerCubicFoot, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.PoundPerCubicInch, q => q.ToUnit(DensityUnit.PoundPerCubicInch));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.PoundPerCubicInch, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.PoundPerImperialGallon, q => q.ToUnit(DensityUnit.PoundPerImperialGallon));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.PoundPerImperialGallon, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.PoundPerUSGallon, q => q.ToUnit(DensityUnit.PoundPerUSGallon));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.PoundPerUSGallon, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.SlugPerCubicFoot, q => q.ToUnit(DensityUnit.SlugPerCubicFoot));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.SlugPerCubicFoot, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.TonnePerCubicCentimeter, q => q.ToUnit(DensityUnit.TonnePerCubicCentimeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.TonnePerCubicCentimeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.TonnePerCubicMeter, q => q.ToUnit(DensityUnit.TonnePerCubicMeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.TonnePerCubicMeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Density<T>>(Density<T>.BaseUnit, DensityUnit.TonnePerCubicMillimeter, q => q.ToUnit(DensityUnit.TonnePerCubicMillimeter));
            unitConverter.SetConversionFunction<Density<T>>(DensityUnit.TonnePerCubicMillimeter, Density<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Day, q => q.ToUnit(DurationUnit.Day));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Day, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Hour, q => q.ToUnit(DurationUnit.Hour));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Hour, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Microsecond, q => q.ToUnit(DurationUnit.Microsecond));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Microsecond, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Millisecond, q => q.ToUnit(DurationUnit.Millisecond));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Millisecond, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Minute, q => q.ToUnit(DurationUnit.Minute));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Minute, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Month30, q => q.ToUnit(DurationUnit.Month30));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Month30, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Nanosecond, q => q.ToUnit(DurationUnit.Nanosecond));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Nanosecond, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, Duration<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Week, q => q.ToUnit(DurationUnit.Week));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Week, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Duration<T>>(Duration<T>.BaseUnit, DurationUnit.Year365, q => q.ToUnit(DurationUnit.Year365));
            unitConverter.SetConversionFunction<Duration<T>>(DurationUnit.Year365, Duration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.Centipoise, q => q.ToUnit(DynamicViscosityUnit.Centipoise));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.Centipoise, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.MicropascalSecond, q => q.ToUnit(DynamicViscosityUnit.MicropascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.MicropascalSecond, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.MillipascalSecond, q => q.ToUnit(DynamicViscosityUnit.MillipascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.MillipascalSecond, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.PascalSecond, q => q.ToUnit(DynamicViscosityUnit.PascalSecond));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.PascalSecond, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.Poise, q => q.ToUnit(DynamicViscosityUnit.Poise));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.Poise, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.PoundForceSecondPerSquareFoot, q => q.ToUnit(DynamicViscosityUnit.PoundForceSecondPerSquareFoot));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.PoundForceSecondPerSquareFoot, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.PoundForceSecondPerSquareInch, q => q.ToUnit(DynamicViscosityUnit.PoundForceSecondPerSquareInch));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.PoundForceSecondPerSquareInch, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.PoundPerFootSecond, q => q.ToUnit(DynamicViscosityUnit.PoundPerFootSecond));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.PoundPerFootSecond, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosity<T>.BaseUnit, DynamicViscosityUnit.Reyn, q => q.ToUnit(DynamicViscosityUnit.Reyn));
            unitConverter.SetConversionFunction<DynamicViscosity<T>>(DynamicViscosityUnit.Reyn, DynamicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance<T>>(ElectricAdmittance<T>.BaseUnit, ElectricAdmittanceUnit.Microsiemens, q => q.ToUnit(ElectricAdmittanceUnit.Microsiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance<T>>(ElectricAdmittanceUnit.Microsiemens, ElectricAdmittance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance<T>>(ElectricAdmittance<T>.BaseUnit, ElectricAdmittanceUnit.Millisiemens, q => q.ToUnit(ElectricAdmittanceUnit.Millisiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance<T>>(ElectricAdmittanceUnit.Millisiemens, ElectricAdmittance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance<T>>(ElectricAdmittance<T>.BaseUnit, ElectricAdmittanceUnit.Nanosiemens, q => q.ToUnit(ElectricAdmittanceUnit.Nanosiemens));
            unitConverter.SetConversionFunction<ElectricAdmittance<T>>(ElectricAdmittanceUnit.Nanosiemens, ElectricAdmittance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricAdmittance<T>>(ElectricAdmittance<T>.BaseUnit, ElectricAdmittance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricCharge<T>.BaseUnit, ElectricChargeUnit.AmpereHour, q => q.ToUnit(ElectricChargeUnit.AmpereHour));
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricChargeUnit.AmpereHour, ElectricCharge<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricCharge<T>.BaseUnit, ElectricCharge<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricCharge<T>.BaseUnit, ElectricChargeUnit.KiloampereHour, q => q.ToUnit(ElectricChargeUnit.KiloampereHour));
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricChargeUnit.KiloampereHour, ElectricCharge<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricCharge<T>.BaseUnit, ElectricChargeUnit.MegaampereHour, q => q.ToUnit(ElectricChargeUnit.MegaampereHour));
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricChargeUnit.MegaampereHour, ElectricCharge<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricCharge<T>.BaseUnit, ElectricChargeUnit.MilliampereHour, q => q.ToUnit(ElectricChargeUnit.MilliampereHour));
            unitConverter.SetConversionFunction<ElectricCharge<T>>(ElectricChargeUnit.MilliampereHour, ElectricCharge<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricChargeDensity<T>>(ElectricChargeDensity<T>.BaseUnit, ElectricChargeDensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricConductance<T>>(ElectricConductance<T>.BaseUnit, ElectricConductanceUnit.Microsiemens, q => q.ToUnit(ElectricConductanceUnit.Microsiemens));
            unitConverter.SetConversionFunction<ElectricConductance<T>>(ElectricConductanceUnit.Microsiemens, ElectricConductance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductance<T>>(ElectricConductance<T>.BaseUnit, ElectricConductanceUnit.Millisiemens, q => q.ToUnit(ElectricConductanceUnit.Millisiemens));
            unitConverter.SetConversionFunction<ElectricConductance<T>>(ElectricConductanceUnit.Millisiemens, ElectricConductance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductance<T>>(ElectricConductance<T>.BaseUnit, ElectricConductance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricConductivity<T>>(ElectricConductivity<T>.BaseUnit, ElectricConductivityUnit.SiemensPerFoot, q => q.ToUnit(ElectricConductivityUnit.SiemensPerFoot));
            unitConverter.SetConversionFunction<ElectricConductivity<T>>(ElectricConductivityUnit.SiemensPerFoot, ElectricConductivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductivity<T>>(ElectricConductivity<T>.BaseUnit, ElectricConductivityUnit.SiemensPerInch, q => q.ToUnit(ElectricConductivityUnit.SiemensPerInch));
            unitConverter.SetConversionFunction<ElectricConductivity<T>>(ElectricConductivityUnit.SiemensPerInch, ElectricConductivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricConductivity<T>>(ElectricConductivity<T>.BaseUnit, ElectricConductivity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrent<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrentUnit.Centiampere, q => q.ToUnit(ElectricCurrentUnit.Centiampere));
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrentUnit.Centiampere, ElectricCurrent<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrentUnit.Kiloampere, q => q.ToUnit(ElectricCurrentUnit.Kiloampere));
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrentUnit.Kiloampere, ElectricCurrent<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrentUnit.Megaampere, q => q.ToUnit(ElectricCurrentUnit.Megaampere));
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrentUnit.Megaampere, ElectricCurrent<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrentUnit.Microampere, q => q.ToUnit(ElectricCurrentUnit.Microampere));
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrentUnit.Microampere, ElectricCurrent<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrentUnit.Milliampere, q => q.ToUnit(ElectricCurrentUnit.Milliampere));
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrentUnit.Milliampere, ElectricCurrent<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrentUnit.Nanoampere, q => q.ToUnit(ElectricCurrentUnit.Nanoampere));
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrentUnit.Nanoampere, ElectricCurrent<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrent<T>.BaseUnit, ElectricCurrentUnit.Picoampere, q => q.ToUnit(ElectricCurrentUnit.Picoampere));
            unitConverter.SetConversionFunction<ElectricCurrent<T>>(ElectricCurrentUnit.Picoampere, ElectricCurrent<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentDensity<T>>(ElectricCurrentDensity<T>.BaseUnit, ElectricCurrentDensityUnit.AmperePerSquareFoot, q => q.ToUnit(ElectricCurrentDensityUnit.AmperePerSquareFoot));
            unitConverter.SetConversionFunction<ElectricCurrentDensity<T>>(ElectricCurrentDensityUnit.AmperePerSquareFoot, ElectricCurrentDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentDensity<T>>(ElectricCurrentDensity<T>.BaseUnit, ElectricCurrentDensityUnit.AmperePerSquareInch, q => q.ToUnit(ElectricCurrentDensityUnit.AmperePerSquareInch));
            unitConverter.SetConversionFunction<ElectricCurrentDensity<T>>(ElectricCurrentDensityUnit.AmperePerSquareInch, ElectricCurrentDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentDensity<T>>(ElectricCurrentDensity<T>.BaseUnit, ElectricCurrentDensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricCurrentGradient<T>>(ElectricCurrentGradient<T>.BaseUnit, ElectricCurrentGradientUnit.AmperePerMicrosecond, q => q.ToUnit(ElectricCurrentGradientUnit.AmperePerMicrosecond));
            unitConverter.SetConversionFunction<ElectricCurrentGradient<T>>(ElectricCurrentGradientUnit.AmperePerMicrosecond, ElectricCurrentGradient<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentGradient<T>>(ElectricCurrentGradient<T>.BaseUnit, ElectricCurrentGradientUnit.AmperePerMillisecond, q => q.ToUnit(ElectricCurrentGradientUnit.AmperePerMillisecond));
            unitConverter.SetConversionFunction<ElectricCurrentGradient<T>>(ElectricCurrentGradientUnit.AmperePerMillisecond, ElectricCurrentGradient<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentGradient<T>>(ElectricCurrentGradient<T>.BaseUnit, ElectricCurrentGradientUnit.AmperePerNanosecond, q => q.ToUnit(ElectricCurrentGradientUnit.AmperePerNanosecond));
            unitConverter.SetConversionFunction<ElectricCurrentGradient<T>>(ElectricCurrentGradientUnit.AmperePerNanosecond, ElectricCurrentGradient<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricCurrentGradient<T>>(ElectricCurrentGradient<T>.BaseUnit, ElectricCurrentGradient<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricField<T>>(ElectricField<T>.BaseUnit, ElectricField<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricInductance<T>>(ElectricInductance<T>.BaseUnit, ElectricInductance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricInductance<T>>(ElectricInductance<T>.BaseUnit, ElectricInductanceUnit.Microhenry, q => q.ToUnit(ElectricInductanceUnit.Microhenry));
            unitConverter.SetConversionFunction<ElectricInductance<T>>(ElectricInductanceUnit.Microhenry, ElectricInductance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricInductance<T>>(ElectricInductance<T>.BaseUnit, ElectricInductanceUnit.Millihenry, q => q.ToUnit(ElectricInductanceUnit.Millihenry));
            unitConverter.SetConversionFunction<ElectricInductance<T>>(ElectricInductanceUnit.Millihenry, ElectricInductance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricInductance<T>>(ElectricInductance<T>.BaseUnit, ElectricInductanceUnit.Nanohenry, q => q.ToUnit(ElectricInductanceUnit.Nanohenry));
            unitConverter.SetConversionFunction<ElectricInductance<T>>(ElectricInductanceUnit.Nanohenry, ElectricInductance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotential<T>.BaseUnit, ElectricPotentialUnit.Kilovolt, q => q.ToUnit(ElectricPotentialUnit.Kilovolt));
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotentialUnit.Kilovolt, ElectricPotential<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotential<T>.BaseUnit, ElectricPotentialUnit.Megavolt, q => q.ToUnit(ElectricPotentialUnit.Megavolt));
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotentialUnit.Megavolt, ElectricPotential<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotential<T>.BaseUnit, ElectricPotentialUnit.Microvolt, q => q.ToUnit(ElectricPotentialUnit.Microvolt));
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotentialUnit.Microvolt, ElectricPotential<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotential<T>.BaseUnit, ElectricPotentialUnit.Millivolt, q => q.ToUnit(ElectricPotentialUnit.Millivolt));
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotentialUnit.Millivolt, ElectricPotential<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotential<T>>(ElectricPotential<T>.BaseUnit, ElectricPotential<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAc<T>.BaseUnit, ElectricPotentialAcUnit.KilovoltAc, q => q.ToUnit(ElectricPotentialAcUnit.KilovoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAcUnit.KilovoltAc, ElectricPotentialAc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAc<T>.BaseUnit, ElectricPotentialAcUnit.MegavoltAc, q => q.ToUnit(ElectricPotentialAcUnit.MegavoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAcUnit.MegavoltAc, ElectricPotentialAc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAc<T>.BaseUnit, ElectricPotentialAcUnit.MicrovoltAc, q => q.ToUnit(ElectricPotentialAcUnit.MicrovoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAcUnit.MicrovoltAc, ElectricPotentialAc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAc<T>.BaseUnit, ElectricPotentialAcUnit.MillivoltAc, q => q.ToUnit(ElectricPotentialAcUnit.MillivoltAc));
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAcUnit.MillivoltAc, ElectricPotentialAc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialAc<T>>(ElectricPotentialAc<T>.BaseUnit, ElectricPotentialAc<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.KilovoltPerHour, q => q.ToUnit(ElectricPotentialChangeRateUnit.KilovoltPerHour));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.KilovoltPerHour, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.KilovoltPerMicrosecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.KilovoltPerMicrosecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.KilovoltPerMicrosecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.KilovoltPerMinute, q => q.ToUnit(ElectricPotentialChangeRateUnit.KilovoltPerMinute));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.KilovoltPerMinute, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.KilovoltPerSecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.KilovoltPerSecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.KilovoltPerSecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MegavoltPerHour, q => q.ToUnit(ElectricPotentialChangeRateUnit.MegavoltPerHour));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MegavoltPerHour, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MegavoltPerMicrosecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.MegavoltPerMicrosecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MegavoltPerMicrosecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MegavoltPerMinute, q => q.ToUnit(ElectricPotentialChangeRateUnit.MegavoltPerMinute));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MegavoltPerMinute, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MegavoltPerSecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.MegavoltPerSecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MegavoltPerSecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MicrovoltPerHour, q => q.ToUnit(ElectricPotentialChangeRateUnit.MicrovoltPerHour));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MicrovoltPerHour, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MicrovoltPerMicrosecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.MicrovoltPerMicrosecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MicrovoltPerMicrosecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MicrovoltPerMinute, q => q.ToUnit(ElectricPotentialChangeRateUnit.MicrovoltPerMinute));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MicrovoltPerMinute, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MicrovoltPerSecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.MicrovoltPerSecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MicrovoltPerSecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MillivoltPerHour, q => q.ToUnit(ElectricPotentialChangeRateUnit.MillivoltPerHour));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MillivoltPerHour, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MillivoltPerMicrosecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.MillivoltPerMicrosecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MillivoltPerMicrosecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MillivoltPerMinute, q => q.ToUnit(ElectricPotentialChangeRateUnit.MillivoltPerMinute));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MillivoltPerMinute, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.MillivoltPerSecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.MillivoltPerSecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.MillivoltPerSecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.VoltPerHour, q => q.ToUnit(ElectricPotentialChangeRateUnit.VoltPerHour));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.VoltPerHour, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.VoltPerMicrosecond, q => q.ToUnit(ElectricPotentialChangeRateUnit.VoltPerMicrosecond));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.VoltPerMicrosecond, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRateUnit.VoltPerMinute, q => q.ToUnit(ElectricPotentialChangeRateUnit.VoltPerMinute));
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRateUnit.VoltPerMinute, ElectricPotentialChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialChangeRate<T>>(ElectricPotentialChangeRate<T>.BaseUnit, ElectricPotentialChangeRate<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDc<T>.BaseUnit, ElectricPotentialDcUnit.KilovoltDc, q => q.ToUnit(ElectricPotentialDcUnit.KilovoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDcUnit.KilovoltDc, ElectricPotentialDc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDc<T>.BaseUnit, ElectricPotentialDcUnit.MegavoltDc, q => q.ToUnit(ElectricPotentialDcUnit.MegavoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDcUnit.MegavoltDc, ElectricPotentialDc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDc<T>.BaseUnit, ElectricPotentialDcUnit.MicrovoltDc, q => q.ToUnit(ElectricPotentialDcUnit.MicrovoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDcUnit.MicrovoltDc, ElectricPotentialDc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDc<T>.BaseUnit, ElectricPotentialDcUnit.MillivoltDc, q => q.ToUnit(ElectricPotentialDcUnit.MillivoltDc));
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDcUnit.MillivoltDc, ElectricPotentialDc<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricPotentialDc<T>>(ElectricPotentialDc<T>.BaseUnit, ElectricPotentialDc<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistance<T>.BaseUnit, ElectricResistanceUnit.Gigaohm, q => q.ToUnit(ElectricResistanceUnit.Gigaohm));
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistanceUnit.Gigaohm, ElectricResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistance<T>.BaseUnit, ElectricResistanceUnit.Kiloohm, q => q.ToUnit(ElectricResistanceUnit.Kiloohm));
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistanceUnit.Kiloohm, ElectricResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistance<T>.BaseUnit, ElectricResistanceUnit.Megaohm, q => q.ToUnit(ElectricResistanceUnit.Megaohm));
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistanceUnit.Megaohm, ElectricResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistance<T>.BaseUnit, ElectricResistanceUnit.Microohm, q => q.ToUnit(ElectricResistanceUnit.Microohm));
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistanceUnit.Microohm, ElectricResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistance<T>.BaseUnit, ElectricResistanceUnit.Milliohm, q => q.ToUnit(ElectricResistanceUnit.Milliohm));
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistanceUnit.Milliohm, ElectricResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistance<T>>(ElectricResistance<T>.BaseUnit, ElectricResistance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.KiloohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.KiloohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.KiloohmCentimeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.KiloohmMeter, q => q.ToUnit(ElectricResistivityUnit.KiloohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.KiloohmMeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.MegaohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.MegaohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.MegaohmCentimeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.MegaohmMeter, q => q.ToUnit(ElectricResistivityUnit.MegaohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.MegaohmMeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.MicroohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.MicroohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.MicroohmCentimeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.MicroohmMeter, q => q.ToUnit(ElectricResistivityUnit.MicroohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.MicroohmMeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.MilliohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.MilliohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.MilliohmCentimeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.MilliohmMeter, q => q.ToUnit(ElectricResistivityUnit.MilliohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.MilliohmMeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.NanoohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.NanoohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.NanoohmCentimeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.NanoohmMeter, q => q.ToUnit(ElectricResistivityUnit.NanoohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.NanoohmMeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.OhmCentimeter, q => q.ToUnit(ElectricResistivityUnit.OhmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.OhmCentimeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.PicoohmCentimeter, q => q.ToUnit(ElectricResistivityUnit.PicoohmCentimeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.PicoohmCentimeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivity<T>.BaseUnit, ElectricResistivityUnit.PicoohmMeter, q => q.ToUnit(ElectricResistivityUnit.PicoohmMeter));
            unitConverter.SetConversionFunction<ElectricResistivity<T>>(ElectricResistivityUnit.PicoohmMeter, ElectricResistivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity<T>>(ElectricSurfaceChargeDensity<T>.BaseUnit, ElectricSurfaceChargeDensityUnit.CoulombPerSquareCentimeter, q => q.ToUnit(ElectricSurfaceChargeDensityUnit.CoulombPerSquareCentimeter));
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity<T>>(ElectricSurfaceChargeDensityUnit.CoulombPerSquareCentimeter, ElectricSurfaceChargeDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity<T>>(ElectricSurfaceChargeDensity<T>.BaseUnit, ElectricSurfaceChargeDensityUnit.CoulombPerSquareInch, q => q.ToUnit(ElectricSurfaceChargeDensityUnit.CoulombPerSquareInch));
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity<T>>(ElectricSurfaceChargeDensityUnit.CoulombPerSquareInch, ElectricSurfaceChargeDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ElectricSurfaceChargeDensity<T>>(ElectricSurfaceChargeDensity<T>.BaseUnit, ElectricSurfaceChargeDensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.BritishThermalUnit, q => q.ToUnit(EnergyUnit.BritishThermalUnit));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.BritishThermalUnit, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Calorie, q => q.ToUnit(EnergyUnit.Calorie));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Calorie, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.DecathermEc, q => q.ToUnit(EnergyUnit.DecathermEc));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.DecathermEc, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.DecathermImperial, q => q.ToUnit(EnergyUnit.DecathermImperial));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.DecathermImperial, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.DecathermUs, q => q.ToUnit(EnergyUnit.DecathermUs));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.DecathermUs, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.ElectronVolt, q => q.ToUnit(EnergyUnit.ElectronVolt));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.ElectronVolt, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Erg, q => q.ToUnit(EnergyUnit.Erg));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Erg, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.FootPound, q => q.ToUnit(EnergyUnit.FootPound));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.FootPound, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.GigabritishThermalUnit, q => q.ToUnit(EnergyUnit.GigabritishThermalUnit));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.GigabritishThermalUnit, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.GigaelectronVolt, q => q.ToUnit(EnergyUnit.GigaelectronVolt));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.GigaelectronVolt, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Gigajoule, q => q.ToUnit(EnergyUnit.Gigajoule));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Gigajoule, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.GigawattDay, q => q.ToUnit(EnergyUnit.GigawattDay));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.GigawattDay, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.GigawattHour, q => q.ToUnit(EnergyUnit.GigawattHour));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.GigawattHour, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.HorsepowerHour, q => q.ToUnit(EnergyUnit.HorsepowerHour));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.HorsepowerHour, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, Energy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.KilobritishThermalUnit, q => q.ToUnit(EnergyUnit.KilobritishThermalUnit));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.KilobritishThermalUnit, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Kilocalorie, q => q.ToUnit(EnergyUnit.Kilocalorie));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Kilocalorie, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.KiloelectronVolt, q => q.ToUnit(EnergyUnit.KiloelectronVolt));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.KiloelectronVolt, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Kilojoule, q => q.ToUnit(EnergyUnit.Kilojoule));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Kilojoule, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.KilowattDay, q => q.ToUnit(EnergyUnit.KilowattDay));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.KilowattDay, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.KilowattHour, q => q.ToUnit(EnergyUnit.KilowattHour));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.KilowattHour, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.MegabritishThermalUnit, q => q.ToUnit(EnergyUnit.MegabritishThermalUnit));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.MegabritishThermalUnit, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Megacalorie, q => q.ToUnit(EnergyUnit.Megacalorie));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Megacalorie, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.MegaelectronVolt, q => q.ToUnit(EnergyUnit.MegaelectronVolt));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.MegaelectronVolt, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Megajoule, q => q.ToUnit(EnergyUnit.Megajoule));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Megajoule, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.MegawattDay, q => q.ToUnit(EnergyUnit.MegawattDay));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.MegawattDay, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.MegawattHour, q => q.ToUnit(EnergyUnit.MegawattHour));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.MegawattHour, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.Millijoule, q => q.ToUnit(EnergyUnit.Millijoule));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.Millijoule, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.TeraelectronVolt, q => q.ToUnit(EnergyUnit.TeraelectronVolt));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.TeraelectronVolt, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.TerawattDay, q => q.ToUnit(EnergyUnit.TerawattDay));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.TerawattDay, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.TerawattHour, q => q.ToUnit(EnergyUnit.TerawattHour));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.TerawattHour, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.ThermEc, q => q.ToUnit(EnergyUnit.ThermEc));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.ThermEc, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.ThermImperial, q => q.ToUnit(EnergyUnit.ThermImperial));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.ThermImperial, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.ThermUs, q => q.ToUnit(EnergyUnit.ThermUs));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.ThermUs, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.WattDay, q => q.ToUnit(EnergyUnit.WattDay));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.WattDay, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Energy<T>>(Energy<T>.BaseUnit, EnergyUnit.WattHour, q => q.ToUnit(EnergyUnit.WattHour));
            unitConverter.SetConversionFunction<Energy<T>>(EnergyUnit.WattHour, Energy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy<T>>(Entropy<T>.BaseUnit, EntropyUnit.CaloriePerKelvin, q => q.ToUnit(EntropyUnit.CaloriePerKelvin));
            unitConverter.SetConversionFunction<Entropy<T>>(EntropyUnit.CaloriePerKelvin, Entropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy<T>>(Entropy<T>.BaseUnit, EntropyUnit.JoulePerDegreeCelsius, q => q.ToUnit(EntropyUnit.JoulePerDegreeCelsius));
            unitConverter.SetConversionFunction<Entropy<T>>(EntropyUnit.JoulePerDegreeCelsius, Entropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy<T>>(Entropy<T>.BaseUnit, Entropy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Entropy<T>>(Entropy<T>.BaseUnit, EntropyUnit.KilocaloriePerKelvin, q => q.ToUnit(EntropyUnit.KilocaloriePerKelvin));
            unitConverter.SetConversionFunction<Entropy<T>>(EntropyUnit.KilocaloriePerKelvin, Entropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy<T>>(Entropy<T>.BaseUnit, EntropyUnit.KilojoulePerDegreeCelsius, q => q.ToUnit(EntropyUnit.KilojoulePerDegreeCelsius));
            unitConverter.SetConversionFunction<Entropy<T>>(EntropyUnit.KilojoulePerDegreeCelsius, Entropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy<T>>(Entropy<T>.BaseUnit, EntropyUnit.KilojoulePerKelvin, q => q.ToUnit(EntropyUnit.KilojoulePerKelvin));
            unitConverter.SetConversionFunction<Entropy<T>>(EntropyUnit.KilojoulePerKelvin, Entropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Entropy<T>>(Entropy<T>.BaseUnit, EntropyUnit.MegajoulePerKelvin, q => q.ToUnit(EntropyUnit.MegajoulePerKelvin));
            unitConverter.SetConversionFunction<Entropy<T>>(EntropyUnit.MegajoulePerKelvin, Entropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.Decanewton, q => q.ToUnit(ForceUnit.Decanewton));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.Decanewton, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.Dyn, q => q.ToUnit(ForceUnit.Dyn));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.Dyn, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.KilogramForce, q => q.ToUnit(ForceUnit.KilogramForce));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.KilogramForce, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.Kilonewton, q => q.ToUnit(ForceUnit.Kilonewton));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.Kilonewton, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.KiloPond, q => q.ToUnit(ForceUnit.KiloPond));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.KiloPond, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.KilopoundForce, q => q.ToUnit(ForceUnit.KilopoundForce));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.KilopoundForce, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.Meganewton, q => q.ToUnit(ForceUnit.Meganewton));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.Meganewton, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.Micronewton, q => q.ToUnit(ForceUnit.Micronewton));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.Micronewton, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.Millinewton, q => q.ToUnit(ForceUnit.Millinewton));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.Millinewton, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, Force<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.OunceForce, q => q.ToUnit(ForceUnit.OunceForce));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.OunceForce, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.Poundal, q => q.ToUnit(ForceUnit.Poundal));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.Poundal, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.PoundForce, q => q.ToUnit(ForceUnit.PoundForce));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.PoundForce, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.ShortTonForce, q => q.ToUnit(ForceUnit.ShortTonForce));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.ShortTonForce, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Force<T>>(Force<T>.BaseUnit, ForceUnit.TonneForce, q => q.ToUnit(ForceUnit.TonneForce));
            unitConverter.SetConversionFunction<Force<T>>(ForceUnit.TonneForce, Force<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.CentinewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.CentinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.CentinewtonPerSecond, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.DecanewtonPerMinute, q => q.ToUnit(ForceChangeRateUnit.DecanewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.DecanewtonPerMinute, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.DecanewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.DecanewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.DecanewtonPerSecond, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.DecinewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.DecinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.DecinewtonPerSecond, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.KilonewtonPerMinute, q => q.ToUnit(ForceChangeRateUnit.KilonewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.KilonewtonPerMinute, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.KilonewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.KilonewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.KilonewtonPerSecond, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.MicronewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.MicronewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.MicronewtonPerSecond, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.MillinewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.MillinewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.MillinewtonPerSecond, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.NanonewtonPerSecond, q => q.ToUnit(ForceChangeRateUnit.NanonewtonPerSecond));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.NanonewtonPerSecond, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRateUnit.NewtonPerMinute, q => q.ToUnit(ForceChangeRateUnit.NewtonPerMinute));
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRateUnit.NewtonPerMinute, ForceChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForceChangeRate<T>>(ForceChangeRate<T>.BaseUnit, ForceChangeRate<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.CentinewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.CentinewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.CentinewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.CentinewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.CentinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.CentinewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.CentinewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.CentinewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.CentinewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.DecanewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.DecanewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.DecanewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.DecanewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.DecanewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.DecanewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.DecanewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.DecanewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.DecanewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.DecinewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.DecinewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.DecinewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.DecinewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.DecinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.DecinewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.DecinewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.DecinewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.DecinewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilogramForcePerCentimeter, q => q.ToUnit(ForcePerLengthUnit.KilogramForcePerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilogramForcePerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilogramForcePerMeter, q => q.ToUnit(ForcePerLengthUnit.KilogramForcePerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilogramForcePerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilogramForcePerMillimeter, q => q.ToUnit(ForcePerLengthUnit.KilogramForcePerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilogramForcePerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilonewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.KilonewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilonewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilonewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.KilonewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilonewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilonewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.KilonewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilonewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilopoundForcePerFoot, q => q.ToUnit(ForcePerLengthUnit.KilopoundForcePerFoot));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilopoundForcePerFoot, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.KilopoundForcePerInch, q => q.ToUnit(ForcePerLengthUnit.KilopoundForcePerInch));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.KilopoundForcePerInch, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MeganewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.MeganewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MeganewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MeganewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.MeganewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MeganewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MeganewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.MeganewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MeganewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MicronewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.MicronewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MicronewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MicronewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.MicronewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MicronewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MicronewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.MicronewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MicronewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MillinewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.MillinewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MillinewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MillinewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.MillinewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MillinewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.MillinewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.MillinewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.MillinewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.NanonewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.NanonewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.NanonewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.NanonewtonPerMeter, q => q.ToUnit(ForcePerLengthUnit.NanonewtonPerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.NanonewtonPerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.NanonewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.NanonewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.NanonewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.NewtonPerCentimeter, q => q.ToUnit(ForcePerLengthUnit.NewtonPerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.NewtonPerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLength<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.NewtonPerMillimeter, q => q.ToUnit(ForcePerLengthUnit.NewtonPerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.NewtonPerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.PoundForcePerFoot, q => q.ToUnit(ForcePerLengthUnit.PoundForcePerFoot));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.PoundForcePerFoot, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.PoundForcePerInch, q => q.ToUnit(ForcePerLengthUnit.PoundForcePerInch));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.PoundForcePerInch, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.PoundForcePerYard, q => q.ToUnit(ForcePerLengthUnit.PoundForcePerYard));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.PoundForcePerYard, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.TonneForcePerCentimeter, q => q.ToUnit(ForcePerLengthUnit.TonneForcePerCentimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.TonneForcePerCentimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.TonneForcePerMeter, q => q.ToUnit(ForcePerLengthUnit.TonneForcePerMeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.TonneForcePerMeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLength<T>.BaseUnit, ForcePerLengthUnit.TonneForcePerMillimeter, q => q.ToUnit(ForcePerLengthUnit.TonneForcePerMillimeter));
            unitConverter.SetConversionFunction<ForcePerLength<T>>(ForcePerLengthUnit.TonneForcePerMillimeter, ForcePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.BeatPerMinute, q => q.ToUnit(FrequencyUnit.BeatPerMinute));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.BeatPerMinute, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.CyclePerHour, q => q.ToUnit(FrequencyUnit.CyclePerHour));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.CyclePerHour, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.CyclePerMinute, q => q.ToUnit(FrequencyUnit.CyclePerMinute));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.CyclePerMinute, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.Gigahertz, q => q.ToUnit(FrequencyUnit.Gigahertz));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.Gigahertz, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, Frequency<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.Kilohertz, q => q.ToUnit(FrequencyUnit.Kilohertz));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.Kilohertz, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.Megahertz, q => q.ToUnit(FrequencyUnit.Megahertz));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.Megahertz, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.PerSecond, q => q.ToUnit(FrequencyUnit.PerSecond));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.PerSecond, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.RadianPerSecond, q => q.ToUnit(FrequencyUnit.RadianPerSecond));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.RadianPerSecond, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Frequency<T>>(Frequency<T>.BaseUnit, FrequencyUnit.Terahertz, q => q.ToUnit(FrequencyUnit.Terahertz));
            unitConverter.SetConversionFunction<Frequency<T>>(FrequencyUnit.Terahertz, Frequency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<FuelEfficiency<T>>(FuelEfficiency<T>.BaseUnit, FuelEfficiencyUnit.KilometerPerLiter, q => q.ToUnit(FuelEfficiencyUnit.KilometerPerLiter));
            unitConverter.SetConversionFunction<FuelEfficiency<T>>(FuelEfficiencyUnit.KilometerPerLiter, FuelEfficiency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<FuelEfficiency<T>>(FuelEfficiency<T>.BaseUnit, FuelEfficiency<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<FuelEfficiency<T>>(FuelEfficiency<T>.BaseUnit, FuelEfficiencyUnit.MilePerUkGallon, q => q.ToUnit(FuelEfficiencyUnit.MilePerUkGallon));
            unitConverter.SetConversionFunction<FuelEfficiency<T>>(FuelEfficiencyUnit.MilePerUkGallon, FuelEfficiency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<FuelEfficiency<T>>(FuelEfficiency<T>.BaseUnit, FuelEfficiencyUnit.MilePerUsGallon, q => q.ToUnit(FuelEfficiencyUnit.MilePerUsGallon));
            unitConverter.SetConversionFunction<FuelEfficiency<T>>(FuelEfficiencyUnit.MilePerUsGallon, FuelEfficiency<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.BtuPerHourSquareFoot, q => q.ToUnit(HeatFluxUnit.BtuPerHourSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.BtuPerHourSquareFoot, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.BtuPerMinuteSquareFoot, q => q.ToUnit(HeatFluxUnit.BtuPerMinuteSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.BtuPerMinuteSquareFoot, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.BtuPerSecondSquareFoot, q => q.ToUnit(HeatFluxUnit.BtuPerSecondSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.BtuPerSecondSquareFoot, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.BtuPerSecondSquareInch, q => q.ToUnit(HeatFluxUnit.BtuPerSecondSquareInch));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.BtuPerSecondSquareInch, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.CaloriePerSecondSquareCentimeter, q => q.ToUnit(HeatFluxUnit.CaloriePerSecondSquareCentimeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.CaloriePerSecondSquareCentimeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.CentiwattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.CentiwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.CentiwattPerSquareMeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.DeciwattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.DeciwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.DeciwattPerSquareMeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.KilocaloriePerHourSquareMeter, q => q.ToUnit(HeatFluxUnit.KilocaloriePerHourSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.KilocaloriePerHourSquareMeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.KilocaloriePerSecondSquareCentimeter, q => q.ToUnit(HeatFluxUnit.KilocaloriePerSecondSquareCentimeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.KilocaloriePerSecondSquareCentimeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.KilowattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.KilowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.KilowattPerSquareMeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.MicrowattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.MicrowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.MicrowattPerSquareMeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.MilliwattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.MilliwattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.MilliwattPerSquareMeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.NanowattPerSquareMeter, q => q.ToUnit(HeatFluxUnit.NanowattPerSquareMeter));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.NanowattPerSquareMeter, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.PoundForcePerFootSecond, q => q.ToUnit(HeatFluxUnit.PoundForcePerFootSecond));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.PoundForcePerFootSecond, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.PoundPerSecondCubed, q => q.ToUnit(HeatFluxUnit.PoundPerSecondCubed));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.PoundPerSecondCubed, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.WattPerSquareFoot, q => q.ToUnit(HeatFluxUnit.WattPerSquareFoot));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.WattPerSquareFoot, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFluxUnit.WattPerSquareInch, q => q.ToUnit(HeatFluxUnit.WattPerSquareInch));
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFluxUnit.WattPerSquareInch, HeatFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatFlux<T>>(HeatFlux<T>.BaseUnit, HeatFlux<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<HeatTransferCoefficient<T>>(HeatTransferCoefficient<T>.BaseUnit, HeatTransferCoefficientUnit.BtuPerSquareFootDegreeFahrenheit, q => q.ToUnit(HeatTransferCoefficientUnit.BtuPerSquareFootDegreeFahrenheit));
            unitConverter.SetConversionFunction<HeatTransferCoefficient<T>>(HeatTransferCoefficientUnit.BtuPerSquareFootDegreeFahrenheit, HeatTransferCoefficient<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatTransferCoefficient<T>>(HeatTransferCoefficient<T>.BaseUnit, HeatTransferCoefficientUnit.WattPerSquareMeterCelsius, q => q.ToUnit(HeatTransferCoefficientUnit.WattPerSquareMeterCelsius));
            unitConverter.SetConversionFunction<HeatTransferCoefficient<T>>(HeatTransferCoefficientUnit.WattPerSquareMeterCelsius, HeatTransferCoefficient<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<HeatTransferCoefficient<T>>(HeatTransferCoefficient<T>.BaseUnit, HeatTransferCoefficient<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Illuminance<T>>(Illuminance<T>.BaseUnit, IlluminanceUnit.Kilolux, q => q.ToUnit(IlluminanceUnit.Kilolux));
            unitConverter.SetConversionFunction<Illuminance<T>>(IlluminanceUnit.Kilolux, Illuminance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Illuminance<T>>(Illuminance<T>.BaseUnit, Illuminance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Illuminance<T>>(Illuminance<T>.BaseUnit, IlluminanceUnit.Megalux, q => q.ToUnit(IlluminanceUnit.Megalux));
            unitConverter.SetConversionFunction<Illuminance<T>>(IlluminanceUnit.Megalux, Illuminance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Illuminance<T>>(Illuminance<T>.BaseUnit, IlluminanceUnit.Millilux, q => q.ToUnit(IlluminanceUnit.Millilux));
            unitConverter.SetConversionFunction<Illuminance<T>>(IlluminanceUnit.Millilux, Illuminance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, Information<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Byte, q => q.ToUnit(InformationUnit.Byte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Byte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Exabit, q => q.ToUnit(InformationUnit.Exabit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Exabit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Exabyte, q => q.ToUnit(InformationUnit.Exabyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Exabyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Exbibit, q => q.ToUnit(InformationUnit.Exbibit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Exbibit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Exbibyte, q => q.ToUnit(InformationUnit.Exbibyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Exbibyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Gibibit, q => q.ToUnit(InformationUnit.Gibibit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Gibibit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Gibibyte, q => q.ToUnit(InformationUnit.Gibibyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Gibibyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Gigabit, q => q.ToUnit(InformationUnit.Gigabit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Gigabit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Gigabyte, q => q.ToUnit(InformationUnit.Gigabyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Gigabyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Kibibit, q => q.ToUnit(InformationUnit.Kibibit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Kibibit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Kibibyte, q => q.ToUnit(InformationUnit.Kibibyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Kibibyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Kilobit, q => q.ToUnit(InformationUnit.Kilobit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Kilobit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Kilobyte, q => q.ToUnit(InformationUnit.Kilobyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Kilobyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Mebibit, q => q.ToUnit(InformationUnit.Mebibit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Mebibit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Mebibyte, q => q.ToUnit(InformationUnit.Mebibyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Mebibyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Megabit, q => q.ToUnit(InformationUnit.Megabit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Megabit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Megabyte, q => q.ToUnit(InformationUnit.Megabyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Megabyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Pebibit, q => q.ToUnit(InformationUnit.Pebibit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Pebibit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Pebibyte, q => q.ToUnit(InformationUnit.Pebibyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Pebibyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Petabit, q => q.ToUnit(InformationUnit.Petabit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Petabit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Petabyte, q => q.ToUnit(InformationUnit.Petabyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Petabyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Tebibit, q => q.ToUnit(InformationUnit.Tebibit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Tebibit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Tebibyte, q => q.ToUnit(InformationUnit.Tebibyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Tebibyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Terabit, q => q.ToUnit(InformationUnit.Terabit));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Terabit, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Information<T>>(Information<T>.BaseUnit, InformationUnit.Terabyte, q => q.ToUnit(InformationUnit.Terabyte));
            unitConverter.SetConversionFunction<Information<T>>(InformationUnit.Terabyte, Information<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.KilowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.KilowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.KilowattPerSquareCentimeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.KilowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.KilowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.KilowattPerSquareMeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.MegawattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.MegawattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.MegawattPerSquareCentimeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.MegawattPerSquareMeter, q => q.ToUnit(IrradianceUnit.MegawattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.MegawattPerSquareMeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.MicrowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.MicrowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.MicrowattPerSquareCentimeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.MicrowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.MicrowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.MicrowattPerSquareMeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.MilliwattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.MilliwattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.MilliwattPerSquareCentimeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.MilliwattPerSquareMeter, q => q.ToUnit(IrradianceUnit.MilliwattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.MilliwattPerSquareMeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.NanowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.NanowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.NanowattPerSquareCentimeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.NanowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.NanowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.NanowattPerSquareMeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.PicowattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.PicowattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.PicowattPerSquareCentimeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.PicowattPerSquareMeter, q => q.ToUnit(IrradianceUnit.PicowattPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.PicowattPerSquareMeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, IrradianceUnit.WattPerSquareCentimeter, q => q.ToUnit(IrradianceUnit.WattPerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiance<T>>(IrradianceUnit.WattPerSquareCentimeter, Irradiance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiance<T>>(Irradiance<T>.BaseUnit, Irradiance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Irradiation<T>>(Irradiation<T>.BaseUnit, IrradiationUnit.JoulePerSquareCentimeter, q => q.ToUnit(IrradiationUnit.JoulePerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiation<T>>(IrradiationUnit.JoulePerSquareCentimeter, Irradiation<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation<T>>(Irradiation<T>.BaseUnit, Irradiation<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Irradiation<T>>(Irradiation<T>.BaseUnit, IrradiationUnit.JoulePerSquareMillimeter, q => q.ToUnit(IrradiationUnit.JoulePerSquareMillimeter));
            unitConverter.SetConversionFunction<Irradiation<T>>(IrradiationUnit.JoulePerSquareMillimeter, Irradiation<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation<T>>(Irradiation<T>.BaseUnit, IrradiationUnit.KilojoulePerSquareMeter, q => q.ToUnit(IrradiationUnit.KilojoulePerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation<T>>(IrradiationUnit.KilojoulePerSquareMeter, Irradiation<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation<T>>(Irradiation<T>.BaseUnit, IrradiationUnit.KilowattHourPerSquareMeter, q => q.ToUnit(IrradiationUnit.KilowattHourPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation<T>>(IrradiationUnit.KilowattHourPerSquareMeter, Irradiation<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation<T>>(Irradiation<T>.BaseUnit, IrradiationUnit.MillijoulePerSquareCentimeter, q => q.ToUnit(IrradiationUnit.MillijoulePerSquareCentimeter));
            unitConverter.SetConversionFunction<Irradiation<T>>(IrradiationUnit.MillijoulePerSquareCentimeter, Irradiation<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Irradiation<T>>(Irradiation<T>.BaseUnit, IrradiationUnit.WattHourPerSquareMeter, q => q.ToUnit(IrradiationUnit.WattHourPerSquareMeter));
            unitConverter.SetConversionFunction<Irradiation<T>>(IrradiationUnit.WattHourPerSquareMeter, Irradiation<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosityUnit.Centistokes, q => q.ToUnit(KinematicViscosityUnit.Centistokes));
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosityUnit.Centistokes, KinematicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosityUnit.Decistokes, q => q.ToUnit(KinematicViscosityUnit.Decistokes));
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosityUnit.Decistokes, KinematicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosityUnit.Kilostokes, q => q.ToUnit(KinematicViscosityUnit.Kilostokes));
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosityUnit.Kilostokes, KinematicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosityUnit.Microstokes, q => q.ToUnit(KinematicViscosityUnit.Microstokes));
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosityUnit.Microstokes, KinematicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosityUnit.Millistokes, q => q.ToUnit(KinematicViscosityUnit.Millistokes));
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosityUnit.Millistokes, KinematicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosityUnit.Nanostokes, q => q.ToUnit(KinematicViscosityUnit.Nanostokes));
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosityUnit.Nanostokes, KinematicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosity<T>.BaseUnit, KinematicViscosityUnit.Stokes, q => q.ToUnit(KinematicViscosityUnit.Stokes));
            unitConverter.SetConversionFunction<KinematicViscosity<T>>(KinematicViscosityUnit.Stokes, KinematicViscosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LapseRate<T>>(LapseRate<T>.BaseUnit, LapseRate<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.AstronomicalUnit, q => q.ToUnit(LengthUnit.AstronomicalUnit));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.AstronomicalUnit, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Centimeter, q => q.ToUnit(LengthUnit.Centimeter));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Centimeter, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Chain, q => q.ToUnit(LengthUnit.Chain));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Chain, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Decimeter, q => q.ToUnit(LengthUnit.Decimeter));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Decimeter, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.DtpPica, q => q.ToUnit(LengthUnit.DtpPica));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.DtpPica, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.DtpPoint, q => q.ToUnit(LengthUnit.DtpPoint));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.DtpPoint, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Fathom, q => q.ToUnit(LengthUnit.Fathom));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Fathom, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Foot, q => q.ToUnit(LengthUnit.Foot));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Foot, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Hand, q => q.ToUnit(LengthUnit.Hand));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Hand, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Hectometer, q => q.ToUnit(LengthUnit.Hectometer));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Hectometer, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Inch, q => q.ToUnit(LengthUnit.Inch));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Inch, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.KilolightYear, q => q.ToUnit(LengthUnit.KilolightYear));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.KilolightYear, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Kilometer, q => q.ToUnit(LengthUnit.Kilometer));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Kilometer, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Kiloparsec, q => q.ToUnit(LengthUnit.Kiloparsec));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Kiloparsec, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.LightYear, q => q.ToUnit(LengthUnit.LightYear));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.LightYear, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.MegalightYear, q => q.ToUnit(LengthUnit.MegalightYear));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.MegalightYear, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Megaparsec, q => q.ToUnit(LengthUnit.Megaparsec));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Megaparsec, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, Length<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Microinch, q => q.ToUnit(LengthUnit.Microinch));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Microinch, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Micrometer, q => q.ToUnit(LengthUnit.Micrometer));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Micrometer, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Mil, q => q.ToUnit(LengthUnit.Mil));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Mil, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Mile, q => q.ToUnit(LengthUnit.Mile));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Mile, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Millimeter, q => q.ToUnit(LengthUnit.Millimeter));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Millimeter, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Nanometer, q => q.ToUnit(LengthUnit.Nanometer));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Nanometer, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.NauticalMile, q => q.ToUnit(LengthUnit.NauticalMile));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.NauticalMile, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Parsec, q => q.ToUnit(LengthUnit.Parsec));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Parsec, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.PrinterPica, q => q.ToUnit(LengthUnit.PrinterPica));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.PrinterPica, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.PrinterPoint, q => q.ToUnit(LengthUnit.PrinterPoint));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.PrinterPoint, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Shackle, q => q.ToUnit(LengthUnit.Shackle));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Shackle, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.SolarRadius, q => q.ToUnit(LengthUnit.SolarRadius));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.SolarRadius, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Twip, q => q.ToUnit(LengthUnit.Twip));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Twip, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.UsSurveyFoot, q => q.ToUnit(LengthUnit.UsSurveyFoot));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.UsSurveyFoot, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Length<T>>(Length<T>.BaseUnit, LengthUnit.Yard, q => q.ToUnit(LengthUnit.Yard));
            unitConverter.SetConversionFunction<Length<T>>(LengthUnit.Yard, Length<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Level<T>>(Level<T>.BaseUnit, Level<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Level<T>>(Level<T>.BaseUnit, LevelUnit.Neper, q => q.ToUnit(LevelUnit.Neper));
            unitConverter.SetConversionFunction<Level<T>>(LevelUnit.Neper, Level<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.GramPerCentimeter, q => q.ToUnit(LinearDensityUnit.GramPerCentimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.GramPerCentimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.GramPerMeter, q => q.ToUnit(LinearDensityUnit.GramPerMeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.GramPerMeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.GramPerMillimeter, q => q.ToUnit(LinearDensityUnit.GramPerMillimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.GramPerMillimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.KilogramPerCentimeter, q => q.ToUnit(LinearDensityUnit.KilogramPerCentimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.KilogramPerCentimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.KilogramPerMillimeter, q => q.ToUnit(LinearDensityUnit.KilogramPerMillimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.KilogramPerMillimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.MicrogramPerCentimeter, q => q.ToUnit(LinearDensityUnit.MicrogramPerCentimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.MicrogramPerCentimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.MicrogramPerMeter, q => q.ToUnit(LinearDensityUnit.MicrogramPerMeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.MicrogramPerMeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.MicrogramPerMillimeter, q => q.ToUnit(LinearDensityUnit.MicrogramPerMillimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.MicrogramPerMillimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.MilligramPerCentimeter, q => q.ToUnit(LinearDensityUnit.MilligramPerCentimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.MilligramPerCentimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.MilligramPerMeter, q => q.ToUnit(LinearDensityUnit.MilligramPerMeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.MilligramPerMeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.MilligramPerMillimeter, q => q.ToUnit(LinearDensityUnit.MilligramPerMillimeter));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.MilligramPerMillimeter, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.PoundPerFoot, q => q.ToUnit(LinearDensityUnit.PoundPerFoot));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.PoundPerFoot, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensity<T>.BaseUnit, LinearDensityUnit.PoundPerInch, q => q.ToUnit(LinearDensityUnit.PoundPerInch));
            unitConverter.SetConversionFunction<LinearDensity<T>>(LinearDensityUnit.PoundPerInch, LinearDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.GigawattPerCentimeter, q => q.ToUnit(LinearPowerDensityUnit.GigawattPerCentimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.GigawattPerCentimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.GigawattPerFoot, q => q.ToUnit(LinearPowerDensityUnit.GigawattPerFoot));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.GigawattPerFoot, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.GigawattPerInch, q => q.ToUnit(LinearPowerDensityUnit.GigawattPerInch));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.GigawattPerInch, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.GigawattPerMeter, q => q.ToUnit(LinearPowerDensityUnit.GigawattPerMeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.GigawattPerMeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.GigawattPerMillimeter, q => q.ToUnit(LinearPowerDensityUnit.GigawattPerMillimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.GigawattPerMillimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.KilowattPerCentimeter, q => q.ToUnit(LinearPowerDensityUnit.KilowattPerCentimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.KilowattPerCentimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.KilowattPerFoot, q => q.ToUnit(LinearPowerDensityUnit.KilowattPerFoot));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.KilowattPerFoot, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.KilowattPerInch, q => q.ToUnit(LinearPowerDensityUnit.KilowattPerInch));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.KilowattPerInch, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.KilowattPerMeter, q => q.ToUnit(LinearPowerDensityUnit.KilowattPerMeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.KilowattPerMeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.KilowattPerMillimeter, q => q.ToUnit(LinearPowerDensityUnit.KilowattPerMillimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.KilowattPerMillimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MegawattPerCentimeter, q => q.ToUnit(LinearPowerDensityUnit.MegawattPerCentimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MegawattPerCentimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MegawattPerFoot, q => q.ToUnit(LinearPowerDensityUnit.MegawattPerFoot));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MegawattPerFoot, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MegawattPerInch, q => q.ToUnit(LinearPowerDensityUnit.MegawattPerInch));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MegawattPerInch, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MegawattPerMeter, q => q.ToUnit(LinearPowerDensityUnit.MegawattPerMeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MegawattPerMeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MegawattPerMillimeter, q => q.ToUnit(LinearPowerDensityUnit.MegawattPerMillimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MegawattPerMillimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MilliwattPerCentimeter, q => q.ToUnit(LinearPowerDensityUnit.MilliwattPerCentimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MilliwattPerCentimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MilliwattPerFoot, q => q.ToUnit(LinearPowerDensityUnit.MilliwattPerFoot));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MilliwattPerFoot, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MilliwattPerInch, q => q.ToUnit(LinearPowerDensityUnit.MilliwattPerInch));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MilliwattPerInch, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MilliwattPerMeter, q => q.ToUnit(LinearPowerDensityUnit.MilliwattPerMeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MilliwattPerMeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.MilliwattPerMillimeter, q => q.ToUnit(LinearPowerDensityUnit.MilliwattPerMillimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.MilliwattPerMillimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.WattPerCentimeter, q => q.ToUnit(LinearPowerDensityUnit.WattPerCentimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.WattPerCentimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.WattPerFoot, q => q.ToUnit(LinearPowerDensityUnit.WattPerFoot));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.WattPerFoot, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.WattPerInch, q => q.ToUnit(LinearPowerDensityUnit.WattPerInch));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.WattPerInch, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensity<T>.BaseUnit, LinearPowerDensityUnit.WattPerMillimeter, q => q.ToUnit(LinearPowerDensityUnit.WattPerMillimeter));
            unitConverter.SetConversionFunction<LinearPowerDensity<T>>(LinearPowerDensityUnit.WattPerMillimeter, LinearPowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Decawatt, q => q.ToUnit(LuminosityUnit.Decawatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Decawatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Deciwatt, q => q.ToUnit(LuminosityUnit.Deciwatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Deciwatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Femtowatt, q => q.ToUnit(LuminosityUnit.Femtowatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Femtowatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Gigawatt, q => q.ToUnit(LuminosityUnit.Gigawatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Gigawatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Kilowatt, q => q.ToUnit(LuminosityUnit.Kilowatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Kilowatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Megawatt, q => q.ToUnit(LuminosityUnit.Megawatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Megawatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Microwatt, q => q.ToUnit(LuminosityUnit.Microwatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Microwatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Milliwatt, q => q.ToUnit(LuminosityUnit.Milliwatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Milliwatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Nanowatt, q => q.ToUnit(LuminosityUnit.Nanowatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Nanowatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Petawatt, q => q.ToUnit(LuminosityUnit.Petawatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Petawatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Picowatt, q => q.ToUnit(LuminosityUnit.Picowatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Picowatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.SolarLuminosity, q => q.ToUnit(LuminosityUnit.SolarLuminosity));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.SolarLuminosity, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, LuminosityUnit.Terawatt, q => q.ToUnit(LuminosityUnit.Terawatt));
            unitConverter.SetConversionFunction<Luminosity<T>>(LuminosityUnit.Terawatt, Luminosity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Luminosity<T>>(Luminosity<T>.BaseUnit, Luminosity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<LuminousFlux<T>>(LuminousFlux<T>.BaseUnit, LuminousFlux<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<LuminousIntensity<T>>(LuminousIntensity<T>.BaseUnit, LuminousIntensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticField<T>.BaseUnit, MagneticFieldUnit.Gauss, q => q.ToUnit(MagneticFieldUnit.Gauss));
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticFieldUnit.Gauss, MagneticField<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticField<T>.BaseUnit, MagneticFieldUnit.Microtesla, q => q.ToUnit(MagneticFieldUnit.Microtesla));
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticFieldUnit.Microtesla, MagneticField<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticField<T>.BaseUnit, MagneticFieldUnit.Millitesla, q => q.ToUnit(MagneticFieldUnit.Millitesla));
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticFieldUnit.Millitesla, MagneticField<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticField<T>.BaseUnit, MagneticFieldUnit.Nanotesla, q => q.ToUnit(MagneticFieldUnit.Nanotesla));
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticFieldUnit.Nanotesla, MagneticField<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MagneticField<T>>(MagneticField<T>.BaseUnit, MagneticField<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MagneticFlux<T>>(MagneticFlux<T>.BaseUnit, MagneticFlux<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Magnetization<T>>(Magnetization<T>.BaseUnit, Magnetization<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Centigram, q => q.ToUnit(MassUnit.Centigram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Centigram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Decagram, q => q.ToUnit(MassUnit.Decagram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Decagram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Decigram, q => q.ToUnit(MassUnit.Decigram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Decigram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.EarthMass, q => q.ToUnit(MassUnit.EarthMass));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.EarthMass, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Grain, q => q.ToUnit(MassUnit.Grain));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Grain, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Gram, q => q.ToUnit(MassUnit.Gram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Gram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Hectogram, q => q.ToUnit(MassUnit.Hectogram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Hectogram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, Mass<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Kilopound, q => q.ToUnit(MassUnit.Kilopound));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Kilopound, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Kilotonne, q => q.ToUnit(MassUnit.Kilotonne));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Kilotonne, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.LongHundredweight, q => q.ToUnit(MassUnit.LongHundredweight));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.LongHundredweight, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.LongTon, q => q.ToUnit(MassUnit.LongTon));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.LongTon, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Megapound, q => q.ToUnit(MassUnit.Megapound));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Megapound, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Megatonne, q => q.ToUnit(MassUnit.Megatonne));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Megatonne, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Microgram, q => q.ToUnit(MassUnit.Microgram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Microgram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Milligram, q => q.ToUnit(MassUnit.Milligram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Milligram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Nanogram, q => q.ToUnit(MassUnit.Nanogram));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Nanogram, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Ounce, q => q.ToUnit(MassUnit.Ounce));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Ounce, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Pound, q => q.ToUnit(MassUnit.Pound));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Pound, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.ShortHundredweight, q => q.ToUnit(MassUnit.ShortHundredweight));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.ShortHundredweight, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.ShortTon, q => q.ToUnit(MassUnit.ShortTon));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.ShortTon, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Slug, q => q.ToUnit(MassUnit.Slug));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Slug, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.SolarMass, q => q.ToUnit(MassUnit.SolarMass));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.SolarMass, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Stone, q => q.ToUnit(MassUnit.Stone));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Stone, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Mass<T>>(Mass<T>.BaseUnit, MassUnit.Tonne, q => q.ToUnit(MassUnit.Tonne));
            unitConverter.SetConversionFunction<Mass<T>>(MassUnit.Tonne, Mass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.CentigramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.CentigramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.CentigramPerDeciliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.CentigramPerLiter, q => q.ToUnit(MassConcentrationUnit.CentigramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.CentigramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.CentigramPerMicroliter, q => q.ToUnit(MassConcentrationUnit.CentigramPerMicroliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.CentigramPerMicroliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.CentigramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.CentigramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.CentigramPerMilliliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.DecigramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.DecigramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.DecigramPerDeciliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.DecigramPerLiter, q => q.ToUnit(MassConcentrationUnit.DecigramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.DecigramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.DecigramPerMicroliter, q => q.ToUnit(MassConcentrationUnit.DecigramPerMicroliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.DecigramPerMicroliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.DecigramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.DecigramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.DecigramPerMilliliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.GramPerCubicCentimeter, q => q.ToUnit(MassConcentrationUnit.GramPerCubicCentimeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.GramPerCubicCentimeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.GramPerCubicMeter, q => q.ToUnit(MassConcentrationUnit.GramPerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.GramPerCubicMeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.GramPerCubicMillimeter, q => q.ToUnit(MassConcentrationUnit.GramPerCubicMillimeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.GramPerCubicMillimeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.GramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.GramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.GramPerDeciliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.GramPerLiter, q => q.ToUnit(MassConcentrationUnit.GramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.GramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.GramPerMicroliter, q => q.ToUnit(MassConcentrationUnit.GramPerMicroliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.GramPerMicroliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.GramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.GramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.GramPerMilliliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.KilogramPerCubicCentimeter, q => q.ToUnit(MassConcentrationUnit.KilogramPerCubicCentimeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.KilogramPerCubicCentimeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentration<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.KilogramPerCubicMillimeter, q => q.ToUnit(MassConcentrationUnit.KilogramPerCubicMillimeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.KilogramPerCubicMillimeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.KilogramPerLiter, q => q.ToUnit(MassConcentrationUnit.KilogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.KilogramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.KilopoundPerCubicFoot, q => q.ToUnit(MassConcentrationUnit.KilopoundPerCubicFoot));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.KilopoundPerCubicFoot, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.KilopoundPerCubicInch, q => q.ToUnit(MassConcentrationUnit.KilopoundPerCubicInch));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.KilopoundPerCubicInch, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MicrogramPerCubicMeter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MicrogramPerCubicMeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MicrogramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MicrogramPerDeciliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MicrogramPerLiter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MicrogramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MicrogramPerMicroliter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerMicroliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MicrogramPerMicroliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MicrogramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.MicrogramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MicrogramPerMilliliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MilligramPerCubicMeter, q => q.ToUnit(MassConcentrationUnit.MilligramPerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MilligramPerCubicMeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MilligramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.MilligramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MilligramPerDeciliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MilligramPerLiter, q => q.ToUnit(MassConcentrationUnit.MilligramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MilligramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MilligramPerMicroliter, q => q.ToUnit(MassConcentrationUnit.MilligramPerMicroliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MilligramPerMicroliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.MilligramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.MilligramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.MilligramPerMilliliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.NanogramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.NanogramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.NanogramPerDeciliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.NanogramPerLiter, q => q.ToUnit(MassConcentrationUnit.NanogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.NanogramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.NanogramPerMicroliter, q => q.ToUnit(MassConcentrationUnit.NanogramPerMicroliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.NanogramPerMicroliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.NanogramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.NanogramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.NanogramPerMilliliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PicogramPerDeciliter, q => q.ToUnit(MassConcentrationUnit.PicogramPerDeciliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PicogramPerDeciliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PicogramPerLiter, q => q.ToUnit(MassConcentrationUnit.PicogramPerLiter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PicogramPerLiter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PicogramPerMicroliter, q => q.ToUnit(MassConcentrationUnit.PicogramPerMicroliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PicogramPerMicroliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PicogramPerMilliliter, q => q.ToUnit(MassConcentrationUnit.PicogramPerMilliliter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PicogramPerMilliliter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PoundPerCubicFoot, q => q.ToUnit(MassConcentrationUnit.PoundPerCubicFoot));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PoundPerCubicFoot, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PoundPerCubicInch, q => q.ToUnit(MassConcentrationUnit.PoundPerCubicInch));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PoundPerCubicInch, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PoundPerImperialGallon, q => q.ToUnit(MassConcentrationUnit.PoundPerImperialGallon));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PoundPerImperialGallon, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.PoundPerUSGallon, q => q.ToUnit(MassConcentrationUnit.PoundPerUSGallon));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.PoundPerUSGallon, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.SlugPerCubicFoot, q => q.ToUnit(MassConcentrationUnit.SlugPerCubicFoot));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.SlugPerCubicFoot, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.TonnePerCubicCentimeter, q => q.ToUnit(MassConcentrationUnit.TonnePerCubicCentimeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.TonnePerCubicCentimeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.TonnePerCubicMeter, q => q.ToUnit(MassConcentrationUnit.TonnePerCubicMeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.TonnePerCubicMeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentration<T>.BaseUnit, MassConcentrationUnit.TonnePerCubicMillimeter, q => q.ToUnit(MassConcentrationUnit.TonnePerCubicMillimeter));
            unitConverter.SetConversionFunction<MassConcentration<T>>(MassConcentrationUnit.TonnePerCubicMillimeter, MassConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.CentigramPerDay, q => q.ToUnit(MassFlowUnit.CentigramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.CentigramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.CentigramPerSecond, q => q.ToUnit(MassFlowUnit.CentigramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.CentigramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.DecagramPerDay, q => q.ToUnit(MassFlowUnit.DecagramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.DecagramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.DecagramPerSecond, q => q.ToUnit(MassFlowUnit.DecagramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.DecagramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.DecigramPerDay, q => q.ToUnit(MassFlowUnit.DecigramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.DecigramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.DecigramPerSecond, q => q.ToUnit(MassFlowUnit.DecigramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.DecigramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.GramPerDay, q => q.ToUnit(MassFlowUnit.GramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.GramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.GramPerHour, q => q.ToUnit(MassFlowUnit.GramPerHour));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.GramPerHour, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlow<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.HectogramPerDay, q => q.ToUnit(MassFlowUnit.HectogramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.HectogramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.HectogramPerSecond, q => q.ToUnit(MassFlowUnit.HectogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.HectogramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.KilogramPerDay, q => q.ToUnit(MassFlowUnit.KilogramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.KilogramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.KilogramPerHour, q => q.ToUnit(MassFlowUnit.KilogramPerHour));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.KilogramPerHour, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.KilogramPerMinute, q => q.ToUnit(MassFlowUnit.KilogramPerMinute));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.KilogramPerMinute, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.KilogramPerSecond, q => q.ToUnit(MassFlowUnit.KilogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.KilogramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MegagramPerDay, q => q.ToUnit(MassFlowUnit.MegagramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MegagramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MegapoundPerDay, q => q.ToUnit(MassFlowUnit.MegapoundPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MegapoundPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MegapoundPerHour, q => q.ToUnit(MassFlowUnit.MegapoundPerHour));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MegapoundPerHour, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MegapoundPerMinute, q => q.ToUnit(MassFlowUnit.MegapoundPerMinute));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MegapoundPerMinute, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MegapoundPerSecond, q => q.ToUnit(MassFlowUnit.MegapoundPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MegapoundPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MicrogramPerDay, q => q.ToUnit(MassFlowUnit.MicrogramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MicrogramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MicrogramPerSecond, q => q.ToUnit(MassFlowUnit.MicrogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MicrogramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MilligramPerDay, q => q.ToUnit(MassFlowUnit.MilligramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MilligramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.MilligramPerSecond, q => q.ToUnit(MassFlowUnit.MilligramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.MilligramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.NanogramPerDay, q => q.ToUnit(MassFlowUnit.NanogramPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.NanogramPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.NanogramPerSecond, q => q.ToUnit(MassFlowUnit.NanogramPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.NanogramPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.PoundPerDay, q => q.ToUnit(MassFlowUnit.PoundPerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.PoundPerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.PoundPerHour, q => q.ToUnit(MassFlowUnit.PoundPerHour));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.PoundPerHour, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.PoundPerMinute, q => q.ToUnit(MassFlowUnit.PoundPerMinute));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.PoundPerMinute, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.PoundPerSecond, q => q.ToUnit(MassFlowUnit.PoundPerSecond));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.PoundPerSecond, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.ShortTonPerHour, q => q.ToUnit(MassFlowUnit.ShortTonPerHour));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.ShortTonPerHour, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.TonnePerDay, q => q.ToUnit(MassFlowUnit.TonnePerDay));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.TonnePerDay, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlow<T>.BaseUnit, MassFlowUnit.TonnePerHour, q => q.ToUnit(MassFlowUnit.TonnePerHour));
            unitConverter.SetConversionFunction<MassFlow<T>>(MassFlowUnit.TonnePerHour, MassFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.GramPerHourPerSquareCentimeter, q => q.ToUnit(MassFluxUnit.GramPerHourPerSquareCentimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.GramPerHourPerSquareCentimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.GramPerHourPerSquareMeter, q => q.ToUnit(MassFluxUnit.GramPerHourPerSquareMeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.GramPerHourPerSquareMeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.GramPerHourPerSquareMillimeter, q => q.ToUnit(MassFluxUnit.GramPerHourPerSquareMillimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.GramPerHourPerSquareMillimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.GramPerSecondPerSquareCentimeter, q => q.ToUnit(MassFluxUnit.GramPerSecondPerSquareCentimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.GramPerSecondPerSquareCentimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.GramPerSecondPerSquareMeter, q => q.ToUnit(MassFluxUnit.GramPerSecondPerSquareMeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.GramPerSecondPerSquareMeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.GramPerSecondPerSquareMillimeter, q => q.ToUnit(MassFluxUnit.GramPerSecondPerSquareMillimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.GramPerSecondPerSquareMillimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.KilogramPerHourPerSquareCentimeter, q => q.ToUnit(MassFluxUnit.KilogramPerHourPerSquareCentimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.KilogramPerHourPerSquareCentimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.KilogramPerHourPerSquareMeter, q => q.ToUnit(MassFluxUnit.KilogramPerHourPerSquareMeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.KilogramPerHourPerSquareMeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.KilogramPerHourPerSquareMillimeter, q => q.ToUnit(MassFluxUnit.KilogramPerHourPerSquareMillimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.KilogramPerHourPerSquareMillimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.KilogramPerSecondPerSquareCentimeter, q => q.ToUnit(MassFluxUnit.KilogramPerSecondPerSquareCentimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.KilogramPerSecondPerSquareCentimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFlux<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFlux<T>.BaseUnit, MassFluxUnit.KilogramPerSecondPerSquareMillimeter, q => q.ToUnit(MassFluxUnit.KilogramPerSecondPerSquareMillimeter));
            unitConverter.SetConversionFunction<MassFlux<T>>(MassFluxUnit.KilogramPerSecondPerSquareMillimeter, MassFlux<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.CentigramPerGram, q => q.ToUnit(MassFractionUnit.CentigramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.CentigramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.CentigramPerKilogram, q => q.ToUnit(MassFractionUnit.CentigramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.CentigramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.DecagramPerGram, q => q.ToUnit(MassFractionUnit.DecagramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.DecagramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.DecagramPerKilogram, q => q.ToUnit(MassFractionUnit.DecagramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.DecagramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.DecigramPerGram, q => q.ToUnit(MassFractionUnit.DecigramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.DecigramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.DecigramPerKilogram, q => q.ToUnit(MassFractionUnit.DecigramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.DecigramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFraction<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.GramPerGram, q => q.ToUnit(MassFractionUnit.GramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.GramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.GramPerKilogram, q => q.ToUnit(MassFractionUnit.GramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.GramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.HectogramPerGram, q => q.ToUnit(MassFractionUnit.HectogramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.HectogramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.HectogramPerKilogram, q => q.ToUnit(MassFractionUnit.HectogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.HectogramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.KilogramPerGram, q => q.ToUnit(MassFractionUnit.KilogramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.KilogramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.KilogramPerKilogram, q => q.ToUnit(MassFractionUnit.KilogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.KilogramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.MicrogramPerGram, q => q.ToUnit(MassFractionUnit.MicrogramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.MicrogramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.MicrogramPerKilogram, q => q.ToUnit(MassFractionUnit.MicrogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.MicrogramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.MilligramPerGram, q => q.ToUnit(MassFractionUnit.MilligramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.MilligramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.MilligramPerKilogram, q => q.ToUnit(MassFractionUnit.MilligramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.MilligramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.NanogramPerGram, q => q.ToUnit(MassFractionUnit.NanogramPerGram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.NanogramPerGram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.NanogramPerKilogram, q => q.ToUnit(MassFractionUnit.NanogramPerKilogram));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.NanogramPerKilogram, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.PartPerBillion, q => q.ToUnit(MassFractionUnit.PartPerBillion));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.PartPerBillion, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.PartPerMillion, q => q.ToUnit(MassFractionUnit.PartPerMillion));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.PartPerMillion, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.PartPerThousand, q => q.ToUnit(MassFractionUnit.PartPerThousand));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.PartPerThousand, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.PartPerTrillion, q => q.ToUnit(MassFractionUnit.PartPerTrillion));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.PartPerTrillion, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFraction<T>.BaseUnit, MassFractionUnit.Percent, q => q.ToUnit(MassFractionUnit.Percent));
            unitConverter.SetConversionFunction<MassFraction<T>>(MassFractionUnit.Percent, MassFraction<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.GramSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.GramSquareCentimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.GramSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.GramSquareDecimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.GramSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.GramSquareMeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.GramSquareMillimeter, q => q.ToUnit(MassMomentOfInertiaUnit.GramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.GramSquareMillimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilogramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.KilogramSquareCentimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilogramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.KilogramSquareDecimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertia<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.KilogramSquareMillimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilogramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.KilogramSquareMillimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.KilotonneSquareCentimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.KilotonneSquareDecimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.KilotonneSquareMeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.KilotonneSquareMilimeter, q => q.ToUnit(MassMomentOfInertiaUnit.KilotonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.KilotonneSquareMilimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MegatonneSquareCentimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MegatonneSquareDecimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MegatonneSquareMeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MegatonneSquareMilimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MegatonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MegatonneSquareMilimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MilligramSquareCentimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MilligramSquareDecimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MilligramSquareMeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.MilligramSquareMillimeter, q => q.ToUnit(MassMomentOfInertiaUnit.MilligramSquareMillimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.MilligramSquareMillimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.PoundSquareFoot, q => q.ToUnit(MassMomentOfInertiaUnit.PoundSquareFoot));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.PoundSquareFoot, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.PoundSquareInch, q => q.ToUnit(MassMomentOfInertiaUnit.PoundSquareInch));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.PoundSquareInch, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.SlugSquareFoot, q => q.ToUnit(MassMomentOfInertiaUnit.SlugSquareFoot));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.SlugSquareFoot, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.SlugSquareInch, q => q.ToUnit(MassMomentOfInertiaUnit.SlugSquareInch));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.SlugSquareInch, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.TonneSquareCentimeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareCentimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.TonneSquareCentimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.TonneSquareDecimeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareDecimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.TonneSquareDecimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.TonneSquareMeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareMeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.TonneSquareMeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertia<T>.BaseUnit, MassMomentOfInertiaUnit.TonneSquareMilimeter, q => q.ToUnit(MassMomentOfInertiaUnit.TonneSquareMilimeter));
            unitConverter.SetConversionFunction<MassMomentOfInertia<T>>(MassMomentOfInertiaUnit.TonneSquareMilimeter, MassMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEnergy<T>>(MolarEnergy<T>.BaseUnit, MolarEnergy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MolarEnergy<T>>(MolarEnergy<T>.BaseUnit, MolarEnergyUnit.KilojoulePerMole, q => q.ToUnit(MolarEnergyUnit.KilojoulePerMole));
            unitConverter.SetConversionFunction<MolarEnergy<T>>(MolarEnergyUnit.KilojoulePerMole, MolarEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEnergy<T>>(MolarEnergy<T>.BaseUnit, MolarEnergyUnit.MegajoulePerMole, q => q.ToUnit(MolarEnergyUnit.MegajoulePerMole));
            unitConverter.SetConversionFunction<MolarEnergy<T>>(MolarEnergyUnit.MegajoulePerMole, MolarEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEntropy<T>>(MolarEntropy<T>.BaseUnit, MolarEntropy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MolarEntropy<T>>(MolarEntropy<T>.BaseUnit, MolarEntropyUnit.KilojoulePerMoleKelvin, q => q.ToUnit(MolarEntropyUnit.KilojoulePerMoleKelvin));
            unitConverter.SetConversionFunction<MolarEntropy<T>>(MolarEntropyUnit.KilojoulePerMoleKelvin, MolarEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarEntropy<T>>(MolarEntropy<T>.BaseUnit, MolarEntropyUnit.MegajoulePerMoleKelvin, q => q.ToUnit(MolarEntropyUnit.MegajoulePerMoleKelvin));
            unitConverter.SetConversionFunction<MolarEntropy<T>>(MolarEntropyUnit.MegajoulePerMoleKelvin, MolarEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, MolarityUnit.CentimolesPerLiter, q => q.ToUnit(MolarityUnit.CentimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity<T>>(MolarityUnit.CentimolesPerLiter, Molarity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, MolarityUnit.DecimolesPerLiter, q => q.ToUnit(MolarityUnit.DecimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity<T>>(MolarityUnit.DecimolesPerLiter, Molarity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, MolarityUnit.MicromolesPerLiter, q => q.ToUnit(MolarityUnit.MicromolesPerLiter));
            unitConverter.SetConversionFunction<Molarity<T>>(MolarityUnit.MicromolesPerLiter, Molarity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, MolarityUnit.MillimolesPerLiter, q => q.ToUnit(MolarityUnit.MillimolesPerLiter));
            unitConverter.SetConversionFunction<Molarity<T>>(MolarityUnit.MillimolesPerLiter, Molarity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, Molarity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, MolarityUnit.MolesPerLiter, q => q.ToUnit(MolarityUnit.MolesPerLiter));
            unitConverter.SetConversionFunction<Molarity<T>>(MolarityUnit.MolesPerLiter, Molarity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, MolarityUnit.NanomolesPerLiter, q => q.ToUnit(MolarityUnit.NanomolesPerLiter));
            unitConverter.SetConversionFunction<Molarity<T>>(MolarityUnit.NanomolesPerLiter, Molarity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Molarity<T>>(Molarity<T>.BaseUnit, MolarityUnit.PicomolesPerLiter, q => q.ToUnit(MolarityUnit.PicomolesPerLiter));
            unitConverter.SetConversionFunction<Molarity<T>>(MolarityUnit.PicomolesPerLiter, Molarity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.CentigramPerMole, q => q.ToUnit(MolarMassUnit.CentigramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.CentigramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.DecagramPerMole, q => q.ToUnit(MolarMassUnit.DecagramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.DecagramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.DecigramPerMole, q => q.ToUnit(MolarMassUnit.DecigramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.DecigramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.GramPerMole, q => q.ToUnit(MolarMassUnit.GramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.GramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.HectogramPerMole, q => q.ToUnit(MolarMassUnit.HectogramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.HectogramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMass<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.KilopoundPerMole, q => q.ToUnit(MolarMassUnit.KilopoundPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.KilopoundPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.MegapoundPerMole, q => q.ToUnit(MolarMassUnit.MegapoundPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.MegapoundPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.MicrogramPerMole, q => q.ToUnit(MolarMassUnit.MicrogramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.MicrogramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.MilligramPerMole, q => q.ToUnit(MolarMassUnit.MilligramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.MilligramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.NanogramPerMole, q => q.ToUnit(MolarMassUnit.NanogramPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.NanogramPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMass<T>.BaseUnit, MolarMassUnit.PoundPerMole, q => q.ToUnit(MolarMassUnit.PoundPerMole));
            unitConverter.SetConversionFunction<MolarMass<T>>(MolarMassUnit.PoundPerMole, MolarMass<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Permeability<T>>(Permeability<T>.BaseUnit, Permeability<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Permittivity<T>>(Permittivity<T>.BaseUnit, Permittivity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.BoilerHorsepower, q => q.ToUnit(PowerUnit.BoilerHorsepower));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.BoilerHorsepower, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.BritishThermalUnitPerHour, q => q.ToUnit(PowerUnit.BritishThermalUnitPerHour));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.BritishThermalUnitPerHour, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Decawatt, q => q.ToUnit(PowerUnit.Decawatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Decawatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Deciwatt, q => q.ToUnit(PowerUnit.Deciwatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Deciwatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.ElectricalHorsepower, q => q.ToUnit(PowerUnit.ElectricalHorsepower));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.ElectricalHorsepower, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Femtowatt, q => q.ToUnit(PowerUnit.Femtowatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Femtowatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.GigajoulePerHour, q => q.ToUnit(PowerUnit.GigajoulePerHour));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.GigajoulePerHour, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Gigawatt, q => q.ToUnit(PowerUnit.Gigawatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Gigawatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.HydraulicHorsepower, q => q.ToUnit(PowerUnit.HydraulicHorsepower));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.HydraulicHorsepower, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.JoulePerHour, q => q.ToUnit(PowerUnit.JoulePerHour));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.JoulePerHour, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.KilobritishThermalUnitPerHour, q => q.ToUnit(PowerUnit.KilobritishThermalUnitPerHour));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.KilobritishThermalUnitPerHour, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.KilojoulePerHour, q => q.ToUnit(PowerUnit.KilojoulePerHour));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.KilojoulePerHour, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Kilowatt, q => q.ToUnit(PowerUnit.Kilowatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Kilowatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.MechanicalHorsepower, q => q.ToUnit(PowerUnit.MechanicalHorsepower));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.MechanicalHorsepower, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.MegajoulePerHour, q => q.ToUnit(PowerUnit.MegajoulePerHour));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.MegajoulePerHour, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Megawatt, q => q.ToUnit(PowerUnit.Megawatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Megawatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.MetricHorsepower, q => q.ToUnit(PowerUnit.MetricHorsepower));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.MetricHorsepower, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Microwatt, q => q.ToUnit(PowerUnit.Microwatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Microwatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.MillijoulePerHour, q => q.ToUnit(PowerUnit.MillijoulePerHour));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.MillijoulePerHour, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Milliwatt, q => q.ToUnit(PowerUnit.Milliwatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Milliwatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Nanowatt, q => q.ToUnit(PowerUnit.Nanowatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Nanowatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Petawatt, q => q.ToUnit(PowerUnit.Petawatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Petawatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Picowatt, q => q.ToUnit(PowerUnit.Picowatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Picowatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, PowerUnit.Terawatt, q => q.ToUnit(PowerUnit.Terawatt));
            unitConverter.SetConversionFunction<Power<T>>(PowerUnit.Terawatt, Power<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Power<T>>(Power<T>.BaseUnit, Power<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DecawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.DecawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DecawattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DecawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.DecawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DecawattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DecawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.DecawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DecawattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DecawattPerLiter, q => q.ToUnit(PowerDensityUnit.DecawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DecawattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DeciwattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.DeciwattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DeciwattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DeciwattPerCubicInch, q => q.ToUnit(PowerDensityUnit.DeciwattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DeciwattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DeciwattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.DeciwattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DeciwattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.DeciwattPerLiter, q => q.ToUnit(PowerDensityUnit.DeciwattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.DeciwattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.GigawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.GigawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.GigawattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.GigawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.GigawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.GigawattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.GigawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.GigawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.GigawattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.GigawattPerLiter, q => q.ToUnit(PowerDensityUnit.GigawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.GigawattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.KilowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.KilowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.KilowattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.KilowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.KilowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.KilowattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.KilowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.KilowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.KilowattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.KilowattPerLiter, q => q.ToUnit(PowerDensityUnit.KilowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.KilowattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MegawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.MegawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MegawattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MegawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.MegawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MegawattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MegawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.MegawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MegawattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MegawattPerLiter, q => q.ToUnit(PowerDensityUnit.MegawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MegawattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MicrowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.MicrowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MicrowattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MicrowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.MicrowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MicrowattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MicrowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.MicrowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MicrowattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MicrowattPerLiter, q => q.ToUnit(PowerDensityUnit.MicrowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MicrowattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MilliwattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.MilliwattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MilliwattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MilliwattPerCubicInch, q => q.ToUnit(PowerDensityUnit.MilliwattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MilliwattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MilliwattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.MilliwattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MilliwattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.MilliwattPerLiter, q => q.ToUnit(PowerDensityUnit.MilliwattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.MilliwattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.NanowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.NanowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.NanowattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.NanowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.NanowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.NanowattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.NanowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.NanowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.NanowattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.NanowattPerLiter, q => q.ToUnit(PowerDensityUnit.NanowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.NanowattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.PicowattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.PicowattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.PicowattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.PicowattPerCubicInch, q => q.ToUnit(PowerDensityUnit.PicowattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.PicowattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.PicowattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.PicowattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.PicowattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.PicowattPerLiter, q => q.ToUnit(PowerDensityUnit.PicowattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.PicowattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.TerawattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.TerawattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.TerawattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.TerawattPerCubicInch, q => q.ToUnit(PowerDensityUnit.TerawattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.TerawattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.TerawattPerCubicMeter, q => q.ToUnit(PowerDensityUnit.TerawattPerCubicMeter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.TerawattPerCubicMeter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.TerawattPerLiter, q => q.ToUnit(PowerDensityUnit.TerawattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.TerawattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.WattPerCubicFoot, q => q.ToUnit(PowerDensityUnit.WattPerCubicFoot));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.WattPerCubicFoot, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.WattPerCubicInch, q => q.ToUnit(PowerDensityUnit.WattPerCubicInch));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.WattPerCubicInch, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensity<T>.BaseUnit, PowerDensityUnit.WattPerLiter, q => q.ToUnit(PowerDensityUnit.WattPerLiter));
            unitConverter.SetConversionFunction<PowerDensity<T>>(PowerDensityUnit.WattPerLiter, PowerDensity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerRatio<T>>(PowerRatio<T>.BaseUnit, PowerRatioUnit.DecibelMilliwatt, q => q.ToUnit(PowerRatioUnit.DecibelMilliwatt));
            unitConverter.SetConversionFunction<PowerRatio<T>>(PowerRatioUnit.DecibelMilliwatt, PowerRatio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PowerRatio<T>>(PowerRatio<T>.BaseUnit, PowerRatio<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Atmosphere, q => q.ToUnit(PressureUnit.Atmosphere));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Atmosphere, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Bar, q => q.ToUnit(PressureUnit.Bar));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Bar, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Centibar, q => q.ToUnit(PressureUnit.Centibar));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Centibar, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Decapascal, q => q.ToUnit(PressureUnit.Decapascal));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Decapascal, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Decibar, q => q.ToUnit(PressureUnit.Decibar));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Decibar, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.DynePerSquareCentimeter, q => q.ToUnit(PressureUnit.DynePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.DynePerSquareCentimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.FootOfHead, q => q.ToUnit(PressureUnit.FootOfHead));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.FootOfHead, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Gigapascal, q => q.ToUnit(PressureUnit.Gigapascal));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Gigapascal, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Hectopascal, q => q.ToUnit(PressureUnit.Hectopascal));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Hectopascal, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.InchOfMercury, q => q.ToUnit(PressureUnit.InchOfMercury));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.InchOfMercury, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.InchOfWaterColumn, q => q.ToUnit(PressureUnit.InchOfWaterColumn));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.InchOfWaterColumn, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Kilobar, q => q.ToUnit(PressureUnit.Kilobar));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Kilobar, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilogramForcePerSquareCentimeter, q => q.ToUnit(PressureUnit.KilogramForcePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilogramForcePerSquareCentimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilogramForcePerSquareMeter, q => q.ToUnit(PressureUnit.KilogramForcePerSquareMeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilogramForcePerSquareMeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilogramForcePerSquareMillimeter, q => q.ToUnit(PressureUnit.KilogramForcePerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilogramForcePerSquareMillimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilonewtonPerSquareCentimeter, q => q.ToUnit(PressureUnit.KilonewtonPerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilonewtonPerSquareCentimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilonewtonPerSquareMeter, q => q.ToUnit(PressureUnit.KilonewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilonewtonPerSquareMeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilonewtonPerSquareMillimeter, q => q.ToUnit(PressureUnit.KilonewtonPerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilonewtonPerSquareMillimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Kilopascal, q => q.ToUnit(PressureUnit.Kilopascal));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Kilopascal, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilopoundForcePerSquareFoot, q => q.ToUnit(PressureUnit.KilopoundForcePerSquareFoot));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilopoundForcePerSquareFoot, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.KilopoundForcePerSquareInch, q => q.ToUnit(PressureUnit.KilopoundForcePerSquareInch));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.KilopoundForcePerSquareInch, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Megabar, q => q.ToUnit(PressureUnit.Megabar));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Megabar, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.MeganewtonPerSquareMeter, q => q.ToUnit(PressureUnit.MeganewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.MeganewtonPerSquareMeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Megapascal, q => q.ToUnit(PressureUnit.Megapascal));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Megapascal, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.MeterOfHead, q => q.ToUnit(PressureUnit.MeterOfHead));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.MeterOfHead, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Microbar, q => q.ToUnit(PressureUnit.Microbar));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Microbar, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Micropascal, q => q.ToUnit(PressureUnit.Micropascal));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Micropascal, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Millibar, q => q.ToUnit(PressureUnit.Millibar));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Millibar, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.MillimeterOfMercury, q => q.ToUnit(PressureUnit.MillimeterOfMercury));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.MillimeterOfMercury, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Millipascal, q => q.ToUnit(PressureUnit.Millipascal));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Millipascal, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.NewtonPerSquareCentimeter, q => q.ToUnit(PressureUnit.NewtonPerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.NewtonPerSquareCentimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.NewtonPerSquareMeter, q => q.ToUnit(PressureUnit.NewtonPerSquareMeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.NewtonPerSquareMeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.NewtonPerSquareMillimeter, q => q.ToUnit(PressureUnit.NewtonPerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.NewtonPerSquareMillimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, Pressure<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.PoundForcePerSquareFoot, q => q.ToUnit(PressureUnit.PoundForcePerSquareFoot));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.PoundForcePerSquareFoot, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.PoundForcePerSquareInch, q => q.ToUnit(PressureUnit.PoundForcePerSquareInch));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.PoundForcePerSquareInch, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.PoundPerInchSecondSquared, q => q.ToUnit(PressureUnit.PoundPerInchSecondSquared));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.PoundPerInchSecondSquared, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.TechnicalAtmosphere, q => q.ToUnit(PressureUnit.TechnicalAtmosphere));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.TechnicalAtmosphere, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.TonneForcePerSquareCentimeter, q => q.ToUnit(PressureUnit.TonneForcePerSquareCentimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.TonneForcePerSquareCentimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.TonneForcePerSquareMeter, q => q.ToUnit(PressureUnit.TonneForcePerSquareMeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.TonneForcePerSquareMeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.TonneForcePerSquareMillimeter, q => q.ToUnit(PressureUnit.TonneForcePerSquareMillimeter));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.TonneForcePerSquareMillimeter, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Pressure<T>>(Pressure<T>.BaseUnit, PressureUnit.Torr, q => q.ToUnit(PressureUnit.Torr));
            unitConverter.SetConversionFunction<Pressure<T>>(PressureUnit.Torr, Pressure<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRate<T>.BaseUnit, PressureChangeRateUnit.AtmospherePerSecond, q => q.ToUnit(PressureChangeRateUnit.AtmospherePerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRateUnit.AtmospherePerSecond, PressureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRate<T>.BaseUnit, PressureChangeRateUnit.KilopascalPerMinute, q => q.ToUnit(PressureChangeRateUnit.KilopascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRateUnit.KilopascalPerMinute, PressureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRate<T>.BaseUnit, PressureChangeRateUnit.KilopascalPerSecond, q => q.ToUnit(PressureChangeRateUnit.KilopascalPerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRateUnit.KilopascalPerSecond, PressureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRate<T>.BaseUnit, PressureChangeRateUnit.MegapascalPerMinute, q => q.ToUnit(PressureChangeRateUnit.MegapascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRateUnit.MegapascalPerMinute, PressureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRate<T>.BaseUnit, PressureChangeRateUnit.MegapascalPerSecond, q => q.ToUnit(PressureChangeRateUnit.MegapascalPerSecond));
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRateUnit.MegapascalPerSecond, PressureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRate<T>.BaseUnit, PressureChangeRateUnit.PascalPerMinute, q => q.ToUnit(PressureChangeRateUnit.PascalPerMinute));
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRateUnit.PascalPerMinute, PressureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<PressureChangeRate<T>>(PressureChangeRate<T>.BaseUnit, PressureChangeRate<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Ratio<T>>(Ratio<T>.BaseUnit, Ratio<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Ratio<T>>(Ratio<T>.BaseUnit, RatioUnit.PartPerBillion, q => q.ToUnit(RatioUnit.PartPerBillion));
            unitConverter.SetConversionFunction<Ratio<T>>(RatioUnit.PartPerBillion, Ratio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio<T>>(Ratio<T>.BaseUnit, RatioUnit.PartPerMillion, q => q.ToUnit(RatioUnit.PartPerMillion));
            unitConverter.SetConversionFunction<Ratio<T>>(RatioUnit.PartPerMillion, Ratio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio<T>>(Ratio<T>.BaseUnit, RatioUnit.PartPerThousand, q => q.ToUnit(RatioUnit.PartPerThousand));
            unitConverter.SetConversionFunction<Ratio<T>>(RatioUnit.PartPerThousand, Ratio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio<T>>(Ratio<T>.BaseUnit, RatioUnit.PartPerTrillion, q => q.ToUnit(RatioUnit.PartPerTrillion));
            unitConverter.SetConversionFunction<Ratio<T>>(RatioUnit.PartPerTrillion, Ratio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Ratio<T>>(Ratio<T>.BaseUnit, RatioUnit.Percent, q => q.ToUnit(RatioUnit.Percent));
            unitConverter.SetConversionFunction<Ratio<T>>(RatioUnit.Percent, Ratio<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RatioChangeRate<T>>(RatioChangeRate<T>.BaseUnit, RatioChangeRate<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RatioChangeRate<T>>(RatioChangeRate<T>.BaseUnit, RatioChangeRateUnit.PercentPerSecond, q => q.ToUnit(RatioChangeRateUnit.PercentPerSecond));
            unitConverter.SetConversionFunction<RatioChangeRate<T>>(RatioChangeRateUnit.PercentPerSecond, RatioChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy<T>>(ReactiveEnergy<T>.BaseUnit, ReactiveEnergyUnit.KilovoltampereReactiveHour, q => q.ToUnit(ReactiveEnergyUnit.KilovoltampereReactiveHour));
            unitConverter.SetConversionFunction<ReactiveEnergy<T>>(ReactiveEnergyUnit.KilovoltampereReactiveHour, ReactiveEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy<T>>(ReactiveEnergy<T>.BaseUnit, ReactiveEnergyUnit.MegavoltampereReactiveHour, q => q.ToUnit(ReactiveEnergyUnit.MegavoltampereReactiveHour));
            unitConverter.SetConversionFunction<ReactiveEnergy<T>>(ReactiveEnergyUnit.MegavoltampereReactiveHour, ReactiveEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactiveEnergy<T>>(ReactiveEnergy<T>.BaseUnit, ReactiveEnergy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ReactivePower<T>>(ReactivePower<T>.BaseUnit, ReactivePowerUnit.GigavoltampereReactive, q => q.ToUnit(ReactivePowerUnit.GigavoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower<T>>(ReactivePowerUnit.GigavoltampereReactive, ReactivePower<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower<T>>(ReactivePower<T>.BaseUnit, ReactivePowerUnit.KilovoltampereReactive, q => q.ToUnit(ReactivePowerUnit.KilovoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower<T>>(ReactivePowerUnit.KilovoltampereReactive, ReactivePower<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower<T>>(ReactivePower<T>.BaseUnit, ReactivePowerUnit.MegavoltampereReactive, q => q.ToUnit(ReactivePowerUnit.MegavoltampereReactive));
            unitConverter.SetConversionFunction<ReactivePower<T>>(ReactivePowerUnit.MegavoltampereReactive, ReactivePower<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ReactivePower<T>>(ReactivePower<T>.BaseUnit, ReactivePower<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RelativeHumidity<T>>(RelativeHumidity<T>.BaseUnit, RelativeHumidity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalAcceleration<T>>(RotationalAcceleration<T>.BaseUnit, RotationalAccelerationUnit.DegreePerSecondSquared, q => q.ToUnit(RotationalAccelerationUnit.DegreePerSecondSquared));
            unitConverter.SetConversionFunction<RotationalAcceleration<T>>(RotationalAccelerationUnit.DegreePerSecondSquared, RotationalAcceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalAcceleration<T>>(RotationalAcceleration<T>.BaseUnit, RotationalAcceleration<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalAcceleration<T>>(RotationalAcceleration<T>.BaseUnit, RotationalAccelerationUnit.RevolutionPerMinutePerSecond, q => q.ToUnit(RotationalAccelerationUnit.RevolutionPerMinutePerSecond));
            unitConverter.SetConversionFunction<RotationalAcceleration<T>>(RotationalAccelerationUnit.RevolutionPerMinutePerSecond, RotationalAcceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalAcceleration<T>>(RotationalAcceleration<T>.BaseUnit, RotationalAccelerationUnit.RevolutionPerSecondSquared, q => q.ToUnit(RotationalAccelerationUnit.RevolutionPerSecondSquared));
            unitConverter.SetConversionFunction<RotationalAcceleration<T>>(RotationalAccelerationUnit.RevolutionPerSecondSquared, RotationalAcceleration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.CentiradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.CentiradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.CentiradianPerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.DeciradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.DeciradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.DeciradianPerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.DegreePerMinute, q => q.ToUnit(RotationalSpeedUnit.DegreePerMinute));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.DegreePerMinute, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.DegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.DegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.DegreePerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.MicrodegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.MicrodegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.MicrodegreePerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.MicroradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.MicroradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.MicroradianPerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.MillidegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.MillidegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.MillidegreePerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.MilliradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.MilliradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.MilliradianPerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.NanodegreePerSecond, q => q.ToUnit(RotationalSpeedUnit.NanodegreePerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.NanodegreePerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.NanoradianPerSecond, q => q.ToUnit(RotationalSpeedUnit.NanoradianPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.NanoradianPerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeed<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.RevolutionPerMinute, q => q.ToUnit(RotationalSpeedUnit.RevolutionPerMinute));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.RevolutionPerMinute, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeed<T>.BaseUnit, RotationalSpeedUnit.RevolutionPerSecond, q => q.ToUnit(RotationalSpeedUnit.RevolutionPerSecond));
            unitConverter.SetConversionFunction<RotationalSpeed<T>>(RotationalSpeedUnit.RevolutionPerSecond, RotationalSpeed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.CentinewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.CentinewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.CentinewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.CentinewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.CentinewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.CentinewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.CentinewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.CentinewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.CentinewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.DecanewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.DecanewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.DecanewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.DecanewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.DecanewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.DecanewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.DecanewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.DecanewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.DecanewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.DecinewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.DecinewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.DecinewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.DecinewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.DecinewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.DecinewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.DecinewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.DecinewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.DecinewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.KilonewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.KilonewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.KilonewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.KilonewtonMeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.KilonewtonMeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.KilonewtonMeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.KilonewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.KilonewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.KilonewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.KilonewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.KilonewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.KilonewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.KilopoundForceFootPerDegrees, q => q.ToUnit(RotationalStiffnessUnit.KilopoundForceFootPerDegrees));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.KilopoundForceFootPerDegrees, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MeganewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.MeganewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MeganewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MeganewtonMeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.MeganewtonMeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MeganewtonMeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MeganewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.MeganewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MeganewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MeganewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.MeganewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MeganewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MicronewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.MicronewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MicronewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MicronewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.MicronewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MicronewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MicronewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.MicronewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MicronewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MillinewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.MillinewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MillinewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MillinewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.MillinewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MillinewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.MillinewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.MillinewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.MillinewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.NanonewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.NanonewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.NanonewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.NanonewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.NanonewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.NanonewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.NanonewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.NanonewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.NanonewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.NewtonMeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.NewtonMeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.NewtonMeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffness<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.NewtonMillimeterPerDegree, q => q.ToUnit(RotationalStiffnessUnit.NewtonMillimeterPerDegree));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.NewtonMillimeterPerDegree, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.NewtonMillimeterPerRadian, q => q.ToUnit(RotationalStiffnessUnit.NewtonMillimeterPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.NewtonMillimeterPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.PoundForceFeetPerRadian, q => q.ToUnit(RotationalStiffnessUnit.PoundForceFeetPerRadian));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.PoundForceFeetPerRadian, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffness<T>.BaseUnit, RotationalStiffnessUnit.PoundForceFootPerDegrees, q => q.ToUnit(RotationalStiffnessUnit.PoundForceFootPerDegrees));
            unitConverter.SetConversionFunction<RotationalStiffness<T>>(RotationalStiffnessUnit.PoundForceFootPerDegrees, RotationalStiffness<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLength<T>.BaseUnit, RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter, q => q.ToUnit(RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter, RotationalStiffnessPerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLength<T>.BaseUnit, RotationalStiffnessPerLengthUnit.KilopoundForceFootPerDegreesPerFoot, q => q.ToUnit(RotationalStiffnessPerLengthUnit.KilopoundForceFootPerDegreesPerFoot));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLengthUnit.KilopoundForceFootPerDegreesPerFoot, RotationalStiffnessPerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLength<T>.BaseUnit, RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter, q => q.ToUnit(RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter, RotationalStiffnessPerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLength<T>.BaseUnit, RotationalStiffnessPerLength<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLength<T>.BaseUnit, RotationalStiffnessPerLengthUnit.PoundForceFootPerDegreesPerFoot, q => q.ToUnit(RotationalStiffnessPerLengthUnit.PoundForceFootPerDegreesPerFoot));
            unitConverter.SetConversionFunction<RotationalStiffnessPerLength<T>>(RotationalStiffnessPerLengthUnit.PoundForceFootPerDegreesPerFoot, RotationalStiffnessPerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SolidAngle<T>>(SolidAngle<T>.BaseUnit, SolidAngle<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.BtuPerPound, q => q.ToUnit(SpecificEnergyUnit.BtuPerPound));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.BtuPerPound, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.CaloriePerGram, q => q.ToUnit(SpecificEnergyUnit.CaloriePerGram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.CaloriePerGram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.GigawattDayPerKilogram, q => q.ToUnit(SpecificEnergyUnit.GigawattDayPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.GigawattDayPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.GigawattDayPerShortTon, q => q.ToUnit(SpecificEnergyUnit.GigawattDayPerShortTon));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.GigawattDayPerShortTon, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.GigawattDayPerTonne, q => q.ToUnit(SpecificEnergyUnit.GigawattDayPerTonne));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.GigawattDayPerTonne, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.GigawattHourPerKilogram, q => q.ToUnit(SpecificEnergyUnit.GigawattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.GigawattHourPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.KilocaloriePerGram, q => q.ToUnit(SpecificEnergyUnit.KilocaloriePerGram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.KilocaloriePerGram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.KilojoulePerKilogram, q => q.ToUnit(SpecificEnergyUnit.KilojoulePerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.KilojoulePerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.KilowattDayPerKilogram, q => q.ToUnit(SpecificEnergyUnit.KilowattDayPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.KilowattDayPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.KilowattDayPerShortTon, q => q.ToUnit(SpecificEnergyUnit.KilowattDayPerShortTon));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.KilowattDayPerShortTon, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.KilowattDayPerTonne, q => q.ToUnit(SpecificEnergyUnit.KilowattDayPerTonne));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.KilowattDayPerTonne, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.KilowattHourPerKilogram, q => q.ToUnit(SpecificEnergyUnit.KilowattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.KilowattHourPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.MegajoulePerKilogram, q => q.ToUnit(SpecificEnergyUnit.MegajoulePerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.MegajoulePerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.MegawattDayPerKilogram, q => q.ToUnit(SpecificEnergyUnit.MegawattDayPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.MegawattDayPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.MegawattDayPerShortTon, q => q.ToUnit(SpecificEnergyUnit.MegawattDayPerShortTon));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.MegawattDayPerShortTon, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.MegawattDayPerTonne, q => q.ToUnit(SpecificEnergyUnit.MegawattDayPerTonne));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.MegawattDayPerTonne, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.MegawattHourPerKilogram, q => q.ToUnit(SpecificEnergyUnit.MegawattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.MegawattHourPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.TerawattDayPerKilogram, q => q.ToUnit(SpecificEnergyUnit.TerawattDayPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.TerawattDayPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.TerawattDayPerShortTon, q => q.ToUnit(SpecificEnergyUnit.TerawattDayPerShortTon));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.TerawattDayPerShortTon, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.TerawattDayPerTonne, q => q.ToUnit(SpecificEnergyUnit.TerawattDayPerTonne));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.TerawattDayPerTonne, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.WattDayPerKilogram, q => q.ToUnit(SpecificEnergyUnit.WattDayPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.WattDayPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.WattDayPerShortTon, q => q.ToUnit(SpecificEnergyUnit.WattDayPerShortTon));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.WattDayPerShortTon, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.WattDayPerTonne, q => q.ToUnit(SpecificEnergyUnit.WattDayPerTonne));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.WattDayPerTonne, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergy<T>.BaseUnit, SpecificEnergyUnit.WattHourPerKilogram, q => q.ToUnit(SpecificEnergyUnit.WattHourPerKilogram));
            unitConverter.SetConversionFunction<SpecificEnergy<T>>(SpecificEnergyUnit.WattHourPerKilogram, SpecificEnergy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.BtuPerPoundFahrenheit, q => q.ToUnit(SpecificEntropyUnit.BtuPerPoundFahrenheit));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.BtuPerPoundFahrenheit, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.CaloriePerGramKelvin, q => q.ToUnit(SpecificEntropyUnit.CaloriePerGramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.CaloriePerGramKelvin, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, q => q.ToUnit(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropy<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.KilocaloriePerGramKelvin, q => q.ToUnit(SpecificEntropyUnit.KilocaloriePerGramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.KilocaloriePerGramKelvin, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, q => q.ToUnit(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.KilojoulePerKilogramKelvin, q => q.ToUnit(SpecificEntropyUnit.KilojoulePerKilogramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.KilojoulePerKilogramKelvin, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, q => q.ToUnit(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropy<T>.BaseUnit, SpecificEntropyUnit.MegajoulePerKilogramKelvin, q => q.ToUnit(SpecificEntropyUnit.MegajoulePerKilogramKelvin));
            unitConverter.SetConversionFunction<SpecificEntropy<T>>(SpecificEntropyUnit.MegajoulePerKilogramKelvin, SpecificEntropy<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificVolume<T>>(SpecificVolume<T>.BaseUnit, SpecificVolumeUnit.CubicFootPerPound, q => q.ToUnit(SpecificVolumeUnit.CubicFootPerPound));
            unitConverter.SetConversionFunction<SpecificVolume<T>>(SpecificVolumeUnit.CubicFootPerPound, SpecificVolume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificVolume<T>>(SpecificVolume<T>.BaseUnit, SpecificVolume<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificVolume<T>>(SpecificVolume<T>.BaseUnit, SpecificVolumeUnit.MillicubicMeterPerKilogram, q => q.ToUnit(SpecificVolumeUnit.MillicubicMeterPerKilogram));
            unitConverter.SetConversionFunction<SpecificVolume<T>>(SpecificVolumeUnit.MillicubicMeterPerKilogram, SpecificVolume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.KilogramForcePerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilogramForcePerCubicCentimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicMeter, q => q.ToUnit(SpecificWeightUnit.KilogramForcePerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilogramForcePerCubicMeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilogramForcePerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.KilogramForcePerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilogramForcePerCubicMillimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.KilonewtonPerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilonewtonPerCubicCentimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicMeter, q => q.ToUnit(SpecificWeightUnit.KilonewtonPerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilonewtonPerCubicMeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilonewtonPerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.KilonewtonPerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilonewtonPerCubicMillimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilopoundForcePerCubicFoot, q => q.ToUnit(SpecificWeightUnit.KilopoundForcePerCubicFoot));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilopoundForcePerCubicFoot, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.KilopoundForcePerCubicInch, q => q.ToUnit(SpecificWeightUnit.KilopoundForcePerCubicInch));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.KilopoundForcePerCubicInch, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.MeganewtonPerCubicMeter, q => q.ToUnit(SpecificWeightUnit.MeganewtonPerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.MeganewtonPerCubicMeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.NewtonPerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.NewtonPerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.NewtonPerCubicCentimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeight<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.NewtonPerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.NewtonPerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.NewtonPerCubicMillimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.PoundForcePerCubicFoot, q => q.ToUnit(SpecificWeightUnit.PoundForcePerCubicFoot));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.PoundForcePerCubicFoot, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.PoundForcePerCubicInch, q => q.ToUnit(SpecificWeightUnit.PoundForcePerCubicInch));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.PoundForcePerCubicInch, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.TonneForcePerCubicCentimeter, q => q.ToUnit(SpecificWeightUnit.TonneForcePerCubicCentimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.TonneForcePerCubicCentimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.TonneForcePerCubicMeter, q => q.ToUnit(SpecificWeightUnit.TonneForcePerCubicMeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.TonneForcePerCubicMeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeight<T>.BaseUnit, SpecificWeightUnit.TonneForcePerCubicMillimeter, q => q.ToUnit(SpecificWeightUnit.TonneForcePerCubicMillimeter));
            unitConverter.SetConversionFunction<SpecificWeight<T>>(SpecificWeightUnit.TonneForcePerCubicMillimeter, SpecificWeight<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.CentimeterPerHour, q => q.ToUnit(SpeedUnit.CentimeterPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.CentimeterPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.CentimeterPerMinute, q => q.ToUnit(SpeedUnit.CentimeterPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.CentimeterPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.CentimeterPerSecond, q => q.ToUnit(SpeedUnit.CentimeterPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.CentimeterPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.DecimeterPerMinute, q => q.ToUnit(SpeedUnit.DecimeterPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.DecimeterPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.DecimeterPerSecond, q => q.ToUnit(SpeedUnit.DecimeterPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.DecimeterPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.FootPerHour, q => q.ToUnit(SpeedUnit.FootPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.FootPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.FootPerMinute, q => q.ToUnit(SpeedUnit.FootPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.FootPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.FootPerSecond, q => q.ToUnit(SpeedUnit.FootPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.FootPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.InchPerHour, q => q.ToUnit(SpeedUnit.InchPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.InchPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.InchPerMinute, q => q.ToUnit(SpeedUnit.InchPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.InchPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.InchPerSecond, q => q.ToUnit(SpeedUnit.InchPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.InchPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.KilometerPerHour, q => q.ToUnit(SpeedUnit.KilometerPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.KilometerPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.KilometerPerMinute, q => q.ToUnit(SpeedUnit.KilometerPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.KilometerPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.KilometerPerSecond, q => q.ToUnit(SpeedUnit.KilometerPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.KilometerPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.Knot, q => q.ToUnit(SpeedUnit.Knot));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.Knot, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MeterPerHour, q => q.ToUnit(SpeedUnit.MeterPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MeterPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MeterPerMinute, q => q.ToUnit(SpeedUnit.MeterPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MeterPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, Speed<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MicrometerPerMinute, q => q.ToUnit(SpeedUnit.MicrometerPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MicrometerPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MicrometerPerSecond, q => q.ToUnit(SpeedUnit.MicrometerPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MicrometerPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MilePerHour, q => q.ToUnit(SpeedUnit.MilePerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MilePerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MillimeterPerHour, q => q.ToUnit(SpeedUnit.MillimeterPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MillimeterPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MillimeterPerMinute, q => q.ToUnit(SpeedUnit.MillimeterPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MillimeterPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.MillimeterPerSecond, q => q.ToUnit(SpeedUnit.MillimeterPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.MillimeterPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.NanometerPerMinute, q => q.ToUnit(SpeedUnit.NanometerPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.NanometerPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.NanometerPerSecond, q => q.ToUnit(SpeedUnit.NanometerPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.NanometerPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.UsSurveyFootPerHour, q => q.ToUnit(SpeedUnit.UsSurveyFootPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.UsSurveyFootPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.UsSurveyFootPerMinute, q => q.ToUnit(SpeedUnit.UsSurveyFootPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.UsSurveyFootPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.UsSurveyFootPerSecond, q => q.ToUnit(SpeedUnit.UsSurveyFootPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.UsSurveyFootPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.YardPerHour, q => q.ToUnit(SpeedUnit.YardPerHour));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.YardPerHour, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.YardPerMinute, q => q.ToUnit(SpeedUnit.YardPerMinute));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.YardPerMinute, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Speed<T>>(Speed<T>.BaseUnit, SpeedUnit.YardPerSecond, q => q.ToUnit(SpeedUnit.YardPerSecond));
            unitConverter.SetConversionFunction<Speed<T>>(SpeedUnit.YardPerSecond, Speed<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.DegreeCelsius, q => q.ToUnit(TemperatureUnit.DegreeCelsius));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.DegreeCelsius, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.DegreeDelisle, q => q.ToUnit(TemperatureUnit.DegreeDelisle));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.DegreeDelisle, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.DegreeFahrenheit, q => q.ToUnit(TemperatureUnit.DegreeFahrenheit));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.DegreeFahrenheit, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.DegreeNewton, q => q.ToUnit(TemperatureUnit.DegreeNewton));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.DegreeNewton, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.DegreeRankine, q => q.ToUnit(TemperatureUnit.DegreeRankine));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.DegreeRankine, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.DegreeReaumur, q => q.ToUnit(TemperatureUnit.DegreeReaumur));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.DegreeReaumur, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.DegreeRoemer, q => q.ToUnit(TemperatureUnit.DegreeRoemer));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.DegreeRoemer, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, Temperature<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.MillidegreeCelsius, q => q.ToUnit(TemperatureUnit.MillidegreeCelsius));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.MillidegreeCelsius, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Temperature<T>>(Temperature<T>.BaseUnit, TemperatureUnit.SolarTemperature, q => q.ToUnit(TemperatureUnit.SolarTemperature));
            unitConverter.SetConversionFunction<Temperature<T>>(TemperatureUnit.SolarTemperature, Temperature<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.DegreeCelsiusPerMinute, q => q.ToUnit(TemperatureChangeRateUnit.DegreeCelsiusPerMinute));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.DegreeCelsiusPerMinute, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRate<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRate<T>.BaseUnit, TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond, q => q.ToUnit(TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond));
            unitConverter.SetConversionFunction<TemperatureChangeRate<T>>(TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond, TemperatureChangeRate<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.DegreeCelsius, q => q.ToUnit(TemperatureDeltaUnit.DegreeCelsius));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.DegreeCelsius, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.DegreeDelisle, q => q.ToUnit(TemperatureDeltaUnit.DegreeDelisle));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.DegreeDelisle, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.DegreeFahrenheit, q => q.ToUnit(TemperatureDeltaUnit.DegreeFahrenheit));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.DegreeFahrenheit, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.DegreeNewton, q => q.ToUnit(TemperatureDeltaUnit.DegreeNewton));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.DegreeNewton, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.DegreeRankine, q => q.ToUnit(TemperatureDeltaUnit.DegreeRankine));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.DegreeRankine, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.DegreeReaumur, q => q.ToUnit(TemperatureDeltaUnit.DegreeReaumur));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.DegreeReaumur, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.DegreeRoemer, q => q.ToUnit(TemperatureDeltaUnit.DegreeRoemer));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.DegreeRoemer, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDelta<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDelta<T>.BaseUnit, TemperatureDeltaUnit.MillidegreeCelsius, q => q.ToUnit(TemperatureDeltaUnit.MillidegreeCelsius));
            unitConverter.SetConversionFunction<TemperatureDelta<T>>(TemperatureDeltaUnit.MillidegreeCelsius, TemperatureDelta<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalConductivity<T>>(ThermalConductivity<T>.BaseUnit, ThermalConductivityUnit.BtuPerHourFootFahrenheit, q => q.ToUnit(ThermalConductivityUnit.BtuPerHourFootFahrenheit));
            unitConverter.SetConversionFunction<ThermalConductivity<T>>(ThermalConductivityUnit.BtuPerHourFootFahrenheit, ThermalConductivity<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalConductivity<T>>(ThermalConductivity<T>.BaseUnit, ThermalConductivity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistance<T>.BaseUnit, ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu, q => q.ToUnit(ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu));
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu, ThermalResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistance<T>.BaseUnit, ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie, q => q.ToUnit(ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie));
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie, ThermalResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistance<T>.BaseUnit, ThermalResistanceUnit.SquareCentimeterKelvinPerWatt, q => q.ToUnit(ThermalResistanceUnit.SquareCentimeterKelvinPerWatt));
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistanceUnit.SquareCentimeterKelvinPerWatt, ThermalResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistance<T>.BaseUnit, ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt, q => q.ToUnit(ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt));
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt, ThermalResistance<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<ThermalResistance<T>>(ThermalResistance<T>.BaseUnit, ThermalResistance<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilogramForceCentimeter, q => q.ToUnit(TorqueUnit.KilogramForceCentimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilogramForceCentimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilogramForceMeter, q => q.ToUnit(TorqueUnit.KilogramForceMeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilogramForceMeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilogramForceMillimeter, q => q.ToUnit(TorqueUnit.KilogramForceMillimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilogramForceMillimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilonewtonCentimeter, q => q.ToUnit(TorqueUnit.KilonewtonCentimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilonewtonCentimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilonewtonMeter, q => q.ToUnit(TorqueUnit.KilonewtonMeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilonewtonMeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilonewtonMillimeter, q => q.ToUnit(TorqueUnit.KilonewtonMillimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilonewtonMillimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilopoundForceFoot, q => q.ToUnit(TorqueUnit.KilopoundForceFoot));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilopoundForceFoot, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.KilopoundForceInch, q => q.ToUnit(TorqueUnit.KilopoundForceInch));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.KilopoundForceInch, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.MeganewtonCentimeter, q => q.ToUnit(TorqueUnit.MeganewtonCentimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.MeganewtonCentimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.MeganewtonMeter, q => q.ToUnit(TorqueUnit.MeganewtonMeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.MeganewtonMeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.MeganewtonMillimeter, q => q.ToUnit(TorqueUnit.MeganewtonMillimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.MeganewtonMillimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.MegapoundForceFoot, q => q.ToUnit(TorqueUnit.MegapoundForceFoot));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.MegapoundForceFoot, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.MegapoundForceInch, q => q.ToUnit(TorqueUnit.MegapoundForceInch));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.MegapoundForceInch, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.NewtonCentimeter, q => q.ToUnit(TorqueUnit.NewtonCentimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.NewtonCentimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, Torque<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.NewtonMillimeter, q => q.ToUnit(TorqueUnit.NewtonMillimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.NewtonMillimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.PoundalFoot, q => q.ToUnit(TorqueUnit.PoundalFoot));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.PoundalFoot, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.PoundForceFoot, q => q.ToUnit(TorqueUnit.PoundForceFoot));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.PoundForceFoot, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.PoundForceInch, q => q.ToUnit(TorqueUnit.PoundForceInch));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.PoundForceInch, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.TonneForceCentimeter, q => q.ToUnit(TorqueUnit.TonneForceCentimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.TonneForceCentimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.TonneForceMeter, q => q.ToUnit(TorqueUnit.TonneForceMeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.TonneForceMeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Torque<T>>(Torque<T>.BaseUnit, TorqueUnit.TonneForceMillimeter, q => q.ToUnit(TorqueUnit.TonneForceMillimeter));
            unitConverter.SetConversionFunction<Torque<T>>(TorqueUnit.TonneForceMillimeter, Torque<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilogramForceCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilogramForceCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilogramForceCentimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilogramForceMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilogramForceMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilogramForceMeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilogramForceMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilogramForceMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilogramForceMillimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilonewtonCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilonewtonCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilonewtonCentimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilonewtonMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilonewtonMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilonewtonMeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilonewtonMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.KilonewtonMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilonewtonMillimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilopoundForceFootPerFoot, q => q.ToUnit(TorquePerLengthUnit.KilopoundForceFootPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilopoundForceFootPerFoot, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.KilopoundForceInchPerFoot, q => q.ToUnit(TorquePerLengthUnit.KilopoundForceInchPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.KilopoundForceInchPerFoot, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.MeganewtonCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.MeganewtonCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.MeganewtonCentimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.MeganewtonMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.MeganewtonMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.MeganewtonMeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.MeganewtonMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.MeganewtonMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.MeganewtonMillimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.MegapoundForceFootPerFoot, q => q.ToUnit(TorquePerLengthUnit.MegapoundForceFootPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.MegapoundForceFootPerFoot, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.MegapoundForceInchPerFoot, q => q.ToUnit(TorquePerLengthUnit.MegapoundForceInchPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.MegapoundForceInchPerFoot, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.NewtonCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.NewtonCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.NewtonCentimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLength<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.NewtonMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.NewtonMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.NewtonMillimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.PoundForceFootPerFoot, q => q.ToUnit(TorquePerLengthUnit.PoundForceFootPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.PoundForceFootPerFoot, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.PoundForceInchPerFoot, q => q.ToUnit(TorquePerLengthUnit.PoundForceInchPerFoot));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.PoundForceInchPerFoot, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.TonneForceCentimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.TonneForceCentimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.TonneForceCentimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.TonneForceMeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.TonneForceMeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.TonneForceMeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLength<T>.BaseUnit, TorquePerLengthUnit.TonneForceMillimeterPerMeter, q => q.ToUnit(TorquePerLengthUnit.TonneForceMillimeterPerMeter));
            unitConverter.SetConversionFunction<TorquePerLength<T>>(TorquePerLengthUnit.TonneForceMillimeterPerMeter, TorquePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Turbidity<T>>(Turbidity<T>.BaseUnit, Turbidity<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<VitaminA<T>>(VitaminA<T>.BaseUnit, VitaminA<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.AcreFoot, q => q.ToUnit(VolumeUnit.AcreFoot));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.AcreFoot, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.AuTablespoon, q => q.ToUnit(VolumeUnit.AuTablespoon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.AuTablespoon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.BoardFoot, q => q.ToUnit(VolumeUnit.BoardFoot));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.BoardFoot, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Centiliter, q => q.ToUnit(VolumeUnit.Centiliter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Centiliter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicCentimeter, q => q.ToUnit(VolumeUnit.CubicCentimeter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicCentimeter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicDecimeter, q => q.ToUnit(VolumeUnit.CubicDecimeter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicDecimeter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicFoot, q => q.ToUnit(VolumeUnit.CubicFoot));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicFoot, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicHectometer, q => q.ToUnit(VolumeUnit.CubicHectometer));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicHectometer, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicInch, q => q.ToUnit(VolumeUnit.CubicInch));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicInch, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicKilometer, q => q.ToUnit(VolumeUnit.CubicKilometer));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicKilometer, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, Volume<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicMicrometer, q => q.ToUnit(VolumeUnit.CubicMicrometer));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicMicrometer, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicMile, q => q.ToUnit(VolumeUnit.CubicMile));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicMile, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicMillimeter, q => q.ToUnit(VolumeUnit.CubicMillimeter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicMillimeter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.CubicYard, q => q.ToUnit(VolumeUnit.CubicYard));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.CubicYard, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.DecausGallon, q => q.ToUnit(VolumeUnit.DecausGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.DecausGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Deciliter, q => q.ToUnit(VolumeUnit.Deciliter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Deciliter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.DeciusGallon, q => q.ToUnit(VolumeUnit.DeciusGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.DeciusGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.HectocubicFoot, q => q.ToUnit(VolumeUnit.HectocubicFoot));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.HectocubicFoot, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.HectocubicMeter, q => q.ToUnit(VolumeUnit.HectocubicMeter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.HectocubicMeter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Hectoliter, q => q.ToUnit(VolumeUnit.Hectoliter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Hectoliter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.HectousGallon, q => q.ToUnit(VolumeUnit.HectousGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.HectousGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.ImperialBeerBarrel, q => q.ToUnit(VolumeUnit.ImperialBeerBarrel));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.ImperialBeerBarrel, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.ImperialGallon, q => q.ToUnit(VolumeUnit.ImperialGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.ImperialGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.ImperialOunce, q => q.ToUnit(VolumeUnit.ImperialOunce));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.ImperialOunce, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.ImperialPint, q => q.ToUnit(VolumeUnit.ImperialPint));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.ImperialPint, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.KilocubicFoot, q => q.ToUnit(VolumeUnit.KilocubicFoot));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.KilocubicFoot, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.KilocubicMeter, q => q.ToUnit(VolumeUnit.KilocubicMeter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.KilocubicMeter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.KiloimperialGallon, q => q.ToUnit(VolumeUnit.KiloimperialGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.KiloimperialGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Kiloliter, q => q.ToUnit(VolumeUnit.Kiloliter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Kiloliter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.KilousGallon, q => q.ToUnit(VolumeUnit.KilousGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.KilousGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Liter, q => q.ToUnit(VolumeUnit.Liter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Liter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.MegacubicFoot, q => q.ToUnit(VolumeUnit.MegacubicFoot));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.MegacubicFoot, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.MegaimperialGallon, q => q.ToUnit(VolumeUnit.MegaimperialGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.MegaimperialGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Megaliter, q => q.ToUnit(VolumeUnit.Megaliter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Megaliter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.MegausGallon, q => q.ToUnit(VolumeUnit.MegausGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.MegausGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.MetricCup, q => q.ToUnit(VolumeUnit.MetricCup));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.MetricCup, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.MetricTeaspoon, q => q.ToUnit(VolumeUnit.MetricTeaspoon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.MetricTeaspoon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Microliter, q => q.ToUnit(VolumeUnit.Microliter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Microliter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.Milliliter, q => q.ToUnit(VolumeUnit.Milliliter));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.Milliliter, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.OilBarrel, q => q.ToUnit(VolumeUnit.OilBarrel));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.OilBarrel, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UkTablespoon, q => q.ToUnit(VolumeUnit.UkTablespoon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UkTablespoon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsBeerBarrel, q => q.ToUnit(VolumeUnit.UsBeerBarrel));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsBeerBarrel, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsCustomaryCup, q => q.ToUnit(VolumeUnit.UsCustomaryCup));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsCustomaryCup, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsGallon, q => q.ToUnit(VolumeUnit.UsGallon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsGallon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsLegalCup, q => q.ToUnit(VolumeUnit.UsLegalCup));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsLegalCup, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsOunce, q => q.ToUnit(VolumeUnit.UsOunce));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsOunce, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsPint, q => q.ToUnit(VolumeUnit.UsPint));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsPint, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsQuart, q => q.ToUnit(VolumeUnit.UsQuart));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsQuart, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsTablespoon, q => q.ToUnit(VolumeUnit.UsTablespoon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsTablespoon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<Volume<T>>(Volume<T>.BaseUnit, VolumeUnit.UsTeaspoon, q => q.ToUnit(VolumeUnit.UsTeaspoon));
            unitConverter.SetConversionFunction<Volume<T>>(VolumeUnit.UsTeaspoon, Volume<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.CentilitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.CentilitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.CentilitersPerLiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.CentilitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.CentilitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.CentilitersPerMililiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.DecilitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.DecilitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.DecilitersPerLiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.DecilitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.DecilitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.DecilitersPerMililiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentration<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.LitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.LitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.LitersPerLiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.LitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.LitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.LitersPerMililiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.MicrolitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.MicrolitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.MicrolitersPerLiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.MicrolitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.MicrolitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.MicrolitersPerMililiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.MillilitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.MillilitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.MillilitersPerLiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.MillilitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.MillilitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.MillilitersPerMililiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.NanolitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.NanolitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.NanolitersPerLiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.NanolitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.NanolitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.NanolitersPerMililiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.PartPerBillion, q => q.ToUnit(VolumeConcentrationUnit.PartPerBillion));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.PartPerBillion, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.PartPerMillion, q => q.ToUnit(VolumeConcentrationUnit.PartPerMillion));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.PartPerMillion, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.PartPerThousand, q => q.ToUnit(VolumeConcentrationUnit.PartPerThousand));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.PartPerThousand, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.PartPerTrillion, q => q.ToUnit(VolumeConcentrationUnit.PartPerTrillion));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.PartPerTrillion, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.Percent, q => q.ToUnit(VolumeConcentrationUnit.Percent));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.Percent, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.PicolitersPerLiter, q => q.ToUnit(VolumeConcentrationUnit.PicolitersPerLiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.PicolitersPerLiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentration<T>.BaseUnit, VolumeConcentrationUnit.PicolitersPerMililiter, q => q.ToUnit(VolumeConcentrationUnit.PicolitersPerMililiter));
            unitConverter.SetConversionFunction<VolumeConcentration<T>>(VolumeConcentrationUnit.PicolitersPerMililiter, VolumeConcentration<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.AcreFootPerDay, q => q.ToUnit(VolumeFlowUnit.AcreFootPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.AcreFootPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.AcreFootPerHour, q => q.ToUnit(VolumeFlowUnit.AcreFootPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.AcreFootPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.AcreFootPerMinute, q => q.ToUnit(VolumeFlowUnit.AcreFootPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.AcreFootPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.AcreFootPerSecond, q => q.ToUnit(VolumeFlowUnit.AcreFootPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.AcreFootPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CentiliterPerDay, q => q.ToUnit(VolumeFlowUnit.CentiliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CentiliterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CentiliterPerMinute, q => q.ToUnit(VolumeFlowUnit.CentiliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CentiliterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CentiliterPerSecond, q => q.ToUnit(VolumeFlowUnit.CentiliterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CentiliterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicCentimeterPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicCentimeterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicCentimeterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicDecimeterPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicDecimeterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicDecimeterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicFootPerHour, q => q.ToUnit(VolumeFlowUnit.CubicFootPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicFootPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicFootPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicFootPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicFootPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicFootPerSecond, q => q.ToUnit(VolumeFlowUnit.CubicFootPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicFootPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicMeterPerDay, q => q.ToUnit(VolumeFlowUnit.CubicMeterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicMeterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicMeterPerHour, q => q.ToUnit(VolumeFlowUnit.CubicMeterPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicMeterPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicMeterPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicMeterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicMeterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlow<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicMillimeterPerSecond, q => q.ToUnit(VolumeFlowUnit.CubicMillimeterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicMillimeterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicYardPerDay, q => q.ToUnit(VolumeFlowUnit.CubicYardPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicYardPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicYardPerHour, q => q.ToUnit(VolumeFlowUnit.CubicYardPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicYardPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicYardPerMinute, q => q.ToUnit(VolumeFlowUnit.CubicYardPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicYardPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.CubicYardPerSecond, q => q.ToUnit(VolumeFlowUnit.CubicYardPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.CubicYardPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.DeciliterPerDay, q => q.ToUnit(VolumeFlowUnit.DeciliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.DeciliterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.DeciliterPerMinute, q => q.ToUnit(VolumeFlowUnit.DeciliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.DeciliterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.DeciliterPerSecond, q => q.ToUnit(VolumeFlowUnit.DeciliterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.DeciliterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.KiloliterPerDay, q => q.ToUnit(VolumeFlowUnit.KiloliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.KiloliterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.KiloliterPerMinute, q => q.ToUnit(VolumeFlowUnit.KiloliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.KiloliterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.KiloliterPerSecond, q => q.ToUnit(VolumeFlowUnit.KiloliterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.KiloliterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.KilousGallonPerMinute, q => q.ToUnit(VolumeFlowUnit.KilousGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.KilousGallonPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.LiterPerDay, q => q.ToUnit(VolumeFlowUnit.LiterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.LiterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.LiterPerHour, q => q.ToUnit(VolumeFlowUnit.LiterPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.LiterPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.LiterPerMinute, q => q.ToUnit(VolumeFlowUnit.LiterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.LiterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.LiterPerSecond, q => q.ToUnit(VolumeFlowUnit.LiterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.LiterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MegaliterPerDay, q => q.ToUnit(VolumeFlowUnit.MegaliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MegaliterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MegaukGallonPerSecond, q => q.ToUnit(VolumeFlowUnit.MegaukGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MegaukGallonPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MicroliterPerDay, q => q.ToUnit(VolumeFlowUnit.MicroliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MicroliterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MicroliterPerMinute, q => q.ToUnit(VolumeFlowUnit.MicroliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MicroliterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MicroliterPerSecond, q => q.ToUnit(VolumeFlowUnit.MicroliterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MicroliterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MilliliterPerDay, q => q.ToUnit(VolumeFlowUnit.MilliliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MilliliterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MilliliterPerMinute, q => q.ToUnit(VolumeFlowUnit.MilliliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MilliliterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MilliliterPerSecond, q => q.ToUnit(VolumeFlowUnit.MilliliterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MilliliterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.MillionUsGallonsPerDay, q => q.ToUnit(VolumeFlowUnit.MillionUsGallonsPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.MillionUsGallonsPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.NanoliterPerDay, q => q.ToUnit(VolumeFlowUnit.NanoliterPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.NanoliterPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.NanoliterPerMinute, q => q.ToUnit(VolumeFlowUnit.NanoliterPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.NanoliterPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.NanoliterPerSecond, q => q.ToUnit(VolumeFlowUnit.NanoliterPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.NanoliterPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.OilBarrelPerDay, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.OilBarrelPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.OilBarrelPerHour, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.OilBarrelPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.OilBarrelPerMinute, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.OilBarrelPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.OilBarrelPerSecond, q => q.ToUnit(VolumeFlowUnit.OilBarrelPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.OilBarrelPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UkGallonPerDay, q => q.ToUnit(VolumeFlowUnit.UkGallonPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UkGallonPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UkGallonPerHour, q => q.ToUnit(VolumeFlowUnit.UkGallonPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UkGallonPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UkGallonPerMinute, q => q.ToUnit(VolumeFlowUnit.UkGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UkGallonPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UkGallonPerSecond, q => q.ToUnit(VolumeFlowUnit.UkGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UkGallonPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UsGallonPerDay, q => q.ToUnit(VolumeFlowUnit.UsGallonPerDay));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UsGallonPerDay, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UsGallonPerHour, q => q.ToUnit(VolumeFlowUnit.UsGallonPerHour));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UsGallonPerHour, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UsGallonPerMinute, q => q.ToUnit(VolumeFlowUnit.UsGallonPerMinute));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UsGallonPerMinute, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlow<T>.BaseUnit, VolumeFlowUnit.UsGallonPerSecond, q => q.ToUnit(VolumeFlowUnit.UsGallonPerSecond));
            unitConverter.SetConversionFunction<VolumeFlow<T>>(VolumeFlowUnit.UsGallonPerSecond, VolumeFlow<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLength<T>.BaseUnit, VolumePerLength<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLength<T>.BaseUnit, VolumePerLengthUnit.CubicYardPerFoot, q => q.ToUnit(VolumePerLengthUnit.CubicYardPerFoot));
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLengthUnit.CubicYardPerFoot, VolumePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLength<T>.BaseUnit, VolumePerLengthUnit.CubicYardPerUsSurveyFoot, q => q.ToUnit(VolumePerLengthUnit.CubicYardPerUsSurveyFoot));
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLengthUnit.CubicYardPerUsSurveyFoot, VolumePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLength<T>.BaseUnit, VolumePerLengthUnit.LiterPerKilometer, q => q.ToUnit(VolumePerLengthUnit.LiterPerKilometer));
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLengthUnit.LiterPerKilometer, VolumePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLength<T>.BaseUnit, VolumePerLengthUnit.LiterPerMeter, q => q.ToUnit(VolumePerLengthUnit.LiterPerMeter));
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLengthUnit.LiterPerMeter, VolumePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLength<T>.BaseUnit, VolumePerLengthUnit.LiterPerMillimeter, q => q.ToUnit(VolumePerLengthUnit.LiterPerMillimeter));
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLengthUnit.LiterPerMillimeter, VolumePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLength<T>.BaseUnit, VolumePerLengthUnit.OilBarrelPerFoot, q => q.ToUnit(VolumePerLengthUnit.OilBarrelPerFoot));
            unitConverter.SetConversionFunction<VolumePerLength<T>>(VolumePerLengthUnit.OilBarrelPerFoot, VolumePerLength<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertia<T>.BaseUnit, WarpingMomentOfInertiaUnit.CentimeterToTheSixth, q => q.ToUnit(WarpingMomentOfInertiaUnit.CentimeterToTheSixth));
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertiaUnit.CentimeterToTheSixth, WarpingMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertia<T>.BaseUnit, WarpingMomentOfInertiaUnit.DecimeterToTheSixth, q => q.ToUnit(WarpingMomentOfInertiaUnit.DecimeterToTheSixth));
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertiaUnit.DecimeterToTheSixth, WarpingMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertia<T>.BaseUnit, WarpingMomentOfInertiaUnit.FootToTheSixth, q => q.ToUnit(WarpingMomentOfInertiaUnit.FootToTheSixth));
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertiaUnit.FootToTheSixth, WarpingMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertia<T>.BaseUnit, WarpingMomentOfInertiaUnit.InchToTheSixth, q => q.ToUnit(WarpingMomentOfInertiaUnit.InchToTheSixth));
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertiaUnit.InchToTheSixth, WarpingMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertia<T>.BaseUnit, WarpingMomentOfInertia<T>.BaseUnit, q => q);
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertia<T>.BaseUnit, WarpingMomentOfInertiaUnit.MillimeterToTheSixth, q => q.ToUnit(WarpingMomentOfInertiaUnit.MillimeterToTheSixth));
            unitConverter.SetConversionFunction<WarpingMomentOfInertia<T>>(WarpingMomentOfInertiaUnit.MillimeterToTheSixth, WarpingMomentOfInertia<T>.BaseUnit, q => q.ToBaseUnit());
        }
    }
}
