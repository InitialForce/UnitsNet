//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;
using System.Collections.Generic;
using UnitsNet.Units;

// ReSharper disable RedundantCommaInArrayInitializer
// ReSharper disable once CheckNamespace
namespace UnitsNet
{
    public partial class UnitAbbreviationsCache
    {
        private static IEnumerable<(string CultureName, Enum UnitValue, bool AllowAbbreviationLookup, string[] UnitAbbreviations)> GetGeneratedLocalizationInfo()
        {
            yield return ("en-US", AccelerationUnit.CentimeterPerSecondSquared, true, new string[]{"cm/s²"});
            yield return ("ru-RU", AccelerationUnit.CentimeterPerSecondSquared, true, new string[]{"см/с²"});
            yield return ("en-US", AccelerationUnit.DecimeterPerSecondSquared, true, new string[]{"dm/s²"});
            yield return ("ru-RU", AccelerationUnit.DecimeterPerSecondSquared, true, new string[]{"дм/с²"});
            yield return ("en-US", AccelerationUnit.FootPerSecondSquared, true, new string[]{"ft/s²"});
            yield return ("ru-RU", AccelerationUnit.FootPerSecondSquared, true, new string[]{"фут/с²"});
            yield return ("en-US", AccelerationUnit.InchPerSecondSquared, true, new string[]{"in/s²"});
            yield return ("ru-RU", AccelerationUnit.InchPerSecondSquared, true, new string[]{"дюйм/с²"});
            yield return ("en-US", AccelerationUnit.KilometerPerSecondSquared, true, new string[]{"km/s²"});
            yield return ("ru-RU", AccelerationUnit.KilometerPerSecondSquared, true, new string[]{"км/с²"});
            yield return ("en-US", AccelerationUnit.KnotPerHour, true, new string[]{"kn/h"});
            yield return ("ru-RU", AccelerationUnit.KnotPerHour, true, new string[]{"узел/час"});
            yield return ("en-US", AccelerationUnit.KnotPerMinute, true, new string[]{"kn/min"});
            yield return ("ru-RU", AccelerationUnit.KnotPerMinute, true, new string[]{"узел/мин"});
            yield return ("en-US", AccelerationUnit.KnotPerSecond, true, new string[]{"kn/s"});
            yield return ("ru-RU", AccelerationUnit.KnotPerSecond, true, new string[]{"узел/с"});
            yield return ("en-US", AccelerationUnit.MeterPerSecondSquared, true, new string[]{"m/s²"});
            yield return ("ru-RU", AccelerationUnit.MeterPerSecondSquared, true, new string[]{"м/с²"});
            yield return ("en-US", AccelerationUnit.MicrometerPerSecondSquared, true, new string[]{"µm/s²"});
            yield return ("ru-RU", AccelerationUnit.MicrometerPerSecondSquared, true, new string[]{"мкм/с²"});
            yield return ("en-US", AccelerationUnit.MillimeterPerSecondSquared, true, new string[]{"mm/s²"});
            yield return ("ru-RU", AccelerationUnit.MillimeterPerSecondSquared, true, new string[]{"мм/с²"});
            yield return ("en-US", AccelerationUnit.MillistandardGravity, true, new string[]{"mg"});
            yield return ("ru-RU", AccelerationUnit.MillistandardGravity, true, new string[]{"мg"});
            yield return ("en-US", AccelerationUnit.NanometerPerSecondSquared, true, new string[]{"nm/s²"});
            yield return ("ru-RU", AccelerationUnit.NanometerPerSecondSquared, true, new string[]{"нм/с²"});
            yield return ("en-US", AccelerationUnit.StandardGravity, true, new string[]{"g"});
            yield return ("ru-RU", AccelerationUnit.StandardGravity, true, new string[]{"g"});
            yield return ("en-US", AmountOfSubstanceUnit.Centimole, true, new string[]{"cmol"});
            yield return ("en-US", AmountOfSubstanceUnit.CentipoundMole, true, new string[]{"clbmol"});
            yield return ("en-US", AmountOfSubstanceUnit.Decimole, true, new string[]{"dmol"});
            yield return ("en-US", AmountOfSubstanceUnit.DecipoundMole, true, new string[]{"dlbmol"});
            yield return ("en-US", AmountOfSubstanceUnit.Kilomole, true, new string[]{"kmol"});
            yield return ("en-US", AmountOfSubstanceUnit.KilopoundMole, true, new string[]{"klbmol"});
            yield return ("en-US", AmountOfSubstanceUnit.Megamole, true, new string[]{"Mmol"});
            yield return ("en-US", AmountOfSubstanceUnit.Micromole, true, new string[]{"µmol"});
            yield return ("en-US", AmountOfSubstanceUnit.MicropoundMole, true, new string[]{"µlbmol"});
            yield return ("en-US", AmountOfSubstanceUnit.Millimole, true, new string[]{"mmol"});
            yield return ("en-US", AmountOfSubstanceUnit.MillipoundMole, true, new string[]{"mlbmol"});
            yield return ("en-US", AmountOfSubstanceUnit.Mole, true, new string[]{"mol"});
            yield return ("en-US", AmountOfSubstanceUnit.Nanomole, true, new string[]{"nmol"});
            yield return ("en-US", AmountOfSubstanceUnit.NanopoundMole, true, new string[]{"nlbmol"});
            yield return ("en-US", AmountOfSubstanceUnit.PoundMole, true, new string[]{"lbmol"});
            yield return ("en-US", AmplitudeRatioUnit.DecibelMicrovolt, true, new string[]{"dBµV"});
            yield return ("en-US", AmplitudeRatioUnit.DecibelMillivolt, true, new string[]{"dBmV"});
            yield return ("en-US", AmplitudeRatioUnit.DecibelUnloaded, true, new string[]{"dBu"});
            yield return ("en-US", AmplitudeRatioUnit.DecibelVolt, true, new string[]{"dBV"});
            yield return ("en-US", AngleUnit.Arcminute, true, new string[]{"'", "arcmin", "amin", "min"});
            yield return ("en-US", AngleUnit.Arcsecond, true, new string[]{"″", "arcsec", "asec", "sec"});
            yield return ("en-US", AngleUnit.Centiradian, true, new string[]{"crad"});
            yield return ("ru-RU", AngleUnit.Centiradian, true, new string[]{"срад"});
            yield return ("en-US", AngleUnit.Deciradian, true, new string[]{"drad"});
            yield return ("ru-RU", AngleUnit.Deciradian, true, new string[]{"драд"});
            yield return ("en-US", AngleUnit.Degree, true, new string[]{"°", "deg"});
            yield return ("ru-RU", AngleUnit.Degree, true, new string[]{"°"});
            yield return ("en-US", AngleUnit.Gradian, true, new string[]{"g"});
            yield return ("ru-RU", AngleUnit.Gradian, true, new string[]{"g"});
            yield return ("en-US", AngleUnit.Microdegree, true, new string[]{"µ°", "µdeg"});
            yield return ("ru-RU", AngleUnit.Microdegree, true, new string[]{"мк°"});
            yield return ("en-US", AngleUnit.Microradian, true, new string[]{"µrad"});
            yield return ("ru-RU", AngleUnit.Microradian, true, new string[]{"мкрад"});
            yield return ("en-US", AngleUnit.Millidegree, true, new string[]{"m°", "mdeg"});
            yield return ("ru-RU", AngleUnit.Millidegree, true, new string[]{"м°"});
            yield return ("en-US", AngleUnit.Milliradian, true, new string[]{"mrad"});
            yield return ("ru-RU", AngleUnit.Milliradian, true, new string[]{"мрад"});
            yield return ("en-US", AngleUnit.Nanodegree, true, new string[]{"n°", "ndeg"});
            yield return ("ru-RU", AngleUnit.Nanodegree, true, new string[]{"н°"});
            yield return ("en-US", AngleUnit.Nanoradian, true, new string[]{"nrad"});
            yield return ("ru-RU", AngleUnit.Nanoradian, true, new string[]{"нрад"});
            yield return ("en-US", AngleUnit.NatoMil, true, new string[]{"mil"});
            yield return ("en-US", AngleUnit.Radian, true, new string[]{"rad"});
            yield return ("ru-RU", AngleUnit.Radian, true, new string[]{"рад"});
            yield return ("en-US", AngleUnit.Revolution, true, new string[]{"r"});
            yield return ("ru-RU", AngleUnit.Revolution, true, new string[]{"r"});
            yield return ("en-US", AngleUnit.Tilt, true, new string[]{"sin(θ)"});
            yield return ("en-US", ApparentEnergyUnit.KilovoltampereHour, true, new string[]{"kVAh"});
            yield return ("en-US", ApparentEnergyUnit.MegavoltampereHour, true, new string[]{"MVAh"});
            yield return ("en-US", ApparentEnergyUnit.VoltampereHour, true, new string[]{"VAh"});
            yield return ("en-US", ApparentPowerUnit.Gigavoltampere, true, new string[]{"GVA"});
            yield return ("en-US", ApparentPowerUnit.Kilovoltampere, true, new string[]{"kVA"});
            yield return ("en-US", ApparentPowerUnit.Megavoltampere, true, new string[]{"MVA"});
            yield return ("en-US", ApparentPowerUnit.Voltampere, true, new string[]{"VA"});
            yield return ("en-US", AreaUnit.Acre, true, new string[]{"ac"});
            yield return ("ru-RU", AreaUnit.Acre, true, new string[]{"акр"});
            yield return ("zh-CN", AreaUnit.Acre, true, new string[]{"英亩"});
            yield return ("en-US", AreaUnit.Hectare, true, new string[]{"ha"});
            yield return ("ru-RU", AreaUnit.Hectare, true, new string[]{"га"});
            yield return ("zh-CN", AreaUnit.Hectare, true, new string[]{"英亩"});
            yield return ("en-US", AreaUnit.SquareCentimeter, true, new string[]{"cm²"});
            yield return ("ru-RU", AreaUnit.SquareCentimeter, true, new string[]{"см²"});
            yield return ("zh-CN", AreaUnit.SquareCentimeter, true, new string[]{"平方厘米"});
            yield return ("en-US", AreaUnit.SquareDecimeter, true, new string[]{"dm²"});
            yield return ("ru-RU", AreaUnit.SquareDecimeter, true, new string[]{"дм²"});
            yield return ("zh-CN", AreaUnit.SquareDecimeter, true, new string[]{"平方分米"});
            yield return ("en-US", AreaUnit.SquareFoot, true, new string[]{"ft²"});
            yield return ("ru-RU", AreaUnit.SquareFoot, true, new string[]{"фут²"});
            yield return ("zh-CN", AreaUnit.SquareFoot, true, new string[]{"平方英尺"});
            yield return ("en-US", AreaUnit.SquareInch, true, new string[]{"in²"});
            yield return ("ru-RU", AreaUnit.SquareInch, true, new string[]{"дюйм²"});
            yield return ("zh-CN", AreaUnit.SquareInch, true, new string[]{"平方英寸"});
            yield return ("en-US", AreaUnit.SquareKilometer, true, new string[]{"km²"});
            yield return ("ru-RU", AreaUnit.SquareKilometer, true, new string[]{"км²"});
            yield return ("zh-CN", AreaUnit.SquareKilometer, true, new string[]{"平方公里"});
            yield return ("en-US", AreaUnit.SquareMeter, true, new string[]{"m²"});
            yield return ("ru-RU", AreaUnit.SquareMeter, true, new string[]{"м²"});
            yield return ("zh-CN", AreaUnit.SquareMeter, true, new string[]{"平方米"});
            yield return ("en-US", AreaUnit.SquareMicrometer, true, new string[]{"µm²"});
            yield return ("ru-RU", AreaUnit.SquareMicrometer, true, new string[]{"мкм²"});
            yield return ("zh-CN", AreaUnit.SquareMicrometer, true, new string[]{"平方微米"});
            yield return ("en-US", AreaUnit.SquareMile, true, new string[]{"mi²"});
            yield return ("ru-RU", AreaUnit.SquareMile, true, new string[]{"миля²"});
            yield return ("zh-CN", AreaUnit.SquareMile, true, new string[]{"平方英里"});
            yield return ("en-US", AreaUnit.SquareMillimeter, true, new string[]{"mm²"});
            yield return ("ru-RU", AreaUnit.SquareMillimeter, true, new string[]{"мм²"});
            yield return ("zh-CN", AreaUnit.SquareMillimeter, true, new string[]{"平方毫米"});
            yield return ("en-US", AreaUnit.SquareNauticalMile, true, new string[]{"nmi²"});
            yield return ("ru-RU", AreaUnit.SquareNauticalMile, true, new string[]{"морск.миля²"});
            yield return ("zh-CN", AreaUnit.SquareNauticalMile, true, new string[]{"平方海里"});
            yield return ("en-US", AreaUnit.SquareYard, true, new string[]{"yd²"});
            yield return ("ru-RU", AreaUnit.SquareYard, true, new string[]{"ярд²"});
            yield return ("zh-CN", AreaUnit.SquareYard, true, new string[]{"平方码"});
            yield return ("en-US", AreaUnit.UsSurveySquareFoot, true, new string[]{"ft² (US)"});
            yield return ("ru-RU", AreaUnit.UsSurveySquareFoot, true, new string[]{"фут² (US)"});
            yield return ("en-US", AreaDensityUnit.KilogramPerSquareMeter, true, new string[]{"kg/m²"});
            yield return ("en-US", AreaMomentOfInertiaUnit.CentimeterToTheFourth, true, new string[]{"cm⁴", "cm^4"});
            yield return ("en-US", AreaMomentOfInertiaUnit.DecimeterToTheFourth, true, new string[]{"dm⁴", "dm^4"});
            yield return ("en-US", AreaMomentOfInertiaUnit.FootToTheFourth, true, new string[]{"ft⁴", "ft^4"});
            yield return ("en-US", AreaMomentOfInertiaUnit.InchToTheFourth, true, new string[]{"in⁴", "in^4"});
            yield return ("en-US", AreaMomentOfInertiaUnit.MeterToTheFourth, true, new string[]{"m⁴", "m^4"});
            yield return ("en-US", AreaMomentOfInertiaUnit.MillimeterToTheFourth, true, new string[]{"mm⁴", "mm^4"});
            yield return ("en-US", BitRateUnit.BitPerSecond, true, new string[]{"bit/s", "bps"});
            yield return ("en-US", BitRateUnit.BytePerSecond, true, new string[]{"B/s"});
            yield return ("en-US", BitRateUnit.ExabitPerSecond, true, new string[]{"Ebit/s", "Ebps"});
            yield return ("en-US", BitRateUnit.ExabytePerSecond, true, new string[]{"EB/s"});
            yield return ("en-US", BitRateUnit.ExbibitPerSecond, true, new string[]{"Eibit/s", "Eibps"});
            yield return ("en-US", BitRateUnit.ExbibytePerSecond, true, new string[]{"EiB/s"});
            yield return ("en-US", BitRateUnit.GibibitPerSecond, true, new string[]{"Gibit/s", "Gibps"});
            yield return ("en-US", BitRateUnit.GibibytePerSecond, true, new string[]{"GiB/s"});
            yield return ("en-US", BitRateUnit.GigabitPerSecond, true, new string[]{"Gbit/s", "Gbps"});
            yield return ("en-US", BitRateUnit.GigabytePerSecond, true, new string[]{"GB/s"});
            yield return ("en-US", BitRateUnit.KibibitPerSecond, true, new string[]{"Kibit/s", "Kibps"});
            yield return ("en-US", BitRateUnit.KibibytePerSecond, true, new string[]{"KiB/s"});
            yield return ("en-US", BitRateUnit.KilobitPerSecond, true, new string[]{"kbit/s", "kbps"});
            yield return ("en-US", BitRateUnit.KilobytePerSecond, true, new string[]{"kB/s"});
            yield return ("en-US", BitRateUnit.MebibitPerSecond, true, new string[]{"Mibit/s", "Mibps"});
            yield return ("en-US", BitRateUnit.MebibytePerSecond, true, new string[]{"MiB/s"});
            yield return ("en-US", BitRateUnit.MegabitPerSecond, true, new string[]{"Mbit/s", "Mbps"});
            yield return ("en-US", BitRateUnit.MegabytePerSecond, true, new string[]{"MB/s"});
            yield return ("en-US", BitRateUnit.PebibitPerSecond, true, new string[]{"Pibit/s", "Pibps"});
            yield return ("en-US", BitRateUnit.PebibytePerSecond, true, new string[]{"PiB/s"});
            yield return ("en-US", BitRateUnit.PetabitPerSecond, true, new string[]{"Pbit/s", "Pbps"});
            yield return ("en-US", BitRateUnit.PetabytePerSecond, true, new string[]{"PB/s"});
            yield return ("en-US", BitRateUnit.TebibitPerSecond, true, new string[]{"Tibit/s", "Tibps"});
            yield return ("en-US", BitRateUnit.TebibytePerSecond, true, new string[]{"TiB/s"});
            yield return ("en-US", BitRateUnit.TerabitPerSecond, true, new string[]{"Tbit/s", "Tbps"});
            yield return ("en-US", BitRateUnit.TerabytePerSecond, true, new string[]{"TB/s"});
            yield return ("en-US", BrakeSpecificFuelConsumptionUnit.GramPerKiloWattHour, true, new string[]{"g/kWh"});
            yield return ("en-US", BrakeSpecificFuelConsumptionUnit.KilogramPerJoule, true, new string[]{"kg/J"});
            yield return ("en-US", BrakeSpecificFuelConsumptionUnit.PoundPerMechanicalHorsepowerHour, true, new string[]{"lb/hph"});
            yield return ("en-US", CapacitanceUnit.Farad, true, new string[]{"F"});
            yield return ("en-US", CapacitanceUnit.Kilofarad, true, new string[]{"kF"});
            yield return ("en-US", CapacitanceUnit.Megafarad, true, new string[]{"MF"});
            yield return ("en-US", CapacitanceUnit.Microfarad, true, new string[]{"µF"});
            yield return ("en-US", CapacitanceUnit.Millifarad, true, new string[]{"mF"});
            yield return ("en-US", CapacitanceUnit.Nanofarad, true, new string[]{"nF"});
            yield return ("en-US", CapacitanceUnit.Picofarad, true, new string[]{"pF"});
            yield return ("en-US", CoefficientOfThermalExpansionUnit.InverseDegreeCelsius, true, new string[]{"°C⁻¹", "1/°C"});
            yield return ("en-US", CoefficientOfThermalExpansionUnit.InverseDegreeFahrenheit, true, new string[]{"°F⁻¹", "1/°F"});
            yield return ("en-US", CoefficientOfThermalExpansionUnit.InverseKelvin, true, new string[]{"K⁻¹", "1/K"});
            yield return ("en-US", DensityUnit.CentigramPerDeciliter, true, new string[]{"cg/dl"});
            yield return ("en-US", DensityUnit.CentigramPerLiter, true, new string[]{"cg/L"});
            yield return ("en-US", DensityUnit.CentigramPerMilliliter, true, new string[]{"cg/ml"});
            yield return ("en-US", DensityUnit.DecigramPerDeciliter, true, new string[]{"dg/dl"});
            yield return ("en-US", DensityUnit.DecigramPerLiter, true, new string[]{"dg/L"});
            yield return ("en-US", DensityUnit.DecigramPerMilliliter, true, new string[]{"dg/ml"});
            yield return ("en-US", DensityUnit.GramPerCubicCentimeter, true, new string[]{"g/cm³"});
            yield return ("en-US", DensityUnit.GramPerCubicFoot, true, new string[]{"g/ft³"});
            yield return ("en-US", DensityUnit.GramPerCubicInch, true, new string[]{"g/in³"});
            yield return ("en-US", DensityUnit.GramPerCubicMeter, true, new string[]{"g/m³"});
            yield return ("ru-RU", DensityUnit.GramPerCubicMeter, true, new string[]{"г/м³"});
            yield return ("en-US", DensityUnit.GramPerCubicMillimeter, true, new string[]{"g/mm³"});
            yield return ("en-US", DensityUnit.GramPerDeciliter, true, new string[]{"g/dl"});
            yield return ("en-US", DensityUnit.GramPerLiter, true, new string[]{"g/L"});
            yield return ("en-US", DensityUnit.GramPerMilliliter, true, new string[]{"g/ml"});
            yield return ("en-US", DensityUnit.KilogramPerCubicCentimeter, true, new string[]{"kg/cm³"});
            yield return ("en-US", DensityUnit.KilogramPerCubicMeter, true, new string[]{"kg/m³"});
            yield return ("ru-RU", DensityUnit.KilogramPerCubicMeter, true, new string[]{"кг/м³"});
            yield return ("en-US", DensityUnit.KilogramPerCubicMillimeter, true, new string[]{"kg/mm³"});
            yield return ("en-US", DensityUnit.KilogramPerLiter, true, new string[]{"kg/l"});
            yield return ("en-US", DensityUnit.KilopoundPerCubicFoot, true, new string[]{"kip/ft³"});
            yield return ("en-US", DensityUnit.KilopoundPerCubicInch, true, new string[]{"kip/in³"});
            yield return ("en-US", DensityUnit.MicrogramPerCubicMeter, true, new string[]{"µg/m³"});
            yield return ("ru-RU", DensityUnit.MicrogramPerCubicMeter, true, new string[]{"мкг/м³"});
            yield return ("en-US", DensityUnit.MicrogramPerDeciliter, true, new string[]{"µg/dl"});
            yield return ("en-US", DensityUnit.MicrogramPerLiter, true, new string[]{"µg/L"});
            yield return ("en-US", DensityUnit.MicrogramPerMilliliter, true, new string[]{"µg/ml"});
            yield return ("en-US", DensityUnit.MilligramPerCubicMeter, true, new string[]{"mg/m³"});
            yield return ("ru-RU", DensityUnit.MilligramPerCubicMeter, true, new string[]{"мг/м³"});
            yield return ("en-US", DensityUnit.MilligramPerDeciliter, true, new string[]{"mg/dl"});
            yield return ("en-US", DensityUnit.MilligramPerLiter, true, new string[]{"mg/L"});
            yield return ("en-US", DensityUnit.MilligramPerMilliliter, true, new string[]{"mg/ml"});
            yield return ("en-US", DensityUnit.NanogramPerDeciliter, true, new string[]{"ng/dl"});
            yield return ("en-US", DensityUnit.NanogramPerLiter, true, new string[]{"ng/L"});
            yield return ("en-US", DensityUnit.NanogramPerMilliliter, true, new string[]{"ng/ml"});
            yield return ("en-US", DensityUnit.PicogramPerDeciliter, true, new string[]{"pg/dl"});
            yield return ("en-US", DensityUnit.PicogramPerLiter, true, new string[]{"pg/L"});
            yield return ("en-US", DensityUnit.PicogramPerMilliliter, true, new string[]{"pg/ml"});
            yield return ("en-US", DensityUnit.PoundPerCubicCentimeter, true, new string[]{"lb/cm³"});
            yield return ("en-US", DensityUnit.PoundPerCubicFoot, true, new string[]{"lb/ft³"});
            yield return ("en-US", DensityUnit.PoundPerCubicInch, true, new string[]{"lb/in³"});
            yield return ("en-US", DensityUnit.PoundPerCubicMeter, true, new string[]{"lb/m³"});
            yield return ("en-US", DensityUnit.PoundPerCubicMillimeter, true, new string[]{"lb/mm³"});
            yield return ("en-US", DensityUnit.PoundPerImperialGallon, true, new string[]{"ppg (imp.)"});
            yield return ("en-US", DensityUnit.PoundPerUSGallon, true, new string[]{"ppg (U.S.)"});
            yield return ("en-US", DensityUnit.SlugPerCubicCentimeter, true, new string[]{"slug/cm³"});
            yield return ("en-US", DensityUnit.SlugPerCubicFoot, true, new string[]{"slug/ft³"});
            yield return ("en-US", DensityUnit.SlugPerCubicInch, true, new string[]{"slug/in³"});
            yield return ("en-US", DensityUnit.SlugPerCubicMeter, true, new string[]{"slug/m³"});
            yield return ("en-US", DensityUnit.SlugPerCubicMillimeter, true, new string[]{"slug/mm³"});
            yield return ("en-US", DensityUnit.TonnePerCubicCentimeter, true, new string[]{"t/cm³"});
            yield return ("en-US", DensityUnit.TonnePerCubicFoot, true, new string[]{"t/ft³"});
            yield return ("en-US", DensityUnit.TonnePerCubicInch, true, new string[]{"t/in³"});
            yield return ("en-US", DensityUnit.TonnePerCubicMeter, true, new string[]{"t/m³"});
            yield return ("en-US", DensityUnit.TonnePerCubicMillimeter, true, new string[]{"t/mm³"});
            yield return ("en-US", DurationUnit.Day, true, new string[]{"d", "day", "days"});
            yield return ("ru-RU", DurationUnit.Day, true, new string[]{"сут", "д"});
            yield return ("en-US", DurationUnit.Hour, true, new string[]{"h", "hr", "hrs", "hour", "hours"});
            yield return ("ru-RU", DurationUnit.Hour, true, new string[]{"ч", "час"});
            yield return ("en-US", DurationUnit.JulianYear, true, new string[]{"jyr", "jyear", "jyears"});
            yield return ("en-US", DurationUnit.Microsecond, true, new string[]{"µs", "µsec", "µsecs", "µsecond", "µseconds"});
            yield return ("ru-RU", DurationUnit.Microsecond, true, new string[]{"мксек", "мкс"});
            yield return ("en-US", DurationUnit.Millisecond, true, new string[]{"ms", "msec", "msecs", "msecond", "mseconds"});
            yield return ("ru-RU", DurationUnit.Millisecond, true, new string[]{"мсек", "мс"});
            yield return ("en-US", DurationUnit.Minute, true, new string[]{"m", "min", "minute", "minutes"});
            yield return ("ru-RU", DurationUnit.Minute, true, new string[]{"мин"});
            yield return ("en-US", DurationUnit.Month30, true, new string[]{"mo", "month", "months"});
            yield return ("ru-RU", DurationUnit.Month30, true, new string[]{"месяц"});
            yield return ("en-US", DurationUnit.Nanosecond, true, new string[]{"ns", "nsec", "nsecs", "nsecond", "nseconds"});
            yield return ("ru-RU", DurationUnit.Nanosecond, true, new string[]{"нсек", "нс"});
            yield return ("en-US", DurationUnit.Second, true, new string[]{"s", "sec", "secs", "second", "seconds"});
            yield return ("ru-RU", DurationUnit.Second, true, new string[]{"сек", "с"});
            yield return ("en-US", DurationUnit.Week, true, new string[]{"wk", "week", "weeks"});
            yield return ("ru-RU", DurationUnit.Week, true, new string[]{"нед"});
            yield return ("en-US", DurationUnit.Year365, true, new string[]{"yr", "year", "years"});
            yield return ("ru-RU", DurationUnit.Year365, true, new string[]{"год"});
            yield return ("en-US", DynamicViscosityUnit.Centipoise, true, new string[]{"cP"});
            yield return ("en-US", DynamicViscosityUnit.MicropascalSecond, true, new string[]{"µPa·s", "µPaS"});
            yield return ("en-US", DynamicViscosityUnit.MillipascalSecond, true, new string[]{"mPa·s", "mPaS"});
            yield return ("en-US", DynamicViscosityUnit.NewtonSecondPerMeterSquared, true, new string[]{"Ns/m²"});
            yield return ("en-US", DynamicViscosityUnit.PascalSecond, true, new string[]{"Pa·s", "PaS"});
            yield return ("en-US", DynamicViscosityUnit.Poise, true, new string[]{"P"});
            yield return ("en-US", DynamicViscosityUnit.PoundForceSecondPerSquareFoot, true, new string[]{"lbf·s/ft²"});
            yield return ("en-US", DynamicViscosityUnit.PoundForceSecondPerSquareInch, true, new string[]{"lbf·s/in²"});
            yield return ("en-US", DynamicViscosityUnit.PoundPerFootSecond, true, new string[]{"lb/ft·s"});
            yield return ("en-US", DynamicViscosityUnit.Reyn, true, new string[]{"reyn"});
            yield return ("en-US", ElectricAdmittanceUnit.Microsiemens, true, new string[]{"µS"});
            yield return ("en-US", ElectricAdmittanceUnit.Millisiemens, true, new string[]{"mS"});
            yield return ("en-US", ElectricAdmittanceUnit.Nanosiemens, true, new string[]{"nS"});
            yield return ("en-US", ElectricAdmittanceUnit.Siemens, true, new string[]{"S"});
            yield return ("en-US", ElectricChargeUnit.AmpereHour, true, new string[]{"A-h", "Ah"});
            yield return ("en-US", ElectricChargeUnit.Coulomb, true, new string[]{"C"});
            yield return ("en-US", ElectricChargeUnit.KiloampereHour, true, new string[]{"kA-h", "kAh"});
            yield return ("en-US", ElectricChargeUnit.MegaampereHour, true, new string[]{"MA-h", "MAh"});
            yield return ("en-US", ElectricChargeUnit.MilliampereHour, true, new string[]{"mA-h", "mAh"});
            yield return ("en-US", ElectricChargeDensityUnit.CoulombPerCubicMeter, true, new string[]{"C/m³"});
            yield return ("en-US", ElectricConductanceUnit.Microsiemens, true, new string[]{"µS"});
            yield return ("en-US", ElectricConductanceUnit.Millisiemens, true, new string[]{"mS"});
            yield return ("en-US", ElectricConductanceUnit.Siemens, true, new string[]{"S"});
            yield return ("en-US", ElectricConductivityUnit.SiemensPerFoot, true, new string[]{"S/ft"});
            yield return ("en-US", ElectricConductivityUnit.SiemensPerInch, true, new string[]{"S/in"});
            yield return ("en-US", ElectricConductivityUnit.SiemensPerMeter, true, new string[]{"S/m"});
            yield return ("en-US", ElectricCurrentUnit.Ampere, true, new string[]{"A"});
            yield return ("en-US", ElectricCurrentUnit.Centiampere, true, new string[]{"cA"});
            yield return ("en-US", ElectricCurrentUnit.Kiloampere, true, new string[]{"kA"});
            yield return ("en-US", ElectricCurrentUnit.Megaampere, true, new string[]{"MA"});
            yield return ("en-US", ElectricCurrentUnit.Microampere, true, new string[]{"µA"});
            yield return ("en-US", ElectricCurrentUnit.Milliampere, true, new string[]{"mA"});
            yield return ("en-US", ElectricCurrentUnit.Nanoampere, true, new string[]{"nA"});
            yield return ("en-US", ElectricCurrentUnit.Picoampere, true, new string[]{"pA"});
            yield return ("en-US", ElectricCurrentDensityUnit.AmperePerSquareFoot, true, new string[]{"A/ft²"});
            yield return ("en-US", ElectricCurrentDensityUnit.AmperePerSquareInch, true, new string[]{"A/in²"});
            yield return ("en-US", ElectricCurrentDensityUnit.AmperePerSquareMeter, true, new string[]{"A/m²"});
            yield return ("en-US", ElectricCurrentGradientUnit.AmperePerMicrosecond, true, new string[]{"A/μs"});
            yield return ("en-US", ElectricCurrentGradientUnit.AmperePerMillisecond, true, new string[]{"A/ms"});
            yield return ("en-US", ElectricCurrentGradientUnit.AmperePerNanosecond, true, new string[]{"A/ns"});
            yield return ("en-US", ElectricCurrentGradientUnit.AmperePerSecond, true, new string[]{"A/s"});
            yield return ("en-US", ElectricFieldUnit.VoltPerMeter, true, new string[]{"V/m"});
            yield return ("en-US", ElectricInductanceUnit.Henry, true, new string[]{"H"});
            yield return ("en-US", ElectricInductanceUnit.Microhenry, true, new string[]{"µH"});
            yield return ("en-US", ElectricInductanceUnit.Millihenry, true, new string[]{"mH"});
            yield return ("en-US", ElectricInductanceUnit.Nanohenry, true, new string[]{"nH"});
            yield return ("en-US", ElectricPotentialUnit.Kilovolt, true, new string[]{"kV"});
            yield return ("ru-RU", ElectricPotentialUnit.Kilovolt, true, new string[]{"кВ"});
            yield return ("en-US", ElectricPotentialUnit.Megavolt, true, new string[]{"MV"});
            yield return ("ru-RU", ElectricPotentialUnit.Megavolt, true, new string[]{"МВ"});
            yield return ("en-US", ElectricPotentialUnit.Microvolt, true, new string[]{"µV"});
            yield return ("ru-RU", ElectricPotentialUnit.Microvolt, true, new string[]{"мкВ"});
            yield return ("en-US", ElectricPotentialUnit.Millivolt, true, new string[]{"mV"});
            yield return ("ru-RU", ElectricPotentialUnit.Millivolt, true, new string[]{"мВ"});
            yield return ("en-US", ElectricPotentialUnit.Volt, true, new string[]{"V"});
            yield return ("ru-RU", ElectricPotentialUnit.Volt, true, new string[]{"В"});
            yield return ("en-US", ElectricPotentialAcUnit.KilovoltAc, true, new string[]{"kVac"});
            yield return ("en-US", ElectricPotentialAcUnit.MegavoltAc, true, new string[]{"MVac"});
            yield return ("en-US", ElectricPotentialAcUnit.MicrovoltAc, true, new string[]{"µVac"});
            yield return ("en-US", ElectricPotentialAcUnit.MillivoltAc, true, new string[]{"mVac"});
            yield return ("en-US", ElectricPotentialAcUnit.VoltAc, true, new string[]{"Vac"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.KilovoltPerHour, true, new string[]{"kV/h"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.KilovoltPerMicrosecond, true, new string[]{"kV/μs"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.KilovoltPerMinute, true, new string[]{"kV/min"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.KilovoltPerSecond, true, new string[]{"kV/s"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MegavoltPerHour, true, new string[]{"MV/h"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MegavoltPerMicrosecond, true, new string[]{"MV/μs"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MegavoltPerMinute, true, new string[]{"MV/min"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MegavoltPerSecond, true, new string[]{"MV/s"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MicrovoltPerHour, true, new string[]{"µV/h"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MicrovoltPerMicrosecond, true, new string[]{"µV/μs"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MicrovoltPerMinute, true, new string[]{"µV/min"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MicrovoltPerSecond, true, new string[]{"µV/s"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MillivoltPerHour, true, new string[]{"mV/h"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MillivoltPerMicrosecond, true, new string[]{"mV/μs"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MillivoltPerMinute, true, new string[]{"mV/min"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.MillivoltPerSecond, true, new string[]{"mV/s"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.VoltPerHour, true, new string[]{"V/h"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.VoltPerMicrosecond, true, new string[]{"V/μs"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.VoltPerMinute, true, new string[]{"V/min"});
            yield return ("en-US", ElectricPotentialChangeRateUnit.VoltPerSecond, true, new string[]{"V/s"});
            yield return ("en-US", ElectricPotentialDcUnit.KilovoltDc, true, new string[]{"kVdc"});
            yield return ("en-US", ElectricPotentialDcUnit.MegavoltDc, true, new string[]{"MVdc"});
            yield return ("en-US", ElectricPotentialDcUnit.MicrovoltDc, true, new string[]{"µVdc"});
            yield return ("en-US", ElectricPotentialDcUnit.MillivoltDc, true, new string[]{"mVdc"});
            yield return ("en-US", ElectricPotentialDcUnit.VoltDc, true, new string[]{"Vdc"});
            yield return ("en-US", ElectricResistanceUnit.Gigaohm, true, new string[]{"GΩ"});
            yield return ("en-US", ElectricResistanceUnit.Kiloohm, true, new string[]{"kΩ"});
            yield return ("en-US", ElectricResistanceUnit.Megaohm, true, new string[]{"MΩ"});
            yield return ("en-US", ElectricResistanceUnit.Microohm, true, new string[]{"µΩ"});
            yield return ("en-US", ElectricResistanceUnit.Milliohm, true, new string[]{"mΩ"});
            yield return ("en-US", ElectricResistanceUnit.Ohm, true, new string[]{"Ω"});
            yield return ("en-US", ElectricResistivityUnit.KiloohmCentimeter, true, new string[]{"kΩ·cm"});
            yield return ("en-US", ElectricResistivityUnit.KiloohmMeter, true, new string[]{"kΩ·m"});
            yield return ("en-US", ElectricResistivityUnit.MegaohmCentimeter, true, new string[]{"MΩ·cm"});
            yield return ("en-US", ElectricResistivityUnit.MegaohmMeter, true, new string[]{"MΩ·m"});
            yield return ("en-US", ElectricResistivityUnit.MicroohmCentimeter, true, new string[]{"µΩ·cm"});
            yield return ("en-US", ElectricResistivityUnit.MicroohmMeter, true, new string[]{"µΩ·m"});
            yield return ("en-US", ElectricResistivityUnit.MilliohmCentimeter, true, new string[]{"mΩ·cm"});
            yield return ("en-US", ElectricResistivityUnit.MilliohmMeter, true, new string[]{"mΩ·m"});
            yield return ("en-US", ElectricResistivityUnit.NanoohmCentimeter, true, new string[]{"nΩ·cm"});
            yield return ("en-US", ElectricResistivityUnit.NanoohmMeter, true, new string[]{"nΩ·m"});
            yield return ("en-US", ElectricResistivityUnit.OhmCentimeter, true, new string[]{"Ω·cm"});
            yield return ("en-US", ElectricResistivityUnit.OhmMeter, true, new string[]{"Ω·m"});
            yield return ("en-US", ElectricResistivityUnit.PicoohmCentimeter, true, new string[]{"pΩ·cm"});
            yield return ("en-US", ElectricResistivityUnit.PicoohmMeter, true, new string[]{"pΩ·m"});
            yield return ("en-US", ElectricSurfaceChargeDensityUnit.CoulombPerSquareCentimeter, true, new string[]{"C/cm²"});
            yield return ("en-US", ElectricSurfaceChargeDensityUnit.CoulombPerSquareInch, true, new string[]{"C/in²"});
            yield return ("en-US", ElectricSurfaceChargeDensityUnit.CoulombPerSquareMeter, true, new string[]{"C/m²"});
            yield return ("en-US", EnergyUnit.BritishThermalUnit, true, new string[]{"BTU"});
            yield return ("en-US", EnergyUnit.Calorie, true, new string[]{"cal"});
            yield return ("en-US", EnergyUnit.DecathermEc, true, new string[]{"Dth (E.C.)"});
            yield return ("ru-RU", EnergyUnit.DecathermEc, true, new string[]{"Европейский декатерм"});
            yield return ("en-US", EnergyUnit.DecathermImperial, true, new string[]{"Dth (imp.)"});
            yield return ("ru-RU", EnergyUnit.DecathermImperial, true, new string[]{"Английский декатерм"});
            yield return ("en-US", EnergyUnit.DecathermUs, true, new string[]{"Dth (U.S.)"});
            yield return ("ru-RU", EnergyUnit.DecathermUs, true, new string[]{"Американский декатерм"});
            yield return ("en-US", EnergyUnit.ElectronVolt, true, new string[]{"eV"});
            yield return ("ru-RU", EnergyUnit.ElectronVolt, true, new string[]{"эВ"});
            yield return ("en-US", EnergyUnit.Erg, true, new string[]{"erg"});
            yield return ("en-US", EnergyUnit.FootPound, true, new string[]{"ft·lb"});
            yield return ("en-US", EnergyUnit.GigabritishThermalUnit, true, new string[]{"GBTU"});
            yield return ("en-US", EnergyUnit.GigaelectronVolt, true, new string[]{"GeV"});
            yield return ("ru-RU", EnergyUnit.GigaelectronVolt, true, new string[]{"ГэВ"});
            yield return ("en-US", EnergyUnit.Gigajoule, true, new string[]{"GJ"});
            yield return ("en-US", EnergyUnit.GigawattDay, true, new string[]{"GWd"});
            yield return ("ru-RU", EnergyUnit.GigawattDay, true, new string[]{"ГВт/д"});
            yield return ("en-US", EnergyUnit.GigawattHour, true, new string[]{"GWh"});
            yield return ("ru-RU", EnergyUnit.GigawattHour, true, new string[]{"ГВт/ч"});
            yield return ("en-US", EnergyUnit.HorsepowerHour, true, new string[]{"hp·h"});
            yield return ("en-US", EnergyUnit.Joule, true, new string[]{"J"});
            yield return ("en-US", EnergyUnit.KilobritishThermalUnit, true, new string[]{"kBTU"});
            yield return ("en-US", EnergyUnit.Kilocalorie, true, new string[]{"kcal"});
            yield return ("en-US", EnergyUnit.KiloelectronVolt, true, new string[]{"keV"});
            yield return ("ru-RU", EnergyUnit.KiloelectronVolt, true, new string[]{"кэВ"});
            yield return ("en-US", EnergyUnit.Kilojoule, true, new string[]{"kJ"});
            yield return ("en-US", EnergyUnit.KilowattDay, true, new string[]{"kWd"});
            yield return ("ru-RU", EnergyUnit.KilowattDay, true, new string[]{"кВт/д"});
            yield return ("en-US", EnergyUnit.KilowattHour, true, new string[]{"kWh"});
            yield return ("ru-RU", EnergyUnit.KilowattHour, true, new string[]{"кВт/ч"});
            yield return ("en-US", EnergyUnit.MegabritishThermalUnit, true, new string[]{"MBTU"});
            yield return ("en-US", EnergyUnit.Megacalorie, true, new string[]{"Mcal"});
            yield return ("en-US", EnergyUnit.MegaelectronVolt, true, new string[]{"MeV"});
            yield return ("ru-RU", EnergyUnit.MegaelectronVolt, true, new string[]{"МэВ"});
            yield return ("en-US", EnergyUnit.Megajoule, true, new string[]{"MJ"});
            yield return ("en-US", EnergyUnit.MegawattDay, true, new string[]{"MWd"});
            yield return ("ru-RU", EnergyUnit.MegawattDay, true, new string[]{"МВт/д"});
            yield return ("en-US", EnergyUnit.MegawattHour, true, new string[]{"MWh"});
            yield return ("ru-RU", EnergyUnit.MegawattHour, true, new string[]{"МВт/ч"});
            yield return ("en-US", EnergyUnit.Millijoule, true, new string[]{"mJ"});
            yield return ("en-US", EnergyUnit.TeraelectronVolt, true, new string[]{"TeV"});
            yield return ("ru-RU", EnergyUnit.TeraelectronVolt, true, new string[]{"ТэВ"});
            yield return ("en-US", EnergyUnit.TerawattDay, true, new string[]{"TWd"});
            yield return ("ru-RU", EnergyUnit.TerawattDay, true, new string[]{"ТВт/д"});
            yield return ("en-US", EnergyUnit.TerawattHour, true, new string[]{"TWh"});
            yield return ("ru-RU", EnergyUnit.TerawattHour, true, new string[]{"ТВт/ч"});
            yield return ("en-US", EnergyUnit.ThermEc, true, new string[]{"th (E.C.)"});
            yield return ("ru-RU", EnergyUnit.ThermEc, true, new string[]{"Европейский терм"});
            yield return ("en-US", EnergyUnit.ThermImperial, true, new string[]{"th (imp.)"});
            yield return ("ru-RU", EnergyUnit.ThermImperial, true, new string[]{"Английский терм"});
            yield return ("en-US", EnergyUnit.ThermUs, true, new string[]{"th (U.S.)"});
            yield return ("ru-RU", EnergyUnit.ThermUs, true, new string[]{"Американский терм"});
            yield return ("en-US", EnergyUnit.WattDay, true, new string[]{"Wd"});
            yield return ("ru-RU", EnergyUnit.WattDay, true, new string[]{"Вт/д"});
            yield return ("en-US", EnergyUnit.WattHour, true, new string[]{"Wh"});
            yield return ("ru-RU", EnergyUnit.WattHour, true, new string[]{"Вт/ч"});
            yield return ("en-US", EntropyUnit.CaloriePerKelvin, true, new string[]{"cal/K"});
            yield return ("en-US", EntropyUnit.JoulePerDegreeCelsius, true, new string[]{"J/C"});
            yield return ("en-US", EntropyUnit.JoulePerKelvin, true, new string[]{"J/K"});
            yield return ("en-US", EntropyUnit.KilocaloriePerKelvin, true, new string[]{"kcal/K"});
            yield return ("en-US", EntropyUnit.KilojoulePerDegreeCelsius, true, new string[]{"kJ/C"});
            yield return ("en-US", EntropyUnit.KilojoulePerKelvin, true, new string[]{"kJ/K"});
            yield return ("en-US", EntropyUnit.MegajoulePerKelvin, true, new string[]{"MJ/K"});
            yield return ("en-US", ForceUnit.Decanewton, true, new string[]{"daN"});
            yield return ("ru-RU", ForceUnit.Decanewton, true, new string[]{"даН"});
            yield return ("en-US", ForceUnit.Dyn, true, new string[]{"dyn"});
            yield return ("ru-RU", ForceUnit.Dyn, true, new string[]{"дин"});
            yield return ("en-US", ForceUnit.KilogramForce, true, new string[]{"kgf"});
            yield return ("ru-RU", ForceUnit.KilogramForce, true, new string[]{"кгс"});
            yield return ("en-US", ForceUnit.Kilonewton, true, new string[]{"kN"});
            yield return ("ru-RU", ForceUnit.Kilonewton, true, new string[]{"кН"});
            yield return ("en-US", ForceUnit.KiloPond, true, new string[]{"kp"});
            yield return ("ru-RU", ForceUnit.KiloPond, true, new string[]{"кгс"});
            yield return ("en-US", ForceUnit.KilopoundForce, true, new string[]{"kipf", "kip", "k"});
            yield return ("ru-RU", ForceUnit.KilopoundForce, true, new string[]{"кипф", "койка", "К"});
            yield return ("en-US", ForceUnit.Meganewton, true, new string[]{"MN"});
            yield return ("ru-RU", ForceUnit.Meganewton, true, new string[]{"МН"});
            yield return ("en-US", ForceUnit.Micronewton, true, new string[]{"µN"});
            yield return ("ru-RU", ForceUnit.Micronewton, true, new string[]{"мкН"});
            yield return ("en-US", ForceUnit.Millinewton, true, new string[]{"mN"});
            yield return ("ru-RU", ForceUnit.Millinewton, true, new string[]{"мН"});
            yield return ("en-US", ForceUnit.Newton, true, new string[]{"N"});
            yield return ("ru-RU", ForceUnit.Newton, true, new string[]{"Н"});
            yield return ("en-US", ForceUnit.OunceForce, true, new string[]{"ozf"});
            yield return ("en-US", ForceUnit.Poundal, true, new string[]{"pdl"});
            yield return ("ru-RU", ForceUnit.Poundal, true, new string[]{"паундаль"});
            yield return ("en-US", ForceUnit.PoundForce, true, new string[]{"lbf"});
            yield return ("ru-RU", ForceUnit.PoundForce, true, new string[]{"фунт-сила"});
            yield return ("en-US", ForceUnit.ShortTonForce, true, new string[]{"tf (short)", "t (US)f", "short tons-force"});
            yield return ("en-US", ForceUnit.TonneForce, true, new string[]{"tf", "Ton"});
            yield return ("ru-RU", ForceUnit.TonneForce, true, new string[]{"тс"});
            yield return ("en-US", ForceChangeRateUnit.CentinewtonPerSecond, true, new string[]{"cN/s"});
            yield return ("en-US", ForceChangeRateUnit.DecanewtonPerMinute, true, new string[]{"daN/min"});
            yield return ("en-US", ForceChangeRateUnit.DecanewtonPerSecond, true, new string[]{"daN/s"});
            yield return ("en-US", ForceChangeRateUnit.DecinewtonPerSecond, true, new string[]{"dN/s"});
            yield return ("en-US", ForceChangeRateUnit.KilonewtonPerMinute, true, new string[]{"kN/min"});
            yield return ("en-US", ForceChangeRateUnit.KilonewtonPerSecond, true, new string[]{"kN/s"});
            yield return ("en-US", ForceChangeRateUnit.KilopoundForcePerMinute, true, new string[]{"kipf/min", "kip/min", "k/min"});
            yield return ("en-US", ForceChangeRateUnit.KilopoundForcePerSecond, true, new string[]{"kipf/s", "kip/s", "k/s"});
            yield return ("en-US", ForceChangeRateUnit.MicronewtonPerSecond, true, new string[]{"µN/s"});
            yield return ("en-US", ForceChangeRateUnit.MillinewtonPerSecond, true, new string[]{"mN/s"});
            yield return ("en-US", ForceChangeRateUnit.NanonewtonPerSecond, true, new string[]{"nN/s"});
            yield return ("en-US", ForceChangeRateUnit.NewtonPerMinute, true, new string[]{"N/min"});
            yield return ("en-US", ForceChangeRateUnit.NewtonPerSecond, true, new string[]{"N/s"});
            yield return ("en-US", ForceChangeRateUnit.PoundForcePerMinute, true, new string[]{"lbf/min"});
            yield return ("en-US", ForceChangeRateUnit.PoundForcePerSecond, true, new string[]{"lbf/s"});
            yield return ("en-US", ForcePerLengthUnit.CentinewtonPerCentimeter, true, new string[]{"cN/cm"});
            yield return ("en-US", ForcePerLengthUnit.CentinewtonPerMeter, true, new string[]{"cN/m"});
            yield return ("en-US", ForcePerLengthUnit.CentinewtonPerMillimeter, true, new string[]{"cN/mm"});
            yield return ("en-US", ForcePerLengthUnit.DecanewtonPerCentimeter, true, new string[]{"daN/cm"});
            yield return ("en-US", ForcePerLengthUnit.DecanewtonPerMeter, true, new string[]{"daN/m"});
            yield return ("en-US", ForcePerLengthUnit.DecanewtonPerMillimeter, true, new string[]{"daN/mm"});
            yield return ("en-US", ForcePerLengthUnit.DecinewtonPerCentimeter, true, new string[]{"dN/cm"});
            yield return ("en-US", ForcePerLengthUnit.DecinewtonPerMeter, true, new string[]{"dN/m"});
            yield return ("en-US", ForcePerLengthUnit.DecinewtonPerMillimeter, true, new string[]{"dN/mm"});
            yield return ("en-US", ForcePerLengthUnit.KilogramForcePerCentimeter, true, new string[]{"kgf/cm"});
            yield return ("ru-RU", ForcePerLengthUnit.KilogramForcePerCentimeter, true, new string[]{"кгс/см"});
            yield return ("en-US", ForcePerLengthUnit.KilogramForcePerMeter, true, new string[]{"kgf/m"});
            yield return ("ru-RU", ForcePerLengthUnit.KilogramForcePerMeter, true, new string[]{"кгс/м"});
            yield return ("en-US", ForcePerLengthUnit.KilogramForcePerMillimeter, true, new string[]{"kgf/mm"});
            yield return ("ru-RU", ForcePerLengthUnit.KilogramForcePerMillimeter, true, new string[]{"кгс/мм"});
            yield return ("en-US", ForcePerLengthUnit.KilonewtonPerCentimeter, true, new string[]{"kN/cm"});
            yield return ("en-US", ForcePerLengthUnit.KilonewtonPerMeter, true, new string[]{"kN/m"});
            yield return ("en-US", ForcePerLengthUnit.KilonewtonPerMillimeter, true, new string[]{"kN/mm"});
            yield return ("en-US", ForcePerLengthUnit.KilopoundForcePerFoot, true, new string[]{"kipf/ft", "kip/ft", "k/ft"});
            yield return ("en-US", ForcePerLengthUnit.KilopoundForcePerInch, true, new string[]{"kipf/in", "kip/in", "k/in"});
            yield return ("en-US", ForcePerLengthUnit.MeganewtonPerCentimeter, true, new string[]{"MN/cm"});
            yield return ("en-US", ForcePerLengthUnit.MeganewtonPerMeter, true, new string[]{"MN/m"});
            yield return ("en-US", ForcePerLengthUnit.MeganewtonPerMillimeter, true, new string[]{"MN/mm"});
            yield return ("en-US", ForcePerLengthUnit.MicronewtonPerCentimeter, true, new string[]{"µN/cm"});
            yield return ("en-US", ForcePerLengthUnit.MicronewtonPerMeter, true, new string[]{"µN/m"});
            yield return ("en-US", ForcePerLengthUnit.MicronewtonPerMillimeter, true, new string[]{"µN/mm"});
            yield return ("en-US", ForcePerLengthUnit.MillinewtonPerCentimeter, true, new string[]{"mN/cm"});
            yield return ("en-US", ForcePerLengthUnit.MillinewtonPerMeter, true, new string[]{"mN/m"});
            yield return ("en-US", ForcePerLengthUnit.MillinewtonPerMillimeter, true, new string[]{"mN/mm"});
            yield return ("en-US", ForcePerLengthUnit.NanonewtonPerCentimeter, true, new string[]{"nN/cm"});
            yield return ("en-US", ForcePerLengthUnit.NanonewtonPerMeter, true, new string[]{"nN/m"});
            yield return ("en-US", ForcePerLengthUnit.NanonewtonPerMillimeter, true, new string[]{"nN/mm"});
            yield return ("en-US", ForcePerLengthUnit.NewtonPerCentimeter, true, new string[]{"N/cm"});
            yield return ("en-US", ForcePerLengthUnit.NewtonPerMeter, true, new string[]{"N/m"});
            yield return ("en-US", ForcePerLengthUnit.NewtonPerMillimeter, true, new string[]{"N/mm"});
            yield return ("en-US", ForcePerLengthUnit.PoundForcePerFoot, true, new string[]{"lbf/ft"});
            yield return ("en-US", ForcePerLengthUnit.PoundForcePerInch, true, new string[]{"lbf/in"});
            yield return ("en-US", ForcePerLengthUnit.PoundForcePerYard, true, new string[]{"lbf/yd"});
            yield return ("en-US", ForcePerLengthUnit.TonneForcePerCentimeter, true, new string[]{"tf/cm"});
            yield return ("ru-RU", ForcePerLengthUnit.TonneForcePerCentimeter, true, new string[]{"тс/см"});
            yield return ("en-US", ForcePerLengthUnit.TonneForcePerMeter, true, new string[]{"tf/m"});
            yield return ("ru-RU", ForcePerLengthUnit.TonneForcePerMeter, true, new string[]{"тс/м"});
            yield return ("en-US", ForcePerLengthUnit.TonneForcePerMillimeter, true, new string[]{"tf/mm"});
            yield return ("ru-RU", ForcePerLengthUnit.TonneForcePerMillimeter, true, new string[]{"тс/мм"});
            yield return ("en-US", FrequencyUnit.BeatPerMinute, true, new string[]{"bpm"});
            yield return ("en-US", FrequencyUnit.BUnit, true, new string[]{"B Units"});
            yield return ("en-US", FrequencyUnit.CyclePerHour, true, new string[]{"cph"});
            yield return ("en-US", FrequencyUnit.CyclePerMinute, true, new string[]{"cpm"});
            yield return ("en-US", FrequencyUnit.Gigahertz, true, new string[]{"GHz"});
            yield return ("ru-RU", FrequencyUnit.Gigahertz, true, new string[]{"ГГц"});
            yield return ("en-US", FrequencyUnit.Hertz, true, new string[]{"Hz"});
            yield return ("ru-RU", FrequencyUnit.Hertz, true, new string[]{"Гц"});
            yield return ("en-US", FrequencyUnit.Kilohertz, true, new string[]{"kHz"});
            yield return ("ru-RU", FrequencyUnit.Kilohertz, true, new string[]{"кГц"});
            yield return ("en-US", FrequencyUnit.Megahertz, true, new string[]{"MHz"});
            yield return ("ru-RU", FrequencyUnit.Megahertz, true, new string[]{"МГц"});
            yield return ("en-US", FrequencyUnit.PerSecond, true, new string[]{"s⁻¹"});
            yield return ("ru-RU", FrequencyUnit.PerSecond, true, new string[]{"с⁻¹"});
            yield return ("en-US", FrequencyUnit.RadianPerSecond, true, new string[]{"rad/s"});
            yield return ("ru-RU", FrequencyUnit.RadianPerSecond, true, new string[]{"рад/с"});
            yield return ("en-US", FrequencyUnit.Terahertz, true, new string[]{"THz"});
            yield return ("ru-RU", FrequencyUnit.Terahertz, true, new string[]{"ТГц"});
            yield return ("en-US", FuelEfficiencyUnit.KilometerPerLiter, true, new string[]{"km/L"});
            yield return ("en-US", FuelEfficiencyUnit.LiterPer100Kilometers, true, new string[]{"L/100km"});
            yield return ("en-US", FuelEfficiencyUnit.MilePerUkGallon, true, new string[]{"mpg (imp.)"});
            yield return ("en-US", FuelEfficiencyUnit.MilePerUsGallon, true, new string[]{"mpg (U.S.)"});
            yield return ("en-US", HeatFluxUnit.BtuPerHourSquareFoot, true, new string[]{"BTU/h·ft²"});
            yield return ("en-US", HeatFluxUnit.BtuPerMinuteSquareFoot, true, new string[]{"BTU/min·ft²"});
            yield return ("en-US", HeatFluxUnit.BtuPerSecondSquareFoot, true, new string[]{"BTU/s·ft²"});
            yield return ("en-US", HeatFluxUnit.BtuPerSecondSquareInch, true, new string[]{"BTU/s·in²"});
            yield return ("en-US", HeatFluxUnit.CaloriePerSecondSquareCentimeter, true, new string[]{"cal/s·cm²"});
            yield return ("en-US", HeatFluxUnit.CentiwattPerSquareMeter, true, new string[]{"cW/m²"});
            yield return ("en-US", HeatFluxUnit.DeciwattPerSquareMeter, true, new string[]{"dW/m²"});
            yield return ("en-US", HeatFluxUnit.KilocaloriePerHourSquareMeter, true, new string[]{"kcal/h·m²"});
            yield return ("en-US", HeatFluxUnit.KilocaloriePerSecondSquareCentimeter, true, new string[]{"kcal/s·cm²"});
            yield return ("en-US", HeatFluxUnit.KilowattPerSquareMeter, true, new string[]{"kW/m²"});
            yield return ("en-US", HeatFluxUnit.MicrowattPerSquareMeter, true, new string[]{"µW/m²"});
            yield return ("en-US", HeatFluxUnit.MilliwattPerSquareMeter, true, new string[]{"mW/m²"});
            yield return ("en-US", HeatFluxUnit.NanowattPerSquareMeter, true, new string[]{"nW/m²"});
            yield return ("en-US", HeatFluxUnit.PoundForcePerFootSecond, true, new string[]{"lbf/(ft·s)"});
            yield return ("en-US", HeatFluxUnit.PoundPerSecondCubed, true, new string[]{"lb/s³", "lbm/s³"});
            yield return ("en-US", HeatFluxUnit.WattPerSquareFoot, true, new string[]{"W/ft²"});
            yield return ("en-US", HeatFluxUnit.WattPerSquareInch, true, new string[]{"W/in²"});
            yield return ("en-US", HeatFluxUnit.WattPerSquareMeter, true, new string[]{"W/m²"});
            yield return ("en-US", HeatTransferCoefficientUnit.BtuPerSquareFootDegreeFahrenheit, true, new string[]{"Btu/ft²·hr·°F"});
            yield return ("en-US", HeatTransferCoefficientUnit.WattPerSquareMeterCelsius, true, new string[]{"W/m²·°C"});
            yield return ("en-US", HeatTransferCoefficientUnit.WattPerSquareMeterKelvin, true, new string[]{"W/m²·K"});
            yield return ("en-US", IlluminanceUnit.Kilolux, true, new string[]{"klx"});
            yield return ("en-US", IlluminanceUnit.Lux, true, new string[]{"lx"});
            yield return ("en-US", IlluminanceUnit.Megalux, true, new string[]{"Mlx"});
            yield return ("en-US", IlluminanceUnit.Millilux, true, new string[]{"mlx"});
            yield return ("en-US", InformationUnit.Bit, true, new string[]{"b"});
            yield return ("en-US", InformationUnit.Byte, true, new string[]{"B"});
            yield return ("en-US", InformationUnit.Exabit, true, new string[]{"Eb"});
            yield return ("en-US", InformationUnit.Exabyte, true, new string[]{"EB"});
            yield return ("en-US", InformationUnit.Exbibit, true, new string[]{"Eib"});
            yield return ("en-US", InformationUnit.Exbibyte, true, new string[]{"EiB"});
            yield return ("en-US", InformationUnit.Gibibit, true, new string[]{"Gib"});
            yield return ("en-US", InformationUnit.Gibibyte, true, new string[]{"GiB"});
            yield return ("en-US", InformationUnit.Gigabit, true, new string[]{"Gb"});
            yield return ("en-US", InformationUnit.Gigabyte, true, new string[]{"GB"});
            yield return ("en-US", InformationUnit.Kibibit, true, new string[]{"Kib"});
            yield return ("en-US", InformationUnit.Kibibyte, true, new string[]{"KiB"});
            yield return ("en-US", InformationUnit.Kilobit, true, new string[]{"kb"});
            yield return ("en-US", InformationUnit.Kilobyte, true, new string[]{"kB"});
            yield return ("en-US", InformationUnit.Mebibit, true, new string[]{"Mib"});
            yield return ("en-US", InformationUnit.Mebibyte, true, new string[]{"MiB"});
            yield return ("en-US", InformationUnit.Megabit, true, new string[]{"Mb"});
            yield return ("en-US", InformationUnit.Megabyte, true, new string[]{"MB"});
            yield return ("en-US", InformationUnit.Pebibit, true, new string[]{"Pib"});
            yield return ("en-US", InformationUnit.Pebibyte, true, new string[]{"PiB"});
            yield return ("en-US", InformationUnit.Petabit, true, new string[]{"Pb"});
            yield return ("en-US", InformationUnit.Petabyte, true, new string[]{"PB"});
            yield return ("en-US", InformationUnit.Tebibit, true, new string[]{"Tib"});
            yield return ("en-US", InformationUnit.Tebibyte, true, new string[]{"TiB"});
            yield return ("en-US", InformationUnit.Terabit, true, new string[]{"Tb"});
            yield return ("en-US", InformationUnit.Terabyte, true, new string[]{"TB"});
            yield return ("en-US", IrradianceUnit.KilowattPerSquareCentimeter, true, new string[]{"kW/cm²"});
            yield return ("en-US", IrradianceUnit.KilowattPerSquareMeter, true, new string[]{"kW/m²"});
            yield return ("en-US", IrradianceUnit.MegawattPerSquareCentimeter, true, new string[]{"MW/cm²"});
            yield return ("en-US", IrradianceUnit.MegawattPerSquareMeter, true, new string[]{"MW/m²"});
            yield return ("en-US", IrradianceUnit.MicrowattPerSquareCentimeter, true, new string[]{"µW/cm²"});
            yield return ("en-US", IrradianceUnit.MicrowattPerSquareMeter, true, new string[]{"µW/m²"});
            yield return ("en-US", IrradianceUnit.MilliwattPerSquareCentimeter, true, new string[]{"mW/cm²"});
            yield return ("en-US", IrradianceUnit.MilliwattPerSquareMeter, true, new string[]{"mW/m²"});
            yield return ("en-US", IrradianceUnit.NanowattPerSquareCentimeter, true, new string[]{"nW/cm²"});
            yield return ("en-US", IrradianceUnit.NanowattPerSquareMeter, true, new string[]{"nW/m²"});
            yield return ("en-US", IrradianceUnit.PicowattPerSquareCentimeter, true, new string[]{"pW/cm²"});
            yield return ("en-US", IrradianceUnit.PicowattPerSquareMeter, true, new string[]{"pW/m²"});
            yield return ("en-US", IrradianceUnit.WattPerSquareCentimeter, true, new string[]{"W/cm²"});
            yield return ("en-US", IrradianceUnit.WattPerSquareMeter, true, new string[]{"W/m²"});
            yield return ("en-US", IrradiationUnit.JoulePerSquareCentimeter, true, new string[]{"J/cm²"});
            yield return ("en-US", IrradiationUnit.JoulePerSquareMeter, true, new string[]{"J/m²"});
            yield return ("en-US", IrradiationUnit.JoulePerSquareMillimeter, true, new string[]{"J/mm²"});
            yield return ("en-US", IrradiationUnit.KilojoulePerSquareMeter, true, new string[]{"kJ/m²"});
            yield return ("en-US", IrradiationUnit.KilowattHourPerSquareMeter, true, new string[]{"kWh/m²"});
            yield return ("en-US", IrradiationUnit.MillijoulePerSquareCentimeter, true, new string[]{"mJ/cm²"});
            yield return ("en-US", IrradiationUnit.WattHourPerSquareMeter, true, new string[]{"Wh/m²"});
            yield return ("en-US", KinematicViscosityUnit.Centistokes, true, new string[]{"cSt"});
            yield return ("ru-RU", KinematicViscosityUnit.Centistokes, true, new string[]{"сСт"});
            yield return ("en-US", KinematicViscosityUnit.Decistokes, true, new string[]{"dSt"});
            yield return ("ru-RU", KinematicViscosityUnit.Decistokes, true, new string[]{"дСт"});
            yield return ("en-US", KinematicViscosityUnit.Kilostokes, true, new string[]{"kSt"});
            yield return ("ru-RU", KinematicViscosityUnit.Kilostokes, true, new string[]{"кСт"});
            yield return ("en-US", KinematicViscosityUnit.Microstokes, true, new string[]{"µSt"});
            yield return ("ru-RU", KinematicViscosityUnit.Microstokes, true, new string[]{"мкСт"});
            yield return ("en-US", KinematicViscosityUnit.Millistokes, true, new string[]{"mSt"});
            yield return ("ru-RU", KinematicViscosityUnit.Millistokes, true, new string[]{"мСт"});
            yield return ("en-US", KinematicViscosityUnit.Nanostokes, true, new string[]{"nSt"});
            yield return ("ru-RU", KinematicViscosityUnit.Nanostokes, true, new string[]{"нСт"});
            yield return ("en-US", KinematicViscosityUnit.SquareFootPerSecond, true, new string[]{"ft²/s"});
            yield return ("en-US", KinematicViscosityUnit.SquareMeterPerSecond, true, new string[]{"m²/s"});
            yield return ("ru-RU", KinematicViscosityUnit.SquareMeterPerSecond, true, new string[]{"м²/с"});
            yield return ("en-US", KinematicViscosityUnit.Stokes, true, new string[]{"St"});
            yield return ("ru-RU", KinematicViscosityUnit.Stokes, true, new string[]{"Ст"});
            yield return ("en-US", LapseRateUnit.DegreeCelsiusPerKilometer, true, new string[]{"∆°C/km"});
            yield return ("en-US", LengthUnit.AstronomicalUnit, true, new string[]{"au", "ua"});
            yield return ("en-US", LengthUnit.Centimeter, true, new string[]{"cm"});
            yield return ("ru-RU", LengthUnit.Centimeter, true, new string[]{"см"});
            yield return ("zh-CN", LengthUnit.Centimeter, true, new string[]{"厘米"});
            yield return ("en-US", LengthUnit.Chain, true, new string[]{"ch"});
            yield return ("en-US", LengthUnit.Decimeter, true, new string[]{"dm"});
            yield return ("ru-RU", LengthUnit.Decimeter, true, new string[]{"дм"});
            yield return ("zh-CN", LengthUnit.Decimeter, true, new string[]{"分米"});
            yield return ("en-US", LengthUnit.DtpPica, true, new string[]{"pica"});
            yield return ("en-US", LengthUnit.DtpPoint, true, new string[]{"pt"});
            yield return ("en-US", LengthUnit.Fathom, true, new string[]{"fathom"});
            yield return ("en-US", LengthUnit.Foot, true, new string[]{"ft", "'", "′"});
            yield return ("ru-RU", LengthUnit.Foot, true, new string[]{"фут"});
            yield return ("zh-CN", LengthUnit.Foot, true, new string[]{"英尺"});
            yield return ("en-US", LengthUnit.Hand, true, new string[]{"h", "hh"});
            yield return ("en-US", LengthUnit.Hectometer, true, new string[]{"hm"});
            yield return ("ru-RU", LengthUnit.Hectometer, true, new string[]{"гм"});
            yield return ("zh-CN", LengthUnit.Hectometer, true, new string[]{"百米"});
            yield return ("en-US", LengthUnit.Inch, true, new string[]{"in", "\"", "″"});
            yield return ("ru-RU", LengthUnit.Inch, true, new string[]{"дюйм"});
            yield return ("zh-CN", LengthUnit.Inch, true, new string[]{"英寸"});
            yield return ("en-US", LengthUnit.KilolightYear, true, new string[]{"kly"});
            yield return ("en-US", LengthUnit.Kilometer, true, new string[]{"km"});
            yield return ("ru-RU", LengthUnit.Kilometer, true, new string[]{"км"});
            yield return ("zh-CN", LengthUnit.Kilometer, true, new string[]{"千米"});
            yield return ("en-US", LengthUnit.Kiloparsec, true, new string[]{"kpc"});
            yield return ("en-US", LengthUnit.LightYear, true, new string[]{"ly"});
            yield return ("en-US", LengthUnit.MegalightYear, true, new string[]{"Mly"});
            yield return ("en-US", LengthUnit.Megaparsec, true, new string[]{"Mpc"});
            yield return ("en-US", LengthUnit.Meter, true, new string[]{"m"});
            yield return ("ru-RU", LengthUnit.Meter, true, new string[]{"м"});
            yield return ("zh-CN", LengthUnit.Meter, true, new string[]{"米"});
            yield return ("en-US", LengthUnit.Microinch, true, new string[]{"µin"});
            yield return ("ru-RU", LengthUnit.Microinch, true, new string[]{"микродюйм"});
            yield return ("zh-CN", LengthUnit.Microinch, true, new string[]{"微英寸"});
            yield return ("en-US", LengthUnit.Micrometer, true, new string[]{"µm"});
            yield return ("ru-RU", LengthUnit.Micrometer, true, new string[]{"мкм"});
            yield return ("zh-CN", LengthUnit.Micrometer, true, new string[]{"微米"});
            yield return ("en-US", LengthUnit.Mil, true, new string[]{"mil"});
            yield return ("ru-RU", LengthUnit.Mil, true, new string[]{"мил"});
            yield return ("zh-CN", LengthUnit.Mil, true, new string[]{"密耳"});
            yield return ("en-US", LengthUnit.Mile, true, new string[]{"mi"});
            yield return ("ru-RU", LengthUnit.Mile, true, new string[]{"миля"});
            yield return ("zh-CN", LengthUnit.Mile, true, new string[]{"英里"});
            yield return ("en-US", LengthUnit.Millimeter, true, new string[]{"mm"});
            yield return ("ru-RU", LengthUnit.Millimeter, true, new string[]{"мм"});
            yield return ("zh-CN", LengthUnit.Millimeter, true, new string[]{"毫米"});
            yield return ("en-US", LengthUnit.Nanometer, true, new string[]{"nm"});
            yield return ("ru-RU", LengthUnit.Nanometer, true, new string[]{"нм"});
            yield return ("zh-CN", LengthUnit.Nanometer, true, new string[]{"纳米"});
            yield return ("en-US", LengthUnit.NauticalMile, true, new string[]{"NM"});
            yield return ("ru-RU", LengthUnit.NauticalMile, true, new string[]{"мил"});
            yield return ("zh-CN", LengthUnit.NauticalMile, true, new string[]{"纳米"});
            yield return ("en-US", LengthUnit.Parsec, true, new string[]{"pc"});
            yield return ("en-US", LengthUnit.PrinterPica, true, new string[]{"pica"});
            yield return ("en-US", LengthUnit.PrinterPoint, true, new string[]{"pt"});
            yield return ("en-US", LengthUnit.Shackle, true, new string[]{"shackle"});
            yield return ("en-US", LengthUnit.SolarRadius, true, new string[]{"R⊙"});
            yield return ("en-US", LengthUnit.Twip, true, new string[]{"twip"});
            yield return ("en-US", LengthUnit.UsSurveyFoot, true, new string[]{"ftUS"});
            yield return ("en-US", LengthUnit.Yard, true, new string[]{"yd"});
            yield return ("ru-RU", LengthUnit.Yard, true, new string[]{"ярд"});
            yield return ("zh-CN", LengthUnit.Yard, true, new string[]{"码"});
            yield return ("en-US", LevelUnit.Decibel, true, new string[]{"dB"});
            yield return ("en-US", LevelUnit.Neper, true, new string[]{"Np"});
            yield return ("en-US", LinearDensityUnit.GramPerCentimeter, true, new string[]{"g/cm"});
            yield return ("en-US", LinearDensityUnit.GramPerMeter, true, new string[]{"g/m"});
            yield return ("en-US", LinearDensityUnit.GramPerMillimeter, true, new string[]{"g/mm"});
            yield return ("en-US", LinearDensityUnit.KilogramPerCentimeter, true, new string[]{"kg/cm"});
            yield return ("en-US", LinearDensityUnit.KilogramPerMeter, true, new string[]{"kg/m"});
            yield return ("en-US", LinearDensityUnit.KilogramPerMillimeter, true, new string[]{"kg/mm"});
            yield return ("en-US", LinearDensityUnit.MicrogramPerCentimeter, true, new string[]{"µg/cm"});
            yield return ("en-US", LinearDensityUnit.MicrogramPerMeter, true, new string[]{"µg/m"});
            yield return ("en-US", LinearDensityUnit.MicrogramPerMillimeter, true, new string[]{"µg/mm"});
            yield return ("en-US", LinearDensityUnit.MilligramPerCentimeter, true, new string[]{"mg/cm"});
            yield return ("en-US", LinearDensityUnit.MilligramPerMeter, true, new string[]{"mg/m"});
            yield return ("en-US", LinearDensityUnit.MilligramPerMillimeter, true, new string[]{"mg/mm"});
            yield return ("en-US", LinearDensityUnit.PoundPerFoot, true, new string[]{"lb/ft"});
            yield return ("en-US", LinearDensityUnit.PoundPerInch, true, new string[]{"lb/in"});
            yield return ("en-US", LinearPowerDensityUnit.GigawattPerCentimeter, true, new string[]{"GW/cm"});
            yield return ("en-US", LinearPowerDensityUnit.GigawattPerFoot, true, new string[]{"GW/ft"});
            yield return ("en-US", LinearPowerDensityUnit.GigawattPerInch, true, new string[]{"GW/in"});
            yield return ("en-US", LinearPowerDensityUnit.GigawattPerMeter, true, new string[]{"GW/m"});
            yield return ("en-US", LinearPowerDensityUnit.GigawattPerMillimeter, true, new string[]{"GW/mm"});
            yield return ("en-US", LinearPowerDensityUnit.KilowattPerCentimeter, true, new string[]{"kW/cm"});
            yield return ("en-US", LinearPowerDensityUnit.KilowattPerFoot, true, new string[]{"kW/ft"});
            yield return ("en-US", LinearPowerDensityUnit.KilowattPerInch, true, new string[]{"kW/in"});
            yield return ("en-US", LinearPowerDensityUnit.KilowattPerMeter, true, new string[]{"kW/m"});
            yield return ("en-US", LinearPowerDensityUnit.KilowattPerMillimeter, true, new string[]{"kW/mm"});
            yield return ("en-US", LinearPowerDensityUnit.MegawattPerCentimeter, true, new string[]{"MW/cm"});
            yield return ("en-US", LinearPowerDensityUnit.MegawattPerFoot, true, new string[]{"MW/ft"});
            yield return ("en-US", LinearPowerDensityUnit.MegawattPerInch, true, new string[]{"MW/in"});
            yield return ("en-US", LinearPowerDensityUnit.MegawattPerMeter, true, new string[]{"MW/m"});
            yield return ("en-US", LinearPowerDensityUnit.MegawattPerMillimeter, true, new string[]{"MW/mm"});
            yield return ("en-US", LinearPowerDensityUnit.MilliwattPerCentimeter, true, new string[]{"mW/cm"});
            yield return ("en-US", LinearPowerDensityUnit.MilliwattPerFoot, true, new string[]{"mW/ft"});
            yield return ("en-US", LinearPowerDensityUnit.MilliwattPerInch, true, new string[]{"mW/in"});
            yield return ("en-US", LinearPowerDensityUnit.MilliwattPerMeter, true, new string[]{"mW/m"});
            yield return ("en-US", LinearPowerDensityUnit.MilliwattPerMillimeter, true, new string[]{"mW/mm"});
            yield return ("en-US", LinearPowerDensityUnit.WattPerCentimeter, true, new string[]{"W/cm"});
            yield return ("en-US", LinearPowerDensityUnit.WattPerFoot, true, new string[]{"W/ft"});
            yield return ("en-US", LinearPowerDensityUnit.WattPerInch, true, new string[]{"W/in"});
            yield return ("en-US", LinearPowerDensityUnit.WattPerMeter, true, new string[]{"W/m"});
            yield return ("en-US", LinearPowerDensityUnit.WattPerMillimeter, true, new string[]{"W/mm"});
            yield return ("en-US", LuminosityUnit.Decawatt, true, new string[]{"daW"});
            yield return ("en-US", LuminosityUnit.Deciwatt, true, new string[]{"dW"});
            yield return ("en-US", LuminosityUnit.Femtowatt, true, new string[]{"fW"});
            yield return ("en-US", LuminosityUnit.Gigawatt, true, new string[]{"GW"});
            yield return ("en-US", LuminosityUnit.Kilowatt, true, new string[]{"kW"});
            yield return ("en-US", LuminosityUnit.Megawatt, true, new string[]{"MW"});
            yield return ("en-US", LuminosityUnit.Microwatt, true, new string[]{"µW"});
            yield return ("en-US", LuminosityUnit.Milliwatt, true, new string[]{"mW"});
            yield return ("en-US", LuminosityUnit.Nanowatt, true, new string[]{"nW"});
            yield return ("en-US", LuminosityUnit.Petawatt, true, new string[]{"PW"});
            yield return ("en-US", LuminosityUnit.Picowatt, true, new string[]{"pW"});
            yield return ("en-US", LuminosityUnit.SolarLuminosity, true, new string[]{"L⊙"});
            yield return ("en-US", LuminosityUnit.Terawatt, true, new string[]{"TW"});
            yield return ("en-US", LuminosityUnit.Watt, true, new string[]{"W"});
            yield return ("en-US", LuminousFluxUnit.Lumen, true, new string[]{"lm"});
            yield return ("en-US", LuminousIntensityUnit.Candela, true, new string[]{"cd"});
            yield return ("en-US", MagneticFieldUnit.Gauss, true, new string[]{"G"});
            yield return ("en-US", MagneticFieldUnit.Microtesla, true, new string[]{"µT"});
            yield return ("en-US", MagneticFieldUnit.Milligauss, true, new string[]{"mG"});
            yield return ("en-US", MagneticFieldUnit.Millitesla, true, new string[]{"mT"});
            yield return ("en-US", MagneticFieldUnit.Nanotesla, true, new string[]{"nT"});
            yield return ("en-US", MagneticFieldUnit.Tesla, true, new string[]{"T"});
            yield return ("en-US", MagneticFluxUnit.Weber, true, new string[]{"Wb"});
            yield return ("en-US", MagnetizationUnit.AmperePerMeter, true, new string[]{"A/m"});
            yield return ("en-US", MassUnit.Centigram, true, new string[]{"cg"});
            yield return ("ru-RU", MassUnit.Centigram, true, new string[]{"сг"});
            yield return ("zh-CN", MassUnit.Centigram, true, new string[]{"厘克"});
            yield return ("en-US", MassUnit.Decagram, true, new string[]{"dag"});
            yield return ("ru-RU", MassUnit.Decagram, true, new string[]{"даг"});
            yield return ("zh-CN", MassUnit.Decagram, true, new string[]{"十克"});
            yield return ("en-US", MassUnit.Decigram, true, new string[]{"dg"});
            yield return ("ru-RU", MassUnit.Decigram, true, new string[]{"дг"});
            yield return ("zh-CN", MassUnit.Decigram, true, new string[]{"分克"});
            yield return ("en-US", MassUnit.EarthMass, true, new string[]{"em"});
            yield return ("en-US", MassUnit.Grain, true, new string[]{"gr"});
            yield return ("en-US", MassUnit.Gram, true, new string[]{"g"});
            yield return ("ru-RU", MassUnit.Gram, true, new string[]{"г"});
            yield return ("zh-CN", MassUnit.Gram, true, new string[]{"克"});
            yield return ("en-US", MassUnit.Hectogram, true, new string[]{"hg"});
            yield return ("ru-RU", MassUnit.Hectogram, true, new string[]{"гг"});
            yield return ("zh-CN", MassUnit.Hectogram, true, new string[]{"百克"});
            yield return ("en-US", MassUnit.Kilogram, true, new string[]{"kg"});
            yield return ("ru-RU", MassUnit.Kilogram, true, new string[]{"кг"});
            yield return ("zh-CN", MassUnit.Kilogram, true, new string[]{"千克"});
            yield return ("en-US", MassUnit.Kilopound, true, new string[]{"klb", "klbs", "klbm"});
            yield return ("ru-RU", MassUnit.Kilopound, true, new string[]{"кфунт"});
            yield return ("zh-CN", MassUnit.Kilopound, true, new string[]{"千磅"});
            yield return ("en-US", MassUnit.Kilotonne, true, new string[]{"kt"});
            yield return ("ru-RU", MassUnit.Kilotonne, true, new string[]{"кт"});
            yield return ("zh-CN", MassUnit.Kilotonne, true, new string[]{"千吨"});
            yield return ("en-US", MassUnit.LongHundredweight, true, new string[]{"cwt"});
            yield return ("en-US", MassUnit.LongTon, true, new string[]{"long tn"});
            yield return ("ru-RU", MassUnit.LongTon, true, new string[]{"тонна большая"});
            yield return ("zh-CN", MassUnit.LongTon, true, new string[]{"长吨"});
            yield return ("en-US", MassUnit.Megapound, true, new string[]{"Mlb", "Mlbs", "Mlbm"});
            yield return ("ru-RU", MassUnit.Megapound, true, new string[]{"Мфунт"});
            yield return ("zh-CN", MassUnit.Megapound, true, new string[]{"兆磅"});
            yield return ("en-US", MassUnit.Megatonne, true, new string[]{"Mt"});
            yield return ("ru-RU", MassUnit.Megatonne, true, new string[]{"Мт"});
            yield return ("zh-CN", MassUnit.Megatonne, true, new string[]{"兆吨"});
            yield return ("en-US", MassUnit.Microgram, true, new string[]{"µg"});
            yield return ("ru-RU", MassUnit.Microgram, true, new string[]{"мкг"});
            yield return ("zh-CN", MassUnit.Microgram, true, new string[]{"微克"});
            yield return ("en-US", MassUnit.Milligram, true, new string[]{"mg"});
            yield return ("ru-RU", MassUnit.Milligram, true, new string[]{"мг"});
            yield return ("zh-CN", MassUnit.Milligram, true, new string[]{"毫克"});
            yield return ("en-US", MassUnit.Nanogram, true, new string[]{"ng"});
            yield return ("ru-RU", MassUnit.Nanogram, true, new string[]{"нг"});
            yield return ("zh-CN", MassUnit.Nanogram, true, new string[]{"纳克"});
            yield return ("en-US", MassUnit.Ounce, true, new string[]{"oz"});
            yield return ("zh-CN", MassUnit.Ounce, true, new string[]{"盎司"});
            yield return ("en-US", MassUnit.Pound, true, new string[]{"lb", "lbs", "lbm"});
            yield return ("ru-RU", MassUnit.Pound, true, new string[]{"фунт"});
            yield return ("zh-CN", MassUnit.Pound, true, new string[]{"磅"});
            yield return ("en-US", MassUnit.ShortHundredweight, true, new string[]{"cwt"});
            yield return ("en-US", MassUnit.ShortTon, true, new string[]{"t (short)", "short tn", "ST"});
            yield return ("ru-RU", MassUnit.ShortTon, true, new string[]{"тонна малая"});
            yield return ("zh-CN", MassUnit.ShortTon, true, new string[]{"短吨"});
            yield return ("en-US", MassUnit.Slug, true, new string[]{"slug"});
            yield return ("en-US", MassUnit.SolarMass, true, new string[]{"M⊙"});
            yield return ("en-US", MassUnit.Stone, true, new string[]{"st"});
            yield return ("en-US", MassUnit.Tonne, true, new string[]{"t"});
            yield return ("ru-RU", MassUnit.Tonne, true, new string[]{"т"});
            yield return ("zh-CN", MassUnit.Tonne, true, new string[]{"吨"});
            yield return ("en-US", MassConcentrationUnit.CentigramPerDeciliter, true, new string[]{"cg/dL"});
            yield return ("en-US", MassConcentrationUnit.CentigramPerLiter, true, new string[]{"cg/L"});
            yield return ("en-US", MassConcentrationUnit.CentigramPerMicroliter, true, new string[]{"cg/μL"});
            yield return ("en-US", MassConcentrationUnit.CentigramPerMilliliter, true, new string[]{"cg/mL"});
            yield return ("en-US", MassConcentrationUnit.DecigramPerDeciliter, true, new string[]{"dg/dL"});
            yield return ("en-US", MassConcentrationUnit.DecigramPerLiter, true, new string[]{"dg/L"});
            yield return ("en-US", MassConcentrationUnit.DecigramPerMicroliter, true, new string[]{"dg/μL"});
            yield return ("en-US", MassConcentrationUnit.DecigramPerMilliliter, true, new string[]{"dg/mL"});
            yield return ("en-US", MassConcentrationUnit.GramPerCubicCentimeter, true, new string[]{"g/cm³"});
            yield return ("en-US", MassConcentrationUnit.GramPerCubicMeter, true, new string[]{"g/m³"});
            yield return ("ru-RU", MassConcentrationUnit.GramPerCubicMeter, true, new string[]{"г/м³"});
            yield return ("en-US", MassConcentrationUnit.GramPerCubicMillimeter, true, new string[]{"g/mm³"});
            yield return ("en-US", MassConcentrationUnit.GramPerDeciliter, true, new string[]{"g/dL"});
            yield return ("en-US", MassConcentrationUnit.GramPerLiter, true, new string[]{"g/L"});
            yield return ("en-US", MassConcentrationUnit.GramPerMicroliter, true, new string[]{"g/μL"});
            yield return ("en-US", MassConcentrationUnit.GramPerMilliliter, true, new string[]{"g/mL"});
            yield return ("en-US", MassConcentrationUnit.KilogramPerCubicCentimeter, true, new string[]{"kg/cm³"});
            yield return ("en-US", MassConcentrationUnit.KilogramPerCubicMeter, true, new string[]{"kg/m³"});
            yield return ("ru-RU", MassConcentrationUnit.KilogramPerCubicMeter, true, new string[]{"кг/м³"});
            yield return ("en-US", MassConcentrationUnit.KilogramPerCubicMillimeter, true, new string[]{"kg/mm³"});
            yield return ("en-US", MassConcentrationUnit.KilogramPerLiter, true, new string[]{"kg/L"});
            yield return ("en-US", MassConcentrationUnit.KilopoundPerCubicFoot, true, new string[]{"kip/ft³"});
            yield return ("en-US", MassConcentrationUnit.KilopoundPerCubicInch, true, new string[]{"kip/in³"});
            yield return ("en-US", MassConcentrationUnit.MicrogramPerCubicMeter, true, new string[]{"µg/m³"});
            yield return ("ru-RU", MassConcentrationUnit.MicrogramPerCubicMeter, true, new string[]{"мкг/м³"});
            yield return ("en-US", MassConcentrationUnit.MicrogramPerDeciliter, true, new string[]{"µg/dL"});
            yield return ("en-US", MassConcentrationUnit.MicrogramPerLiter, true, new string[]{"µg/L"});
            yield return ("en-US", MassConcentrationUnit.MicrogramPerMicroliter, true, new string[]{"µg/μL"});
            yield return ("en-US", MassConcentrationUnit.MicrogramPerMilliliter, true, new string[]{"µg/mL"});
            yield return ("en-US", MassConcentrationUnit.MilligramPerCubicMeter, true, new string[]{"mg/m³"});
            yield return ("ru-RU", MassConcentrationUnit.MilligramPerCubicMeter, true, new string[]{"мг/м³"});
            yield return ("en-US", MassConcentrationUnit.MilligramPerDeciliter, true, new string[]{"mg/dL"});
            yield return ("en-US", MassConcentrationUnit.MilligramPerLiter, true, new string[]{"mg/L"});
            yield return ("en-US", MassConcentrationUnit.MilligramPerMicroliter, true, new string[]{"mg/μL"});
            yield return ("en-US", MassConcentrationUnit.MilligramPerMilliliter, true, new string[]{"mg/mL"});
            yield return ("en-US", MassConcentrationUnit.NanogramPerDeciliter, true, new string[]{"ng/dL"});
            yield return ("en-US", MassConcentrationUnit.NanogramPerLiter, true, new string[]{"ng/L"});
            yield return ("en-US", MassConcentrationUnit.NanogramPerMicroliter, true, new string[]{"ng/μL"});
            yield return ("en-US", MassConcentrationUnit.NanogramPerMilliliter, true, new string[]{"ng/mL"});
            yield return ("en-US", MassConcentrationUnit.OuncePerImperialGallon, true, new string[]{"oz/gal (imp.)"});
            yield return ("en-US", MassConcentrationUnit.OuncePerUSGallon, true, new string[]{"oz/gal (U.S.)"});
            yield return ("en-US", MassConcentrationUnit.PicogramPerDeciliter, true, new string[]{"pg/dL"});
            yield return ("en-US", MassConcentrationUnit.PicogramPerLiter, true, new string[]{"pg/L"});
            yield return ("en-US", MassConcentrationUnit.PicogramPerMicroliter, true, new string[]{"pg/μL"});
            yield return ("en-US", MassConcentrationUnit.PicogramPerMilliliter, true, new string[]{"pg/mL"});
            yield return ("en-US", MassConcentrationUnit.PoundPerCubicFoot, true, new string[]{"lb/ft³"});
            yield return ("en-US", MassConcentrationUnit.PoundPerCubicInch, true, new string[]{"lb/in³"});
            yield return ("en-US", MassConcentrationUnit.PoundPerImperialGallon, true, new string[]{"ppg (imp.)"});
            yield return ("en-US", MassConcentrationUnit.PoundPerUSGallon, true, new string[]{"ppg (U.S.)"});
            yield return ("en-US", MassConcentrationUnit.SlugPerCubicFoot, true, new string[]{"slug/ft³"});
            yield return ("en-US", MassConcentrationUnit.TonnePerCubicCentimeter, true, new string[]{"t/cm³"});
            yield return ("en-US", MassConcentrationUnit.TonnePerCubicMeter, true, new string[]{"t/m³"});
            yield return ("en-US", MassConcentrationUnit.TonnePerCubicMillimeter, true, new string[]{"t/mm³"});
            yield return ("en-US", MassFlowUnit.CentigramPerDay, true, new string[]{"cg/d"});
            yield return ("en-US", MassFlowUnit.CentigramPerSecond, true, new string[]{"cg/s", "cg/S"});
            yield return ("en-US", MassFlowUnit.DecagramPerDay, true, new string[]{"dag/d"});
            yield return ("en-US", MassFlowUnit.DecagramPerSecond, true, new string[]{"dag/s", "dag/S"});
            yield return ("en-US", MassFlowUnit.DecigramPerDay, true, new string[]{"dg/d"});
            yield return ("en-US", MassFlowUnit.DecigramPerSecond, true, new string[]{"dg/s", "dg/S"});
            yield return ("en-US", MassFlowUnit.GramPerDay, true, new string[]{"g/d"});
            yield return ("en-US", MassFlowUnit.GramPerHour, true, new string[]{"g/h"});
            yield return ("en-US", MassFlowUnit.GramPerSecond, true, new string[]{"g/s", "g/S"});
            yield return ("en-US", MassFlowUnit.HectogramPerDay, true, new string[]{"hg/d"});
            yield return ("en-US", MassFlowUnit.HectogramPerSecond, true, new string[]{"hg/s", "hg/S"});
            yield return ("en-US", MassFlowUnit.KilogramPerDay, true, new string[]{"kg/d"});
            yield return ("en-US", MassFlowUnit.KilogramPerHour, true, new string[]{"kg/h"});
            yield return ("ru-RU", MassFlowUnit.KilogramPerHour, true, new string[]{"кг/ч"});
            yield return ("en-US", MassFlowUnit.KilogramPerMinute, true, new string[]{"kg/min"});
            yield return ("ru-RU", MassFlowUnit.KilogramPerMinute, true, new string[]{"кг/мин"});
            yield return ("en-US", MassFlowUnit.KilogramPerSecond, true, new string[]{"kg/s", "kg/S"});
            yield return ("en-US", MassFlowUnit.MegagramPerDay, true, new string[]{"Mg/d"});
            yield return ("en-US", MassFlowUnit.MegapoundPerDay, true, new string[]{"Mlb/d"});
            yield return ("en-US", MassFlowUnit.MegapoundPerHour, true, new string[]{"Mlb/h"});
            yield return ("en-US", MassFlowUnit.MegapoundPerMinute, true, new string[]{"Mlb/min"});
            yield return ("en-US", MassFlowUnit.MegapoundPerSecond, true, new string[]{"Mlb/s"});
            yield return ("en-US", MassFlowUnit.MicrogramPerDay, true, new string[]{"µg/d"});
            yield return ("en-US", MassFlowUnit.MicrogramPerSecond, true, new string[]{"µg/s", "µg/S"});
            yield return ("en-US", MassFlowUnit.MilligramPerDay, true, new string[]{"mg/d"});
            yield return ("en-US", MassFlowUnit.MilligramPerSecond, true, new string[]{"mg/s", "mg/S"});
            yield return ("en-US", MassFlowUnit.NanogramPerDay, true, new string[]{"ng/d"});
            yield return ("en-US", MassFlowUnit.NanogramPerSecond, true, new string[]{"ng/s", "ng/S"});
            yield return ("en-US", MassFlowUnit.PoundPerDay, true, new string[]{"lb/d"});
            yield return ("en-US", MassFlowUnit.PoundPerHour, true, new string[]{"lb/h"});
            yield return ("en-US", MassFlowUnit.PoundPerMinute, true, new string[]{"lb/min"});
            yield return ("en-US", MassFlowUnit.PoundPerSecond, true, new string[]{"lb/s"});
            yield return ("en-US", MassFlowUnit.ShortTonPerHour, true, new string[]{"short tn/h"});
            yield return ("en-US", MassFlowUnit.TonnePerDay, true, new string[]{"t/d"});
            yield return ("en-US", MassFlowUnit.TonnePerHour, true, new string[]{"t/h"});
            yield return ("en-US", MassFluxUnit.GramPerHourPerSquareCentimeter, true, new string[]{"g·h⁻¹·cm⁻²"});
            yield return ("en-US", MassFluxUnit.GramPerHourPerSquareMeter, true, new string[]{"g·h⁻¹·m⁻²"});
            yield return ("en-US", MassFluxUnit.GramPerHourPerSquareMillimeter, true, new string[]{"g·h⁻¹·mm⁻²"});
            yield return ("en-US", MassFluxUnit.GramPerSecondPerSquareCentimeter, true, new string[]{"g·s⁻¹·cm⁻²"});
            yield return ("en-US", MassFluxUnit.GramPerSecondPerSquareMeter, true, new string[]{"g·s⁻¹·m⁻²"});
            yield return ("en-US", MassFluxUnit.GramPerSecondPerSquareMillimeter, true, new string[]{"g·s⁻¹·mm⁻²"});
            yield return ("en-US", MassFluxUnit.KilogramPerHourPerSquareCentimeter, true, new string[]{"kg·h⁻¹·cm⁻²"});
            yield return ("en-US", MassFluxUnit.KilogramPerHourPerSquareMeter, true, new string[]{"kg·h⁻¹·m⁻²"});
            yield return ("en-US", MassFluxUnit.KilogramPerHourPerSquareMillimeter, true, new string[]{"kg·h⁻¹·mm⁻²"});
            yield return ("en-US", MassFluxUnit.KilogramPerSecondPerSquareCentimeter, true, new string[]{"kg·s⁻¹·cm⁻²"});
            yield return ("en-US", MassFluxUnit.KilogramPerSecondPerSquareMeter, true, new string[]{"kg·s⁻¹·m⁻²"});
            yield return ("en-US", MassFluxUnit.KilogramPerSecondPerSquareMillimeter, true, new string[]{"kg·s⁻¹·mm⁻²"});
            yield return ("en-US", MassFractionUnit.CentigramPerGram, true, new string[]{"cg/g"});
            yield return ("en-US", MassFractionUnit.CentigramPerKilogram, true, new string[]{"cg/kg"});
            yield return ("en-US", MassFractionUnit.DecagramPerGram, true, new string[]{"dag/g"});
            yield return ("en-US", MassFractionUnit.DecagramPerKilogram, true, new string[]{"dag/kg"});
            yield return ("en-US", MassFractionUnit.DecigramPerGram, true, new string[]{"dg/g"});
            yield return ("en-US", MassFractionUnit.DecigramPerKilogram, true, new string[]{"dg/kg"});
            yield return ("en-US", MassFractionUnit.DecimalFraction, true, new string[]{""});
            yield return ("en-US", MassFractionUnit.GramPerGram, true, new string[]{"g/g"});
            yield return ("en-US", MassFractionUnit.GramPerKilogram, true, new string[]{"g/kg"});
            yield return ("en-US", MassFractionUnit.HectogramPerGram, true, new string[]{"hg/g"});
            yield return ("en-US", MassFractionUnit.HectogramPerKilogram, true, new string[]{"hg/kg"});
            yield return ("en-US", MassFractionUnit.KilogramPerGram, true, new string[]{"kg/g"});
            yield return ("en-US", MassFractionUnit.KilogramPerKilogram, true, new string[]{"kg/kg"});
            yield return ("en-US", MassFractionUnit.MicrogramPerGram, true, new string[]{"µg/g"});
            yield return ("en-US", MassFractionUnit.MicrogramPerKilogram, true, new string[]{"µg/kg"});
            yield return ("en-US", MassFractionUnit.MilligramPerGram, true, new string[]{"mg/g"});
            yield return ("en-US", MassFractionUnit.MilligramPerKilogram, true, new string[]{"mg/kg"});
            yield return ("en-US", MassFractionUnit.NanogramPerGram, true, new string[]{"ng/g"});
            yield return ("en-US", MassFractionUnit.NanogramPerKilogram, true, new string[]{"ng/kg"});
            yield return ("en-US", MassFractionUnit.PartPerBillion, true, new string[]{"ppb"});
            yield return ("en-US", MassFractionUnit.PartPerMillion, true, new string[]{"ppm"});
            yield return ("en-US", MassFractionUnit.PartPerThousand, true, new string[]{"‰"});
            yield return ("en-US", MassFractionUnit.PartPerTrillion, true, new string[]{"ppt"});
            yield return ("en-US", MassFractionUnit.Percent, true, new string[]{"%", "% (w/w)"});
            yield return ("en-US", MassMomentOfInertiaUnit.GramSquareCentimeter, true, new string[]{"g·cm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.GramSquareDecimeter, true, new string[]{"g·dm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.GramSquareMeter, true, new string[]{"g·m²"});
            yield return ("en-US", MassMomentOfInertiaUnit.GramSquareMillimeter, true, new string[]{"g·mm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilogramSquareCentimeter, true, new string[]{"kg·cm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilogramSquareDecimeter, true, new string[]{"kg·dm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilogramSquareMeter, true, new string[]{"kg·m²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilogramSquareMillimeter, true, new string[]{"kg·mm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilotonneSquareCentimeter, true, new string[]{"kt·cm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilotonneSquareDecimeter, true, new string[]{"kt·dm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilotonneSquareMeter, true, new string[]{"kt·m²"});
            yield return ("en-US", MassMomentOfInertiaUnit.KilotonneSquareMilimeter, true, new string[]{"kt·mm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MegatonneSquareCentimeter, true, new string[]{"Mt·cm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MegatonneSquareDecimeter, true, new string[]{"Mt·dm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MegatonneSquareMeter, true, new string[]{"Mt·m²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MegatonneSquareMilimeter, true, new string[]{"Mt·mm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MilligramSquareCentimeter, true, new string[]{"mg·cm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MilligramSquareDecimeter, true, new string[]{"mg·dm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MilligramSquareMeter, true, new string[]{"mg·m²"});
            yield return ("en-US", MassMomentOfInertiaUnit.MilligramSquareMillimeter, true, new string[]{"mg·mm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.PoundSquareFoot, true, new string[]{"lb·ft²"});
            yield return ("en-US", MassMomentOfInertiaUnit.PoundSquareInch, true, new string[]{"lb·in²"});
            yield return ("en-US", MassMomentOfInertiaUnit.SlugSquareFoot, true, new string[]{"slug·ft²"});
            yield return ("en-US", MassMomentOfInertiaUnit.SlugSquareInch, true, new string[]{"slug·in²"});
            yield return ("en-US", MassMomentOfInertiaUnit.TonneSquareCentimeter, true, new string[]{"t·cm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.TonneSquareDecimeter, true, new string[]{"t·dm²"});
            yield return ("en-US", MassMomentOfInertiaUnit.TonneSquareMeter, true, new string[]{"t·m²"});
            yield return ("en-US", MassMomentOfInertiaUnit.TonneSquareMilimeter, true, new string[]{"t·mm²"});
            yield return ("en-US", MolarEnergyUnit.JoulePerMole, true, new string[]{"J/mol"});
            yield return ("en-US", MolarEnergyUnit.KilojoulePerMole, true, new string[]{"kJ/mol"});
            yield return ("en-US", MolarEnergyUnit.MegajoulePerMole, true, new string[]{"MJ/mol"});
            yield return ("en-US", MolarEntropyUnit.JoulePerMoleKelvin, true, new string[]{"J/(mol*K)"});
            yield return ("en-US", MolarEntropyUnit.KilojoulePerMoleKelvin, true, new string[]{"kJ/(mol*K)"});
            yield return ("en-US", MolarEntropyUnit.MegajoulePerMoleKelvin, true, new string[]{"MJ/(mol*K)"});
            yield return ("en-US", MolarityUnit.CentimolePerLiter, true, new string[]{"cmol/L", "cM"});
            yield return ("en-US", MolarityUnit.CentimolesPerLiter, false, new string[]{"cmol/L", "cM"});
            yield return ("en-US", MolarityUnit.DecimolePerLiter, true, new string[]{"dmol/L", "dM"});
            yield return ("en-US", MolarityUnit.DecimolesPerLiter, false, new string[]{"dmol/L", "dM"});
            yield return ("en-US", MolarityUnit.MicromolePerLiter, true, new string[]{"µmol/L", "µM"});
            yield return ("en-US", MolarityUnit.MicromolesPerLiter, false, new string[]{"µmol/L", "µM"});
            yield return ("en-US", MolarityUnit.MillimolePerLiter, true, new string[]{"mmol/L", "mM"});
            yield return ("en-US", MolarityUnit.MillimolesPerLiter, false, new string[]{"mmol/L", "mM"});
            yield return ("en-US", MolarityUnit.MolePerCubicMeter, true, new string[]{"mol/m³"});
            yield return ("en-US", MolarityUnit.MolePerLiter, true, new string[]{"mol/L", "M"});
            yield return ("en-US", MolarityUnit.MolesPerCubicMeter, false, new string[]{"mol/m³"});
            yield return ("en-US", MolarityUnit.MolesPerLiter, false, new string[]{"mol/L", "M"});
            yield return ("en-US", MolarityUnit.NanomolePerLiter, true, new string[]{"nmol/L", "nM"});
            yield return ("en-US", MolarityUnit.NanomolesPerLiter, false, new string[]{"nmol/L", "nM"});
            yield return ("en-US", MolarityUnit.PicomolePerLiter, true, new string[]{"pmol/L", "pM"});
            yield return ("en-US", MolarityUnit.PicomolesPerLiter, false, new string[]{"pmol/L", "pM"});
            yield return ("en-US", MolarMassUnit.CentigramPerMole, true, new string[]{"cg/mol"});
            yield return ("ru-RU", MolarMassUnit.CentigramPerMole, true, new string[]{"сг/моль"});
            yield return ("en-US", MolarMassUnit.DecagramPerMole, true, new string[]{"dag/mol"});
            yield return ("ru-RU", MolarMassUnit.DecagramPerMole, true, new string[]{"даг/моль"});
            yield return ("en-US", MolarMassUnit.DecigramPerMole, true, new string[]{"dg/mol"});
            yield return ("ru-RU", MolarMassUnit.DecigramPerMole, true, new string[]{"дг/моль"});
            yield return ("en-US", MolarMassUnit.GramPerMole, true, new string[]{"g/mol"});
            yield return ("ru-RU", MolarMassUnit.GramPerMole, true, new string[]{"г/моль"});
            yield return ("en-US", MolarMassUnit.HectogramPerMole, true, new string[]{"hg/mol"});
            yield return ("ru-RU", MolarMassUnit.HectogramPerMole, true, new string[]{"гг/моль"});
            yield return ("en-US", MolarMassUnit.KilogramPerMole, true, new string[]{"kg/mol"});
            yield return ("ru-RU", MolarMassUnit.KilogramPerMole, true, new string[]{"кг/моль"});
            yield return ("en-US", MolarMassUnit.KilopoundPerMole, true, new string[]{"klb/mol"});
            yield return ("ru-RU", MolarMassUnit.KilopoundPerMole, true, new string[]{"кфунт/моль"});
            yield return ("en-US", MolarMassUnit.MegapoundPerMole, true, new string[]{"Mlb/mol"});
            yield return ("ru-RU", MolarMassUnit.MegapoundPerMole, true, new string[]{"Мфунт/моль"});
            yield return ("en-US", MolarMassUnit.MicrogramPerMole, true, new string[]{"µg/mol"});
            yield return ("ru-RU", MolarMassUnit.MicrogramPerMole, true, new string[]{"мкг/моль"});
            yield return ("en-US", MolarMassUnit.MilligramPerMole, true, new string[]{"mg/mol"});
            yield return ("ru-RU", MolarMassUnit.MilligramPerMole, true, new string[]{"мг/моль"});
            yield return ("en-US", MolarMassUnit.NanogramPerMole, true, new string[]{"ng/mol"});
            yield return ("ru-RU", MolarMassUnit.NanogramPerMole, true, new string[]{"нг/моль"});
            yield return ("en-US", MolarMassUnit.PoundPerMole, true, new string[]{"lb/mol"});
            yield return ("ru-RU", MolarMassUnit.PoundPerMole, true, new string[]{"фунт/моль"});
            yield return ("en-US", PermeabilityUnit.HenryPerMeter, true, new string[]{"H/m"});
            yield return ("en-US", PermittivityUnit.FaradPerMeter, true, new string[]{"F/m"});
            yield return ("en-US", PowerUnit.BoilerHorsepower, true, new string[]{"hp(S)"});
            yield return ("en-US", PowerUnit.BritishThermalUnitPerHour, true, new string[]{"Btu/h", "Btu/hr"});
            yield return ("en-US", PowerUnit.Decawatt, true, new string[]{"daW"});
            yield return ("en-US", PowerUnit.Deciwatt, true, new string[]{"dW"});
            yield return ("en-US", PowerUnit.ElectricalHorsepower, true, new string[]{"hp(E)"});
            yield return ("en-US", PowerUnit.Femtowatt, true, new string[]{"fW"});
            yield return ("en-US", PowerUnit.GigajoulePerHour, true, new string[]{"GJ/h"});
            yield return ("en-US", PowerUnit.Gigawatt, true, new string[]{"GW"});
            yield return ("en-US", PowerUnit.HydraulicHorsepower, true, new string[]{"hp(H)"});
            yield return ("en-US", PowerUnit.JoulePerHour, true, new string[]{"J/h"});
            yield return ("en-US", PowerUnit.KilobritishThermalUnitPerHour, true, new string[]{"kBtu/h", "kBtu/hr"});
            yield return ("en-US", PowerUnit.KilojoulePerHour, true, new string[]{"kJ/h"});
            yield return ("en-US", PowerUnit.Kilowatt, true, new string[]{"kW"});
            yield return ("en-US", PowerUnit.MechanicalHorsepower, true, new string[]{"hp(I)"});
            yield return ("en-US", PowerUnit.MegajoulePerHour, true, new string[]{"MJ/h"});
            yield return ("en-US", PowerUnit.Megawatt, true, new string[]{"MW"});
            yield return ("en-US", PowerUnit.MetricHorsepower, true, new string[]{"hp(M)"});
            yield return ("en-US", PowerUnit.Microwatt, true, new string[]{"µW"});
            yield return ("en-US", PowerUnit.MillijoulePerHour, true, new string[]{"mJ/h"});
            yield return ("en-US", PowerUnit.Milliwatt, true, new string[]{"mW"});
            yield return ("en-US", PowerUnit.Nanowatt, true, new string[]{"nW"});
            yield return ("en-US", PowerUnit.Petawatt, true, new string[]{"PW"});
            yield return ("en-US", PowerUnit.Picowatt, true, new string[]{"pW"});
            yield return ("en-US", PowerUnit.Terawatt, true, new string[]{"TW"});
            yield return ("en-US", PowerUnit.Watt, true, new string[]{"W"});
            yield return ("en-US", PowerDensityUnit.DecawattPerCubicFoot, true, new string[]{"daW/ft³"});
            yield return ("en-US", PowerDensityUnit.DecawattPerCubicInch, true, new string[]{"daW/in³"});
            yield return ("en-US", PowerDensityUnit.DecawattPerCubicMeter, true, new string[]{"daW/m³"});
            yield return ("en-US", PowerDensityUnit.DecawattPerLiter, true, new string[]{"daW/l"});
            yield return ("en-US", PowerDensityUnit.DeciwattPerCubicFoot, true, new string[]{"dW/ft³"});
            yield return ("en-US", PowerDensityUnit.DeciwattPerCubicInch, true, new string[]{"dW/in³"});
            yield return ("en-US", PowerDensityUnit.DeciwattPerCubicMeter, true, new string[]{"dW/m³"});
            yield return ("en-US", PowerDensityUnit.DeciwattPerLiter, true, new string[]{"dW/l"});
            yield return ("en-US", PowerDensityUnit.GigawattPerCubicFoot, true, new string[]{"GW/ft³"});
            yield return ("en-US", PowerDensityUnit.GigawattPerCubicInch, true, new string[]{"GW/in³"});
            yield return ("en-US", PowerDensityUnit.GigawattPerCubicMeter, true, new string[]{"GW/m³"});
            yield return ("en-US", PowerDensityUnit.GigawattPerLiter, true, new string[]{"GW/l"});
            yield return ("en-US", PowerDensityUnit.KilowattPerCubicFoot, true, new string[]{"kW/ft³"});
            yield return ("en-US", PowerDensityUnit.KilowattPerCubicInch, true, new string[]{"kW/in³"});
            yield return ("en-US", PowerDensityUnit.KilowattPerCubicMeter, true, new string[]{"kW/m³"});
            yield return ("en-US", PowerDensityUnit.KilowattPerLiter, true, new string[]{"kW/l"});
            yield return ("en-US", PowerDensityUnit.MegawattPerCubicFoot, true, new string[]{"MW/ft³"});
            yield return ("en-US", PowerDensityUnit.MegawattPerCubicInch, true, new string[]{"MW/in³"});
            yield return ("en-US", PowerDensityUnit.MegawattPerCubicMeter, true, new string[]{"MW/m³"});
            yield return ("en-US", PowerDensityUnit.MegawattPerLiter, true, new string[]{"MW/l"});
            yield return ("en-US", PowerDensityUnit.MicrowattPerCubicFoot, true, new string[]{"µW/ft³"});
            yield return ("en-US", PowerDensityUnit.MicrowattPerCubicInch, true, new string[]{"µW/in³"});
            yield return ("en-US", PowerDensityUnit.MicrowattPerCubicMeter, true, new string[]{"µW/m³"});
            yield return ("en-US", PowerDensityUnit.MicrowattPerLiter, true, new string[]{"µW/l"});
            yield return ("en-US", PowerDensityUnit.MilliwattPerCubicFoot, true, new string[]{"mW/ft³"});
            yield return ("en-US", PowerDensityUnit.MilliwattPerCubicInch, true, new string[]{"mW/in³"});
            yield return ("en-US", PowerDensityUnit.MilliwattPerCubicMeter, true, new string[]{"mW/m³"});
            yield return ("en-US", PowerDensityUnit.MilliwattPerLiter, true, new string[]{"mW/l"});
            yield return ("en-US", PowerDensityUnit.NanowattPerCubicFoot, true, new string[]{"nW/ft³"});
            yield return ("en-US", PowerDensityUnit.NanowattPerCubicInch, true, new string[]{"nW/in³"});
            yield return ("en-US", PowerDensityUnit.NanowattPerCubicMeter, true, new string[]{"nW/m³"});
            yield return ("en-US", PowerDensityUnit.NanowattPerLiter, true, new string[]{"nW/l"});
            yield return ("en-US", PowerDensityUnit.PicowattPerCubicFoot, true, new string[]{"pW/ft³"});
            yield return ("en-US", PowerDensityUnit.PicowattPerCubicInch, true, new string[]{"pW/in³"});
            yield return ("en-US", PowerDensityUnit.PicowattPerCubicMeter, true, new string[]{"pW/m³"});
            yield return ("en-US", PowerDensityUnit.PicowattPerLiter, true, new string[]{"pW/l"});
            yield return ("en-US", PowerDensityUnit.TerawattPerCubicFoot, true, new string[]{"TW/ft³"});
            yield return ("en-US", PowerDensityUnit.TerawattPerCubicInch, true, new string[]{"TW/in³"});
            yield return ("en-US", PowerDensityUnit.TerawattPerCubicMeter, true, new string[]{"TW/m³"});
            yield return ("en-US", PowerDensityUnit.TerawattPerLiter, true, new string[]{"TW/l"});
            yield return ("en-US", PowerDensityUnit.WattPerCubicFoot, true, new string[]{"W/ft³"});
            yield return ("en-US", PowerDensityUnit.WattPerCubicInch, true, new string[]{"W/in³"});
            yield return ("en-US", PowerDensityUnit.WattPerCubicMeter, true, new string[]{"W/m³"});
            yield return ("en-US", PowerDensityUnit.WattPerLiter, true, new string[]{"W/l"});
            yield return ("en-US", PowerRatioUnit.DecibelMilliwatt, true, new string[]{"dBmW", "dBm"});
            yield return ("en-US", PowerRatioUnit.DecibelWatt, true, new string[]{"dBW"});
            yield return ("en-US", PressureUnit.Atmosphere, true, new string[]{"atm"});
            yield return ("ru-RU", PressureUnit.Atmosphere, true, new string[]{"атм"});
            yield return ("en-US", PressureUnit.Bar, true, new string[]{"bar"});
            yield return ("ru-RU", PressureUnit.Bar, true, new string[]{"бар"});
            yield return ("en-US", PressureUnit.Centibar, true, new string[]{"cbar"});
            yield return ("ru-RU", PressureUnit.Centibar, true, new string[]{"сбар"});
            yield return ("en-US", PressureUnit.Decapascal, true, new string[]{"daPa"});
            yield return ("ru-RU", PressureUnit.Decapascal, true, new string[]{"даПа"});
            yield return ("en-US", PressureUnit.Decibar, true, new string[]{"dbar"});
            yield return ("ru-RU", PressureUnit.Decibar, true, new string[]{"дбар"});
            yield return ("en-US", PressureUnit.DynePerSquareCentimeter, true, new string[]{"dyn/cm²"});
            yield return ("en-US", PressureUnit.FootOfElevation, true, new string[]{"ft of elevation"});
            yield return ("en-US", PressureUnit.FootOfHead, true, new string[]{"ft of head"});
            yield return ("en-US", PressureUnit.Gigapascal, true, new string[]{"GPa"});
            yield return ("ru-RU", PressureUnit.Gigapascal, true, new string[]{"ГПа"});
            yield return ("en-US", PressureUnit.Hectopascal, true, new string[]{"hPa"});
            yield return ("ru-RU", PressureUnit.Hectopascal, true, new string[]{"гПа"});
            yield return ("en-US", PressureUnit.InchOfMercury, true, new string[]{"inHg"});
            yield return ("en-US", PressureUnit.InchOfWaterColumn, true, new string[]{"inH2O", "inch wc", "wc"});
            yield return ("en-US", PressureUnit.Kilobar, true, new string[]{"kbar"});
            yield return ("ru-RU", PressureUnit.Kilobar, true, new string[]{"кбар"});
            yield return ("en-US", PressureUnit.KilogramForcePerSquareCentimeter, true, new string[]{"kgf/cm²"});
            yield return ("ru-RU", PressureUnit.KilogramForcePerSquareCentimeter, true, new string[]{"кгс/см²"});
            yield return ("en-US", PressureUnit.KilogramForcePerSquareMeter, true, new string[]{"kgf/m²"});
            yield return ("ru-RU", PressureUnit.KilogramForcePerSquareMeter, true, new string[]{"кгс/м²"});
            yield return ("en-US", PressureUnit.KilogramForcePerSquareMillimeter, true, new string[]{"kgf/mm²"});
            yield return ("ru-RU", PressureUnit.KilogramForcePerSquareMillimeter, true, new string[]{"кгс/мм²"});
            yield return ("en-US", PressureUnit.KilonewtonPerSquareCentimeter, true, new string[]{"kN/cm²"});
            yield return ("ru-RU", PressureUnit.KilonewtonPerSquareCentimeter, true, new string[]{"кН/см²"});
            yield return ("en-US", PressureUnit.KilonewtonPerSquareMeter, true, new string[]{"kN/m²"});
            yield return ("ru-RU", PressureUnit.KilonewtonPerSquareMeter, true, new string[]{"кН/м²"});
            yield return ("en-US", PressureUnit.KilonewtonPerSquareMillimeter, true, new string[]{"kN/mm²"});
            yield return ("ru-RU", PressureUnit.KilonewtonPerSquareMillimeter, true, new string[]{"кН/мм²"});
            yield return ("en-US", PressureUnit.Kilopascal, true, new string[]{"kPa"});
            yield return ("ru-RU", PressureUnit.Kilopascal, true, new string[]{"кПа"});
            yield return ("en-US", PressureUnit.KilopoundForcePerSquareFoot, true, new string[]{"kipf/ft²"});
            yield return ("en-US", PressureUnit.KilopoundForcePerSquareInch, true, new string[]{"ksi", "kipf/in²"});
            yield return ("ru-RU", PressureUnit.KilopoundForcePerSquareInch, true, new string[]{"ksi", "kipf/in²"});
            yield return ("en-US", PressureUnit.Megabar, true, new string[]{"Mbar"});
            yield return ("ru-RU", PressureUnit.Megabar, true, new string[]{"Мбар"});
            yield return ("en-US", PressureUnit.MeganewtonPerSquareMeter, true, new string[]{"MN/m²"});
            yield return ("ru-RU", PressureUnit.MeganewtonPerSquareMeter, true, new string[]{"МН/м²"});
            yield return ("en-US", PressureUnit.Megapascal, true, new string[]{"MPa"});
            yield return ("ru-RU", PressureUnit.Megapascal, true, new string[]{"МПа"});
            yield return ("en-US", PressureUnit.MeterOfElevation, true, new string[]{"m of elevation"});
            yield return ("en-US", PressureUnit.MeterOfHead, true, new string[]{"m of head"});
            yield return ("en-US", PressureUnit.Microbar, true, new string[]{"µbar"});
            yield return ("ru-RU", PressureUnit.Microbar, true, new string[]{"мкбар"});
            yield return ("en-US", PressureUnit.Micropascal, true, new string[]{"µPa"});
            yield return ("ru-RU", PressureUnit.Micropascal, true, new string[]{"мкПа"});
            yield return ("en-US", PressureUnit.Millibar, true, new string[]{"mbar"});
            yield return ("ru-RU", PressureUnit.Millibar, true, new string[]{"мбар"});
            yield return ("en-US", PressureUnit.MillimeterOfMercury, true, new string[]{"mmHg"});
            yield return ("ru-RU", PressureUnit.MillimeterOfMercury, true, new string[]{"мм рт.ст."});
            yield return ("en-US", PressureUnit.MillimeterOfWaterColumn, true, new string[]{"mmH2O", "mm wc"});
            yield return ("en-US", PressureUnit.Millipascal, true, new string[]{"mPa"});
            yield return ("ru-RU", PressureUnit.Millipascal, true, new string[]{"мПа"});
            yield return ("en-US", PressureUnit.NewtonPerSquareCentimeter, true, new string[]{"N/cm²"});
            yield return ("ru-RU", PressureUnit.NewtonPerSquareCentimeter, true, new string[]{"Н/см²"});
            yield return ("en-US", PressureUnit.NewtonPerSquareMeter, true, new string[]{"N/m²"});
            yield return ("ru-RU", PressureUnit.NewtonPerSquareMeter, true, new string[]{"Н/м²"});
            yield return ("en-US", PressureUnit.NewtonPerSquareMillimeter, true, new string[]{"N/mm²"});
            yield return ("ru-RU", PressureUnit.NewtonPerSquareMillimeter, true, new string[]{"Н/мм²"});
            yield return ("en-US", PressureUnit.Pascal, true, new string[]{"Pa"});
            yield return ("ru-RU", PressureUnit.Pascal, true, new string[]{"Па"});
            yield return ("en-US", PressureUnit.PoundForcePerSquareFoot, true, new string[]{"lb/ft²"});
            yield return ("en-US", PressureUnit.PoundForcePerSquareInch, true, new string[]{"psi", "lb/in²"});
            yield return ("ru-RU", PressureUnit.PoundForcePerSquareInch, true, new string[]{"psi", "lb/in²"});
            yield return ("en-US", PressureUnit.PoundPerInchSecondSquared, true, new string[]{"lbm/(in·s²)", "lb/(in·s²)"});
            yield return ("en-US", PressureUnit.TechnicalAtmosphere, true, new string[]{"at"});
            yield return ("ru-RU", PressureUnit.TechnicalAtmosphere, true, new string[]{"ат"});
            yield return ("en-US", PressureUnit.TonneForcePerSquareCentimeter, true, new string[]{"tf/cm²"});
            yield return ("en-US", PressureUnit.TonneForcePerSquareMeter, true, new string[]{"tf/m²"});
            yield return ("en-US", PressureUnit.TonneForcePerSquareMillimeter, true, new string[]{"tf/mm²"});
            yield return ("en-US", PressureUnit.Torr, true, new string[]{"torr"});
            yield return ("ru-RU", PressureUnit.Torr, true, new string[]{"торр"});
            yield return ("en-US", PressureChangeRateUnit.AtmospherePerSecond, true, new string[]{"atm/s"});
            yield return ("ru-RU", PressureChangeRateUnit.AtmospherePerSecond, true, new string[]{"атм/с"});
            yield return ("en-US", PressureChangeRateUnit.KilopascalPerMinute, true, new string[]{"kPa/min"});
            yield return ("ru-RU", PressureChangeRateUnit.KilopascalPerMinute, true, new string[]{"кПа/мин"});
            yield return ("en-US", PressureChangeRateUnit.KilopascalPerSecond, true, new string[]{"kPa/s"});
            yield return ("ru-RU", PressureChangeRateUnit.KilopascalPerSecond, true, new string[]{"кПа/с"});
            yield return ("en-US", PressureChangeRateUnit.KilopoundForcePerSquareInchPerMinute, true, new string[]{"ksi/min", "kipf/in²/min"});
            yield return ("ru-RU", PressureChangeRateUnit.KilopoundForcePerSquareInchPerMinute, true, new string[]{"ksi/мин", "kipf/in²/мин"});
            yield return ("en-US", PressureChangeRateUnit.KilopoundForcePerSquareInchPerSecond, true, new string[]{"ksi/s", "kipf/in²/s"});
            yield return ("ru-RU", PressureChangeRateUnit.KilopoundForcePerSquareInchPerSecond, true, new string[]{"ksi/с", "kipf/in²/с"});
            yield return ("en-US", PressureChangeRateUnit.MegapascalPerMinute, true, new string[]{"MPa/min"});
            yield return ("ru-RU", PressureChangeRateUnit.MegapascalPerMinute, true, new string[]{"МПа/мин"});
            yield return ("en-US", PressureChangeRateUnit.MegapascalPerSecond, true, new string[]{"MPa/s"});
            yield return ("ru-RU", PressureChangeRateUnit.MegapascalPerSecond, true, new string[]{"МПа/с"});
            yield return ("en-US", PressureChangeRateUnit.MegapoundForcePerSquareInchPerMinute, true, new string[]{"Mpsi/min", "Mlb/in²/min"});
            yield return ("ru-RU", PressureChangeRateUnit.MegapoundForcePerSquareInchPerMinute, true, new string[]{"Мpsi/мин", "Мlb/in²/мин"});
            yield return ("en-US", PressureChangeRateUnit.MegapoundForcePerSquareInchPerSecond, true, new string[]{"Mpsi/s", "Mlb/in²/s"});
            yield return ("ru-RU", PressureChangeRateUnit.MegapoundForcePerSquareInchPerSecond, true, new string[]{"Мpsi/с", "Мlb/in²/с"});
            yield return ("en-US", PressureChangeRateUnit.MillimeterOfMercuryPerSecond, true, new string[]{"mmHg/s"});
            yield return ("ru-RU", PressureChangeRateUnit.MillimeterOfMercuryPerSecond, true, new string[]{"mmHg/с"});
            yield return ("en-US", PressureChangeRateUnit.PascalPerMinute, true, new string[]{"Pa/min"});
            yield return ("ru-RU", PressureChangeRateUnit.PascalPerMinute, true, new string[]{"Па/мин"});
            yield return ("en-US", PressureChangeRateUnit.PascalPerSecond, true, new string[]{"Pa/s"});
            yield return ("ru-RU", PressureChangeRateUnit.PascalPerSecond, true, new string[]{"Па/с"});
            yield return ("en-US", PressureChangeRateUnit.PoundForcePerSquareInchPerMinute, true, new string[]{"psi/min", "lb/in²/min"});
            yield return ("ru-RU", PressureChangeRateUnit.PoundForcePerSquareInchPerMinute, true, new string[]{"psi/мин", "lb/in²/мин"});
            yield return ("en-US", PressureChangeRateUnit.PoundForcePerSquareInchPerSecond, true, new string[]{"psi/s", "lb/in²/s"});
            yield return ("ru-RU", PressureChangeRateUnit.PoundForcePerSquareInchPerSecond, true, new string[]{"psi/с", "lb/in²/с"});
            yield return ("en-US", RatioUnit.DecimalFraction, true, new string[]{""});
            yield return ("en-US", RatioUnit.PartPerBillion, true, new string[]{"ppb"});
            yield return ("en-US", RatioUnit.PartPerMillion, true, new string[]{"ppm"});
            yield return ("en-US", RatioUnit.PartPerThousand, true, new string[]{"‰"});
            yield return ("en-US", RatioUnit.PartPerTrillion, true, new string[]{"ppt"});
            yield return ("en-US", RatioUnit.Percent, true, new string[]{"%"});
            yield return ("en-US", RatioChangeRateUnit.DecimalFractionPerSecond, true, new string[]{"/s"});
            yield return ("en-US", RatioChangeRateUnit.PercentPerSecond, true, new string[]{"%/s"});
            yield return ("en-US", ReactiveEnergyUnit.KilovoltampereReactiveHour, true, new string[]{"kvarh"});
            yield return ("en-US", ReactiveEnergyUnit.MegavoltampereReactiveHour, true, new string[]{"Mvarh"});
            yield return ("en-US", ReactiveEnergyUnit.VoltampereReactiveHour, true, new string[]{"varh"});
            yield return ("en-US", ReactivePowerUnit.GigavoltampereReactive, true, new string[]{"Gvar"});
            yield return ("en-US", ReactivePowerUnit.KilovoltampereReactive, true, new string[]{"kvar"});
            yield return ("en-US", ReactivePowerUnit.MegavoltampereReactive, true, new string[]{"Mvar"});
            yield return ("en-US", ReactivePowerUnit.VoltampereReactive, true, new string[]{"var"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareCentimeter, true, new string[]{"cm⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareDecimeter, true, new string[]{"dm⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareFoot, true, new string[]{"ft⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareInch, true, new string[]{"in⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareKilometer, true, new string[]{"km⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareMeter, true, new string[]{"m⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareMicrometer, true, new string[]{"µm⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareMile, true, new string[]{"mi⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareMillimeter, true, new string[]{"mm⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseSquareYard, true, new string[]{"yd⁻²"});
            yield return ("en-US", ReciprocalAreaUnit.InverseUsSurveySquareFoot, true, new string[]{"ft⁻² (US)"});
            yield return ("en-US", ReciprocalLengthUnit.InverseCentimeter, true, new string[]{"cm⁻¹", "1/cm"});
            yield return ("en-US", ReciprocalLengthUnit.InverseFoot, true, new string[]{"ft⁻¹", "1/ft"});
            yield return ("en-US", ReciprocalLengthUnit.InverseInch, true, new string[]{"in⁻¹", "1/in"});
            yield return ("en-US", ReciprocalLengthUnit.InverseMeter, true, new string[]{"m⁻¹", "1/m"});
            yield return ("en-US", ReciprocalLengthUnit.InverseMicroinch, true, new string[]{"µin⁻¹", "1/µin"});
            yield return ("en-US", ReciprocalLengthUnit.InverseMil, true, new string[]{"mil⁻¹", "1/mil"});
            yield return ("en-US", ReciprocalLengthUnit.InverseMile, true, new string[]{"mi⁻¹", "1/mi"});
            yield return ("en-US", ReciprocalLengthUnit.InverseMillimeter, true, new string[]{"mm⁻¹", "1/mm"});
            yield return ("en-US", ReciprocalLengthUnit.InverseUsSurveyFoot, true, new string[]{"ftUS⁻¹", "1/ftUS"});
            yield return ("en-US", ReciprocalLengthUnit.InverseYard, true, new string[]{"yd⁻¹", "1/yd"});
            yield return ("en-US", RelativeHumidityUnit.Percent, true, new string[]{"%RH"});
            yield return ("en-US", RotationalAccelerationUnit.DegreePerSecondSquared, true, new string[]{"°/s²", "deg/s²"});
            yield return ("en-US", RotationalAccelerationUnit.RadianPerSecondSquared, true, new string[]{"rad/s²"});
            yield return ("en-US", RotationalAccelerationUnit.RevolutionPerMinutePerSecond, true, new string[]{"rpm/s"});
            yield return ("en-US", RotationalAccelerationUnit.RevolutionPerSecondSquared, true, new string[]{"r/s²"});
            yield return ("en-US", RotationalSpeedUnit.CentiradianPerSecond, true, new string[]{"crad/s"});
            yield return ("ru-RU", RotationalSpeedUnit.CentiradianPerSecond, true, new string[]{"срад/с"});
            yield return ("en-US", RotationalSpeedUnit.DeciradianPerSecond, true, new string[]{"drad/s"});
            yield return ("ru-RU", RotationalSpeedUnit.DeciradianPerSecond, true, new string[]{"драд/с"});
            yield return ("en-US", RotationalSpeedUnit.DegreePerMinute, true, new string[]{"°/min", "deg/min"});
            yield return ("en-US", RotationalSpeedUnit.DegreePerSecond, true, new string[]{"°/s", "deg/s"});
            yield return ("ru-RU", RotationalSpeedUnit.DegreePerSecond, true, new string[]{"°/с"});
            yield return ("en-US", RotationalSpeedUnit.MicrodegreePerSecond, true, new string[]{"µ°/s", "µdeg/s"});
            yield return ("ru-RU", RotationalSpeedUnit.MicrodegreePerSecond, true, new string[]{"мк°/с"});
            yield return ("en-US", RotationalSpeedUnit.MicroradianPerSecond, true, new string[]{"µrad/s"});
            yield return ("ru-RU", RotationalSpeedUnit.MicroradianPerSecond, true, new string[]{"мкрад/с"});
            yield return ("en-US", RotationalSpeedUnit.MillidegreePerSecond, true, new string[]{"m°/s", "mdeg/s"});
            yield return ("ru-RU", RotationalSpeedUnit.MillidegreePerSecond, true, new string[]{"м°/с"});
            yield return ("en-US", RotationalSpeedUnit.MilliradianPerSecond, true, new string[]{"mrad/s"});
            yield return ("ru-RU", RotationalSpeedUnit.MilliradianPerSecond, true, new string[]{"мрад/с"});
            yield return ("en-US", RotationalSpeedUnit.NanodegreePerSecond, true, new string[]{"n°/s", "ndeg/s"});
            yield return ("ru-RU", RotationalSpeedUnit.NanodegreePerSecond, true, new string[]{"н°/с"});
            yield return ("en-US", RotationalSpeedUnit.NanoradianPerSecond, true, new string[]{"nrad/s"});
            yield return ("ru-RU", RotationalSpeedUnit.NanoradianPerSecond, true, new string[]{"нрад/с"});
            yield return ("en-US", RotationalSpeedUnit.RadianPerSecond, true, new string[]{"rad/s"});
            yield return ("ru-RU", RotationalSpeedUnit.RadianPerSecond, true, new string[]{"рад/с"});
            yield return ("en-US", RotationalSpeedUnit.RevolutionPerMinute, true, new string[]{"rpm", "r/min"});
            yield return ("ru-RU", RotationalSpeedUnit.RevolutionPerMinute, true, new string[]{"об/мин"});
            yield return ("en-US", RotationalSpeedUnit.RevolutionPerSecond, true, new string[]{"r/s"});
            yield return ("ru-RU", RotationalSpeedUnit.RevolutionPerSecond, true, new string[]{"об/с"});
            yield return ("en-US", RotationalStiffnessUnit.CentinewtonMeterPerDegree, true, new string[]{"cN·m/deg", "cNm/deg", "cN·m/°", "cNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.CentinewtonMillimeterPerDegree, true, new string[]{"cN·mm/deg", "cNmm/deg", "cN·mm/°", "cNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.CentinewtonMillimeterPerRadian, true, new string[]{"cN·mm/rad", "cNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.DecanewtonMeterPerDegree, true, new string[]{"daN·m/deg", "daNm/deg", "daN·m/°", "daNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.DecanewtonMillimeterPerDegree, true, new string[]{"daN·mm/deg", "daNmm/deg", "daN·mm/°", "daNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.DecanewtonMillimeterPerRadian, true, new string[]{"daN·mm/rad", "daNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.DecinewtonMeterPerDegree, true, new string[]{"dN·m/deg", "dNm/deg", "dN·m/°", "dNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.DecinewtonMillimeterPerDegree, true, new string[]{"dN·mm/deg", "dNmm/deg", "dN·mm/°", "dNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.DecinewtonMillimeterPerRadian, true, new string[]{"dN·mm/rad", "dNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.KilonewtonMeterPerDegree, true, new string[]{"kN·m/deg", "kNm/deg", "kN·m/°", "kNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.KilonewtonMeterPerRadian, true, new string[]{"kN·m/rad", "kNm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.KilonewtonMillimeterPerDegree, true, new string[]{"kN·mm/deg", "kNmm/deg", "kN·mm/°", "kNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.KilonewtonMillimeterPerRadian, true, new string[]{"kN·mm/rad", "kNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.KilopoundForceFootPerDegrees, true, new string[]{"kipf·ft/°", "kip·ft/°g", "k·ft/°", "kipf·ft/deg", "kip·ft/deg", "k·ft/deg"});
            yield return ("en-US", RotationalStiffnessUnit.MeganewtonMeterPerDegree, true, new string[]{"MN·m/deg", "MNm/deg", "MN·m/°", "MNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.MeganewtonMeterPerRadian, true, new string[]{"MN·m/rad", "MNm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.MeganewtonMillimeterPerDegree, true, new string[]{"MN·mm/deg", "MNmm/deg", "MN·mm/°", "MNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.MeganewtonMillimeterPerRadian, true, new string[]{"MN·mm/rad", "MNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.MicronewtonMeterPerDegree, true, new string[]{"µN·m/deg", "µNm/deg", "µN·m/°", "µNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.MicronewtonMillimeterPerDegree, true, new string[]{"µN·mm/deg", "µNmm/deg", "µN·mm/°", "µNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.MicronewtonMillimeterPerRadian, true, new string[]{"µN·mm/rad", "µNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.MillinewtonMeterPerDegree, true, new string[]{"mN·m/deg", "mNm/deg", "mN·m/°", "mNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.MillinewtonMillimeterPerDegree, true, new string[]{"mN·mm/deg", "mNmm/deg", "mN·mm/°", "mNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.MillinewtonMillimeterPerRadian, true, new string[]{"mN·mm/rad", "mNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.NanonewtonMeterPerDegree, true, new string[]{"nN·m/deg", "nNm/deg", "nN·m/°", "nNm/°"});
            yield return ("en-US", RotationalStiffnessUnit.NanonewtonMillimeterPerDegree, true, new string[]{"nN·mm/deg", "nNmm/deg", "nN·mm/°", "nNmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.NanonewtonMillimeterPerRadian, true, new string[]{"nN·mm/rad", "nNmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.NewtonMeterPerDegree, true, new string[]{"N·m/deg", "Nm/deg", "N·m/°", "Nm/°"});
            yield return ("en-US", RotationalStiffnessUnit.NewtonMeterPerRadian, true, new string[]{"N·m/rad", "Nm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.NewtonMillimeterPerDegree, true, new string[]{"N·mm/deg", "Nmm/deg", "N·mm/°", "Nmm/°"});
            yield return ("en-US", RotationalStiffnessUnit.NewtonMillimeterPerRadian, true, new string[]{"N·mm/rad", "Nmm/rad"});
            yield return ("en-US", RotationalStiffnessUnit.PoundForceFeetPerRadian, true, new string[]{"lbf·ft/rad"});
            yield return ("en-US", RotationalStiffnessUnit.PoundForceFootPerDegrees, true, new string[]{"lbf·ft/deg"});
            yield return ("en-US", RotationalStiffnessPerLengthUnit.KilonewtonMeterPerRadianPerMeter, true, new string[]{"kN·m/rad/m", "kNm/rad/m"});
            yield return ("en-US", RotationalStiffnessPerLengthUnit.KilopoundForceFootPerDegreesPerFoot, true, new string[]{"kipf·ft/°/ft", "kip·ft/°/ft", "k·ft/°/ft", "kipf·ft/deg/ft", "kip·ft/deg/ft", "k·ft/deg/ft"});
            yield return ("en-US", RotationalStiffnessPerLengthUnit.MeganewtonMeterPerRadianPerMeter, true, new string[]{"MN·m/rad/m", "MNm/rad/m"});
            yield return ("en-US", RotationalStiffnessPerLengthUnit.NewtonMeterPerRadianPerMeter, true, new string[]{"N·m/rad/m", "Nm/rad/m"});
            yield return ("en-US", RotationalStiffnessPerLengthUnit.PoundForceFootPerDegreesPerFoot, true, new string[]{"lbf·ft/deg/ft"});
            yield return ("en-US", ScalarUnit.Amount, true, new string[]{""});
            yield return ("en-US", SolidAngleUnit.Steradian, true, new string[]{"sr"});
            yield return ("en-US", SpecificEnergyUnit.BtuPerPound, true, new string[]{"btu/lb"});
            yield return ("en-US", SpecificEnergyUnit.CaloriePerGram, true, new string[]{"cal/g"});
            yield return ("en-US", SpecificEnergyUnit.GigawattDayPerKilogram, true, new string[]{"GWd/kg"});
            yield return ("en-US", SpecificEnergyUnit.GigawattDayPerShortTon, true, new string[]{"GWd/ST"});
            yield return ("en-US", SpecificEnergyUnit.GigawattDayPerTonne, true, new string[]{"GWd/t"});
            yield return ("en-US", SpecificEnergyUnit.GigawattHourPerKilogram, true, new string[]{"GWh/kg"});
            yield return ("en-US", SpecificEnergyUnit.JoulePerKilogram, true, new string[]{"J/kg"});
            yield return ("en-US", SpecificEnergyUnit.KilocaloriePerGram, true, new string[]{"kcal/g"});
            yield return ("en-US", SpecificEnergyUnit.KilojoulePerKilogram, true, new string[]{"kJ/kg"});
            yield return ("en-US", SpecificEnergyUnit.KilowattDayPerKilogram, true, new string[]{"kWd/kg"});
            yield return ("en-US", SpecificEnergyUnit.KilowattDayPerShortTon, true, new string[]{"kWd/ST"});
            yield return ("en-US", SpecificEnergyUnit.KilowattDayPerTonne, true, new string[]{"kWd/t"});
            yield return ("en-US", SpecificEnergyUnit.KilowattHourPerKilogram, true, new string[]{"kWh/kg"});
            yield return ("en-US", SpecificEnergyUnit.MegajoulePerKilogram, true, new string[]{"MJ/kg"});
            yield return ("en-US", SpecificEnergyUnit.MegawattDayPerKilogram, true, new string[]{"MWd/kg"});
            yield return ("en-US", SpecificEnergyUnit.MegawattDayPerShortTon, true, new string[]{"MWd/ST"});
            yield return ("en-US", SpecificEnergyUnit.MegawattDayPerTonne, true, new string[]{"MWd/t"});
            yield return ("en-US", SpecificEnergyUnit.MegawattHourPerKilogram, true, new string[]{"MWh/kg"});
            yield return ("en-US", SpecificEnergyUnit.TerawattDayPerKilogram, true, new string[]{"TWd/kg"});
            yield return ("en-US", SpecificEnergyUnit.TerawattDayPerShortTon, true, new string[]{"TWd/ST"});
            yield return ("en-US", SpecificEnergyUnit.TerawattDayPerTonne, true, new string[]{"TWd/t"});
            yield return ("en-US", SpecificEnergyUnit.WattDayPerKilogram, true, new string[]{"Wd/kg"});
            yield return ("en-US", SpecificEnergyUnit.WattDayPerShortTon, true, new string[]{"Wd/ST"});
            yield return ("en-US", SpecificEnergyUnit.WattDayPerTonne, true, new string[]{"Wd/t"});
            yield return ("en-US", SpecificEnergyUnit.WattHourPerKilogram, true, new string[]{"Wh/kg"});
            yield return ("en-US", SpecificEntropyUnit.BtuPerPoundFahrenheit, true, new string[]{"BTU/lb·°F", "BTU/lbm·°F"});
            yield return ("en-US", SpecificEntropyUnit.CaloriePerGramKelvin, true, new string[]{"cal/g.K"});
            yield return ("en-US", SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, true, new string[]{"J/kg.C"});
            yield return ("en-US", SpecificEntropyUnit.JoulePerKilogramKelvin, true, new string[]{"J/kg.K"});
            yield return ("en-US", SpecificEntropyUnit.KilocaloriePerGramKelvin, true, new string[]{"kcal/g.K"});
            yield return ("en-US", SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, true, new string[]{"kJ/kg.C"});
            yield return ("en-US", SpecificEntropyUnit.KilojoulePerKilogramKelvin, true, new string[]{"kJ/kg.K"});
            yield return ("en-US", SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, true, new string[]{"MJ/kg.C"});
            yield return ("en-US", SpecificEntropyUnit.MegajoulePerKilogramKelvin, true, new string[]{"MJ/kg.K"});
            yield return ("en-US", SpecificFuelConsumptionUnit.GramPerKiloNewtonSecond, true, new string[]{"g/(kN�s)"});
            yield return ("en-US", SpecificFuelConsumptionUnit.KilogramPerKilogramForceHour, true, new string[]{"kg/(kgf�h)"});
            yield return ("en-US", SpecificFuelConsumptionUnit.KilogramPerKiloNewtonSecond, true, new string[]{"kg/(kN�s)"});
            yield return ("en-US", SpecificFuelConsumptionUnit.PoundMassPerPoundForceHour, true, new string[]{"lb/(lbf�h)"});
            yield return ("en-US", SpecificVolumeUnit.CubicFootPerPound, true, new string[]{"ft³/lb"});
            yield return ("en-US", SpecificVolumeUnit.CubicMeterPerKilogram, true, new string[]{"m³/kg"});
            yield return ("en-US", SpecificVolumeUnit.MillicubicMeterPerKilogram, true, new string[]{"mm³/kg"});
            yield return ("en-US", SpecificWeightUnit.KilogramForcePerCubicCentimeter, true, new string[]{"kgf/cm³"});
            yield return ("en-US", SpecificWeightUnit.KilogramForcePerCubicMeter, true, new string[]{"kgf/m³"});
            yield return ("en-US", SpecificWeightUnit.KilogramForcePerCubicMillimeter, true, new string[]{"kgf/mm³"});
            yield return ("en-US", SpecificWeightUnit.KilonewtonPerCubicCentimeter, true, new string[]{"kN/cm³"});
            yield return ("en-US", SpecificWeightUnit.KilonewtonPerCubicMeter, true, new string[]{"kN/m³"});
            yield return ("en-US", SpecificWeightUnit.KilonewtonPerCubicMillimeter, true, new string[]{"kN/mm³"});
            yield return ("en-US", SpecificWeightUnit.KilopoundForcePerCubicFoot, true, new string[]{"kipf/ft³"});
            yield return ("en-US", SpecificWeightUnit.KilopoundForcePerCubicInch, true, new string[]{"kipf/in³"});
            yield return ("en-US", SpecificWeightUnit.MeganewtonPerCubicMeter, true, new string[]{"MN/m³"});
            yield return ("en-US", SpecificWeightUnit.NewtonPerCubicCentimeter, true, new string[]{"N/cm³"});
            yield return ("en-US", SpecificWeightUnit.NewtonPerCubicMeter, true, new string[]{"N/m³"});
            yield return ("en-US", SpecificWeightUnit.NewtonPerCubicMillimeter, true, new string[]{"N/mm³"});
            yield return ("en-US", SpecificWeightUnit.PoundForcePerCubicFoot, true, new string[]{"lbf/ft³"});
            yield return ("en-US", SpecificWeightUnit.PoundForcePerCubicInch, true, new string[]{"lbf/in³"});
            yield return ("en-US", SpecificWeightUnit.TonneForcePerCubicCentimeter, true, new string[]{"tf/cm³"});
            yield return ("en-US", SpecificWeightUnit.TonneForcePerCubicMeter, true, new string[]{"tf/m³"});
            yield return ("en-US", SpecificWeightUnit.TonneForcePerCubicMillimeter, true, new string[]{"tf/mm³"});
            yield return ("en-US", SpeedUnit.CentimeterPerHour, true, new string[]{"cm/h"});
            yield return ("ru-RU", SpeedUnit.CentimeterPerHour, true, new string[]{"см/ч"});
            yield return ("en-US", SpeedUnit.CentimeterPerMinute, true, new string[]{"cm/min"});
            yield return ("ru-RU", SpeedUnit.CentimeterPerMinute, true, new string[]{"см/мин"});
            yield return ("en-US", SpeedUnit.CentimeterPerSecond, true, new string[]{"cm/s"});
            yield return ("ru-RU", SpeedUnit.CentimeterPerSecond, true, new string[]{"см/с"});
            yield return ("en-US", SpeedUnit.DecimeterPerMinute, true, new string[]{"dm/min"});
            yield return ("ru-RU", SpeedUnit.DecimeterPerMinute, true, new string[]{"дм/мин"});
            yield return ("en-US", SpeedUnit.DecimeterPerSecond, true, new string[]{"dm/s"});
            yield return ("ru-RU", SpeedUnit.DecimeterPerSecond, true, new string[]{"дм/с"});
            yield return ("en-US", SpeedUnit.FootPerHour, true, new string[]{"ft/h"});
            yield return ("ru-RU", SpeedUnit.FootPerHour, true, new string[]{"фут/ч"});
            yield return ("en-US", SpeedUnit.FootPerMinute, true, new string[]{"ft/min"});
            yield return ("ru-RU", SpeedUnit.FootPerMinute, true, new string[]{"фут/мин"});
            yield return ("en-US", SpeedUnit.FootPerSecond, true, new string[]{"ft/s"});
            yield return ("ru-RU", SpeedUnit.FootPerSecond, true, new string[]{"фут/с"});
            yield return ("en-US", SpeedUnit.InchPerHour, true, new string[]{"in/h"});
            yield return ("en-US", SpeedUnit.InchPerMinute, true, new string[]{"in/min"});
            yield return ("en-US", SpeedUnit.InchPerSecond, true, new string[]{"in/s"});
            yield return ("en-US", SpeedUnit.KilometerPerHour, true, new string[]{"km/h"});
            yield return ("ru-RU", SpeedUnit.KilometerPerHour, true, new string[]{"км/ч"});
            yield return ("en-US", SpeedUnit.KilometerPerMinute, true, new string[]{"km/min"});
            yield return ("ru-RU", SpeedUnit.KilometerPerMinute, true, new string[]{"км/мин"});
            yield return ("en-US", SpeedUnit.KilometerPerSecond, true, new string[]{"km/s"});
            yield return ("ru-RU", SpeedUnit.KilometerPerSecond, true, new string[]{"км/с"});
            yield return ("en-US", SpeedUnit.Knot, true, new string[]{"kn", "kt", "knot", "knots"});
            yield return ("ru-RU", SpeedUnit.Knot, true, new string[]{"уз."});
            yield return ("en-US", SpeedUnit.MeterPerHour, true, new string[]{"m/h"});
            yield return ("ru-RU", SpeedUnit.MeterPerHour, true, new string[]{"м/ч"});
            yield return ("en-US", SpeedUnit.MeterPerMinute, true, new string[]{"m/min"});
            yield return ("ru-RU", SpeedUnit.MeterPerMinute, true, new string[]{"м/мин"});
            yield return ("en-US", SpeedUnit.MeterPerSecond, true, new string[]{"m/s"});
            yield return ("ru-RU", SpeedUnit.MeterPerSecond, true, new string[]{"м/с"});
            yield return ("en-US", SpeedUnit.MicrometerPerMinute, true, new string[]{"µm/min"});
            yield return ("ru-RU", SpeedUnit.MicrometerPerMinute, true, new string[]{"мкм/мин"});
            yield return ("en-US", SpeedUnit.MicrometerPerSecond, true, new string[]{"µm/s"});
            yield return ("ru-RU", SpeedUnit.MicrometerPerSecond, true, new string[]{"мкм/с"});
            yield return ("en-US", SpeedUnit.MilePerHour, true, new string[]{"mph"});
            yield return ("ru-RU", SpeedUnit.MilePerHour, true, new string[]{"миль/ч"});
            yield return ("en-US", SpeedUnit.MillimeterPerHour, true, new string[]{"mm/h"});
            yield return ("ru-RU", SpeedUnit.MillimeterPerHour, true, new string[]{"мм/ч"});
            yield return ("en-US", SpeedUnit.MillimeterPerMinute, true, new string[]{"mm/min"});
            yield return ("ru-RU", SpeedUnit.MillimeterPerMinute, true, new string[]{"мм/мин"});
            yield return ("en-US", SpeedUnit.MillimeterPerSecond, true, new string[]{"mm/s"});
            yield return ("ru-RU", SpeedUnit.MillimeterPerSecond, true, new string[]{"мм/с"});
            yield return ("en-US", SpeedUnit.NanometerPerMinute, true, new string[]{"nm/min"});
            yield return ("ru-RU", SpeedUnit.NanometerPerMinute, true, new string[]{"нм/мин"});
            yield return ("en-US", SpeedUnit.NanometerPerSecond, true, new string[]{"nm/s"});
            yield return ("ru-RU", SpeedUnit.NanometerPerSecond, true, new string[]{"нм/с"});
            yield return ("en-US", SpeedUnit.UsSurveyFootPerHour, true, new string[]{"ftUS/h"});
            yield return ("en-US", SpeedUnit.UsSurveyFootPerMinute, true, new string[]{"ftUS/min"});
            yield return ("en-US", SpeedUnit.UsSurveyFootPerSecond, true, new string[]{"ftUS/s"});
            yield return ("en-US", SpeedUnit.YardPerHour, true, new string[]{"yd/h"});
            yield return ("en-US", SpeedUnit.YardPerMinute, true, new string[]{"yd/min"});
            yield return ("en-US", SpeedUnit.YardPerSecond, true, new string[]{"yd/s"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicCentimeterPerMinute, true, new string[]{"sccm"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicFootPerHour, true, new string[]{"scfh"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicFootPerMinute, true, new string[]{"scfm"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicFootPerSecond, true, new string[]{"Sft³/s"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicMeterPerDay, true, new string[]{"Sm³/d"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicMeterPerHour, true, new string[]{"Sm³/h"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicMeterPerMinute, true, new string[]{"Sm³/min"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardCubicMeterPerSecond, true, new string[]{"Sm³/s"});
            yield return ("en-US", StandardVolumeFlowUnit.StandardLiterPerMinute, true, new string[]{"slm"});
            yield return ("en-US", TemperatureUnit.DegreeCelsius, true, new string[]{"°C"});
            yield return ("en-US", TemperatureUnit.DegreeDelisle, true, new string[]{"°De"});
            yield return ("en-US", TemperatureUnit.DegreeFahrenheit, true, new string[]{"°F"});
            yield return ("en-US", TemperatureUnit.DegreeNewton, true, new string[]{"°N"});
            yield return ("en-US", TemperatureUnit.DegreeRankine, true, new string[]{"°R"});
            yield return ("en-US", TemperatureUnit.DegreeReaumur, true, new string[]{"°Ré"});
            yield return ("en-US", TemperatureUnit.DegreeRoemer, true, new string[]{"°Rø"});
            yield return ("en-US", TemperatureUnit.Kelvin, true, new string[]{"K"});
            yield return ("en-US", TemperatureUnit.MillidegreeCelsius, true, new string[]{"m°C"});
            yield return ("en-US", TemperatureUnit.SolarTemperature, true, new string[]{"T⊙"});
            yield return ("en-US", TemperatureChangeRateUnit.CentidegreeCelsiusPerSecond, true, new string[]{"c°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.DecadegreeCelsiusPerSecond, true, new string[]{"da°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.DecidegreeCelsiusPerSecond, true, new string[]{"d°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.DegreeCelsiusPerMinute, true, new string[]{"°C/min"});
            yield return ("en-US", TemperatureChangeRateUnit.DegreeCelsiusPerSecond, true, new string[]{"°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.HectodegreeCelsiusPerSecond, true, new string[]{"h°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.KilodegreeCelsiusPerSecond, true, new string[]{"k°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.MicrodegreeCelsiusPerSecond, true, new string[]{"µ°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.MillidegreeCelsiusPerSecond, true, new string[]{"m°C/s"});
            yield return ("en-US", TemperatureChangeRateUnit.NanodegreeCelsiusPerSecond, true, new string[]{"n°C/s"});
            yield return ("en-US", TemperatureDeltaUnit.DegreeCelsius, true, new string[]{"∆°C"});
            yield return ("en-US", TemperatureDeltaUnit.DegreeDelisle, true, new string[]{"∆°De"});
            yield return ("en-US", TemperatureDeltaUnit.DegreeFahrenheit, true, new string[]{"∆°F"});
            yield return ("en-US", TemperatureDeltaUnit.DegreeNewton, true, new string[]{"∆°N"});
            yield return ("en-US", TemperatureDeltaUnit.DegreeRankine, true, new string[]{"∆°R"});
            yield return ("en-US", TemperatureDeltaUnit.DegreeReaumur, true, new string[]{"∆°Ré"});
            yield return ("en-US", TemperatureDeltaUnit.DegreeRoemer, true, new string[]{"∆°Rø"});
            yield return ("en-US", TemperatureDeltaUnit.Kelvin, true, new string[]{"∆K"});
            yield return ("en-US", TemperatureDeltaUnit.MillidegreeCelsius, true, new string[]{"∆m°C"});
            yield return ("en-US", TemperatureGradientUnit.DegreeCelsiusPerKilometer, true, new string[]{"∆°C/km"});
            yield return ("en-US", TemperatureGradientUnit.DegreeCelsiusPerMeter, true, new string[]{"∆°C/m"});
            yield return ("en-US", TemperatureGradientUnit.DegreeFahrenheitPerFoot, true, new string[]{"∆°F/ft"});
            yield return ("en-US", TemperatureGradientUnit.KelvinPerMeter, true, new string[]{"∆°K/m"});
            yield return ("en-US", ThermalConductivityUnit.BtuPerHourFootFahrenheit, true, new string[]{"BTU/h·ft·°F"});
            yield return ("en-US", ThermalConductivityUnit.WattPerMeterKelvin, true, new string[]{"W/m·K"});
            yield return ("en-US", ThermalResistanceUnit.HourSquareFeetDegreeFahrenheitPerBtu, true, new string[]{"Hrft²°F/Btu"});
            yield return ("en-US", ThermalResistanceUnit.SquareCentimeterHourDegreeCelsiusPerKilocalorie, true, new string[]{"cm²Hr°C/kcal"});
            yield return ("en-US", ThermalResistanceUnit.SquareCentimeterKelvinPerWatt, true, new string[]{"cm²K/W"});
            yield return ("en-US", ThermalResistanceUnit.SquareMeterDegreeCelsiusPerWatt, true, new string[]{"m²°C/W"});
            yield return ("en-US", ThermalResistanceUnit.SquareMeterKelvinPerKilowatt, true, new string[]{"m²K/kW"});
            yield return ("en-US", ThermalResistanceUnit.SquareMeterKelvinPerWatt, true, new string[]{"m²K/W"});
            yield return ("en-US", TorqueUnit.GramForceCentimeter, true, new string[]{"gf·cm"});
            yield return ("en-US", TorqueUnit.GramForceMeter, true, new string[]{"gf·m"});
            yield return ("en-US", TorqueUnit.GramForceMillimeter, true, new string[]{"gf·mm"});
            yield return ("en-US", TorqueUnit.KilogramForceCentimeter, true, new string[]{"kgf·cm"});
            yield return ("en-US", TorqueUnit.KilogramForceMeter, true, new string[]{"kgf·m"});
            yield return ("en-US", TorqueUnit.KilogramForceMillimeter, true, new string[]{"kgf·mm"});
            yield return ("en-US", TorqueUnit.KilonewtonCentimeter, true, new string[]{"kN·cm"});
            yield return ("en-US", TorqueUnit.KilonewtonMeter, true, new string[]{"kN·m"});
            yield return ("ru-RU", TorqueUnit.KilonewtonMeter, true, new string[]{"кН·м"});
            yield return ("en-US", TorqueUnit.KilonewtonMillimeter, true, new string[]{"kN·mm"});
            yield return ("en-US", TorqueUnit.KilopoundForceFoot, true, new string[]{"kipf·ft"});
            yield return ("en-US", TorqueUnit.KilopoundForceInch, true, new string[]{"kipf·in"});
            yield return ("en-US", TorqueUnit.MeganewtonCentimeter, true, new string[]{"MN·cm"});
            yield return ("en-US", TorqueUnit.MeganewtonMeter, true, new string[]{"MN·m"});
            yield return ("ru-RU", TorqueUnit.MeganewtonMeter, true, new string[]{"МН·м"});
            yield return ("en-US", TorqueUnit.MeganewtonMillimeter, true, new string[]{"MN·mm"});
            yield return ("en-US", TorqueUnit.MegapoundForceFoot, true, new string[]{"Mlbf·ft"});
            yield return ("en-US", TorqueUnit.MegapoundForceInch, true, new string[]{"Mlbf·in"});
            yield return ("en-US", TorqueUnit.NewtonCentimeter, true, new string[]{"N·cm"});
            yield return ("en-US", TorqueUnit.NewtonMeter, true, new string[]{"N·m"});
            yield return ("ru-RU", TorqueUnit.NewtonMeter, true, new string[]{"Н·м"});
            yield return ("en-US", TorqueUnit.NewtonMillimeter, true, new string[]{"N·mm"});
            yield return ("en-US", TorqueUnit.PoundalFoot, true, new string[]{"pdl·ft"});
            yield return ("en-US", TorqueUnit.PoundForceFoot, true, new string[]{"lbf·ft"});
            yield return ("en-US", TorqueUnit.PoundForceInch, true, new string[]{"lbf·in"});
            yield return ("en-US", TorqueUnit.TonneForceCentimeter, true, new string[]{"tf·cm"});
            yield return ("en-US", TorqueUnit.TonneForceMeter, true, new string[]{"tf·m"});
            yield return ("en-US", TorqueUnit.TonneForceMillimeter, true, new string[]{"tf·mm"});
            yield return ("en-US", TorquePerLengthUnit.KilogramForceCentimeterPerMeter, true, new string[]{"kgf·cm/m"});
            yield return ("en-US", TorquePerLengthUnit.KilogramForceMeterPerMeter, true, new string[]{"kgf·m/m"});
            yield return ("en-US", TorquePerLengthUnit.KilogramForceMillimeterPerMeter, true, new string[]{"kgf·mm/m"});
            yield return ("en-US", TorquePerLengthUnit.KilonewtonCentimeterPerMeter, true, new string[]{"kN·cm/m"});
            yield return ("en-US", TorquePerLengthUnit.KilonewtonMeterPerMeter, true, new string[]{"kN·m/m"});
            yield return ("ru-RU", TorquePerLengthUnit.KilonewtonMeterPerMeter, true, new string[]{"кН·м/м"});
            yield return ("en-US", TorquePerLengthUnit.KilonewtonMillimeterPerMeter, true, new string[]{"kN·mm/m"});
            yield return ("en-US", TorquePerLengthUnit.KilopoundForceFootPerFoot, true, new string[]{"kipf·ft/ft"});
            yield return ("en-US", TorquePerLengthUnit.KilopoundForceInchPerFoot, true, new string[]{"kipf·in/ft"});
            yield return ("en-US", TorquePerLengthUnit.MeganewtonCentimeterPerMeter, true, new string[]{"MN·cm/m"});
            yield return ("en-US", TorquePerLengthUnit.MeganewtonMeterPerMeter, true, new string[]{"MN·m/m"});
            yield return ("ru-RU", TorquePerLengthUnit.MeganewtonMeterPerMeter, true, new string[]{"МН·м/м"});
            yield return ("en-US", TorquePerLengthUnit.MeganewtonMillimeterPerMeter, true, new string[]{"MN·mm/m"});
            yield return ("en-US", TorquePerLengthUnit.MegapoundForceFootPerFoot, true, new string[]{"Mlbf·ft/ft"});
            yield return ("en-US", TorquePerLengthUnit.MegapoundForceInchPerFoot, true, new string[]{"Mlbf·in/ft"});
            yield return ("en-US", TorquePerLengthUnit.NewtonCentimeterPerMeter, true, new string[]{"N·cm/m"});
            yield return ("en-US", TorquePerLengthUnit.NewtonMeterPerMeter, true, new string[]{"N·m/m"});
            yield return ("ru-RU", TorquePerLengthUnit.NewtonMeterPerMeter, true, new string[]{"Н·м/м"});
            yield return ("en-US", TorquePerLengthUnit.NewtonMillimeterPerMeter, true, new string[]{"N·mm/m"});
            yield return ("en-US", TorquePerLengthUnit.PoundForceFootPerFoot, true, new string[]{"lbf·ft/ft"});
            yield return ("en-US", TorquePerLengthUnit.PoundForceInchPerFoot, true, new string[]{"lbf·in/ft"});
            yield return ("en-US", TorquePerLengthUnit.TonneForceCentimeterPerMeter, true, new string[]{"tf·cm/m"});
            yield return ("en-US", TorquePerLengthUnit.TonneForceMeterPerMeter, true, new string[]{"tf·m/m"});
            yield return ("en-US", TorquePerLengthUnit.TonneForceMillimeterPerMeter, true, new string[]{"tf·mm/m"});
            yield return ("en-US", TurbidityUnit.NTU, true, new string[]{"NTU"});
            yield return ("en-US", VitaminAUnit.InternationalUnit, true, new string[]{"IU"});
            yield return ("en-US", VolumeUnit.AcreFoot, true, new string[]{"ac-ft", "acre-foot", "acre-feet"});
            yield return ("en-US", VolumeUnit.AuTablespoon, true, new string[]{""});
            yield return ("ru-RU", VolumeUnit.AuTablespoon, true, new string[]{""});
            yield return ("nb-NO", VolumeUnit.AuTablespoon, true, new string[]{""});
            yield return ("en-US", VolumeUnit.BoardFoot, true, new string[]{"bf", "board foot", "board feet"});
            yield return ("fr-CA", VolumeUnit.BoardFoot, true, new string[]{"pmp", "pied-planche", "pied de planche"});
            yield return ("en-US", VolumeUnit.Centiliter, true, new string[]{"cl"});
            yield return ("ru-RU", VolumeUnit.Centiliter, true, new string[]{"сл"});
            yield return ("en-US", VolumeUnit.CubicCentimeter, true, new string[]{"cm³"});
            yield return ("ru-RU", VolumeUnit.CubicCentimeter, true, new string[]{"см³"});
            yield return ("en-US", VolumeUnit.CubicDecimeter, true, new string[]{"dm³"});
            yield return ("ru-RU", VolumeUnit.CubicDecimeter, true, new string[]{"дм³"});
            yield return ("en-US", VolumeUnit.CubicFoot, true, new string[]{"ft³"});
            yield return ("ru-RU", VolumeUnit.CubicFoot, true, new string[]{"фут³"});
            yield return ("en-US", VolumeUnit.CubicHectometer, true, new string[]{"hm³"});
            yield return ("ru-RU", VolumeUnit.CubicHectometer, true, new string[]{"гм³"});
            yield return ("en-US", VolumeUnit.CubicInch, true, new string[]{"in³"});
            yield return ("ru-RU", VolumeUnit.CubicInch, true, new string[]{"дюйм³"});
            yield return ("en-US", VolumeUnit.CubicKilometer, true, new string[]{"km³"});
            yield return ("ru-RU", VolumeUnit.CubicKilometer, true, new string[]{"км³"});
            yield return ("en-US", VolumeUnit.CubicMeter, true, new string[]{"m³"});
            yield return ("ru-RU", VolumeUnit.CubicMeter, true, new string[]{"м³"});
            yield return ("en-US", VolumeUnit.CubicMicrometer, true, new string[]{"µm³"});
            yield return ("ru-RU", VolumeUnit.CubicMicrometer, true, new string[]{"мкм³"});
            yield return ("en-US", VolumeUnit.CubicMile, true, new string[]{"mi³"});
            yield return ("ru-RU", VolumeUnit.CubicMile, true, new string[]{"миля³"});
            yield return ("en-US", VolumeUnit.CubicMillimeter, true, new string[]{"mm³"});
            yield return ("ru-RU", VolumeUnit.CubicMillimeter, true, new string[]{"мм³"});
            yield return ("en-US", VolumeUnit.CubicYard, true, new string[]{"yd³"});
            yield return ("ru-RU", VolumeUnit.CubicYard, true, new string[]{"ярд³"});
            yield return ("en-US", VolumeUnit.DecausGallon, true, new string[]{"dagal (U.S.)"});
            yield return ("ru-RU", VolumeUnit.DecausGallon, true, new string[]{"даАмериканский галлон"});
            yield return ("en-US", VolumeUnit.Deciliter, true, new string[]{"dl"});
            yield return ("ru-RU", VolumeUnit.Deciliter, true, new string[]{"дл"});
            yield return ("en-US", VolumeUnit.DeciusGallon, true, new string[]{"dgal (U.S.)"});
            yield return ("ru-RU", VolumeUnit.DeciusGallon, true, new string[]{"дАмериканский галлон"});
            yield return ("en-US", VolumeUnit.HectocubicFoot, true, new string[]{"hft³"});
            yield return ("ru-RU", VolumeUnit.HectocubicFoot, true, new string[]{"гфут³"});
            yield return ("en-US", VolumeUnit.HectocubicMeter, true, new string[]{"hm³"});
            yield return ("ru-RU", VolumeUnit.HectocubicMeter, true, new string[]{"гм³"});
            yield return ("en-US", VolumeUnit.Hectoliter, true, new string[]{"hl"});
            yield return ("ru-RU", VolumeUnit.Hectoliter, true, new string[]{"гл"});
            yield return ("en-US", VolumeUnit.HectousGallon, true, new string[]{"hgal (U.S.)"});
            yield return ("ru-RU", VolumeUnit.HectousGallon, true, new string[]{"гАмериканский галлон"});
            yield return ("en-US", VolumeUnit.ImperialBeerBarrel, true, new string[]{"bl (imp.)"});
            yield return ("en-US", VolumeUnit.ImperialGallon, true, new string[]{"gal (imp.)"});
            yield return ("ru-RU", VolumeUnit.ImperialGallon, true, new string[]{"Английский галлон"});
            yield return ("en-US", VolumeUnit.ImperialOunce, true, new string[]{"oz (imp.)"});
            yield return ("ru-RU", VolumeUnit.ImperialOunce, true, new string[]{"Английская унция"});
            yield return ("en-US", VolumeUnit.ImperialPint, true, new string[]{"pt (imp.)", "UK pt", "pt", "p"});
            yield return ("en-US", VolumeUnit.KilocubicFoot, true, new string[]{"kft³"});
            yield return ("ru-RU", VolumeUnit.KilocubicFoot, true, new string[]{"кфут³"});
            yield return ("en-US", VolumeUnit.KilocubicMeter, true, new string[]{"km³"});
            yield return ("ru-RU", VolumeUnit.KilocubicMeter, true, new string[]{"км³"});
            yield return ("en-US", VolumeUnit.KiloimperialGallon, true, new string[]{"kgal (imp.)"});
            yield return ("ru-RU", VolumeUnit.KiloimperialGallon, true, new string[]{"кАнглийский галлон"});
            yield return ("en-US", VolumeUnit.Kiloliter, true, new string[]{"kl"});
            yield return ("ru-RU", VolumeUnit.Kiloliter, true, new string[]{"кл"});
            yield return ("en-US", VolumeUnit.KilousGallon, true, new string[]{"kgal (U.S.)"});
            yield return ("ru-RU", VolumeUnit.KilousGallon, true, new string[]{"кАмериканский галлон"});
            yield return ("en-US", VolumeUnit.Liter, true, new string[]{"l"});
            yield return ("ru-RU", VolumeUnit.Liter, true, new string[]{"л"});
            yield return ("en-US", VolumeUnit.MegacubicFoot, true, new string[]{"Mft³"});
            yield return ("ru-RU", VolumeUnit.MegacubicFoot, true, new string[]{"Мфут³"});
            yield return ("en-US", VolumeUnit.MegaimperialGallon, true, new string[]{"Mgal (imp.)"});
            yield return ("ru-RU", VolumeUnit.MegaimperialGallon, true, new string[]{"МАнглийский галлон"});
            yield return ("en-US", VolumeUnit.Megaliter, true, new string[]{"Ml"});
            yield return ("ru-RU", VolumeUnit.Megaliter, true, new string[]{"Мл"});
            yield return ("en-US", VolumeUnit.MegausGallon, true, new string[]{"Mgal (U.S.)"});
            yield return ("ru-RU", VolumeUnit.MegausGallon, true, new string[]{"МАмериканский галлон"});
            yield return ("en-US", VolumeUnit.MetricCup, true, new string[]{""});
            yield return ("en-US", VolumeUnit.MetricTeaspoon, true, new string[]{"tsp", "t", "ts", "tspn", "t.", "ts.", "tsp.", "tspn.", "teaspoon"});
            yield return ("ru-RU", VolumeUnit.MetricTeaspoon, true, new string[]{""});
            yield return ("nb-NO", VolumeUnit.MetricTeaspoon, true, new string[]{""});
            yield return ("en-US", VolumeUnit.Microliter, true, new string[]{"µl"});
            yield return ("ru-RU", VolumeUnit.Microliter, true, new string[]{"мкл"});
            yield return ("en-US", VolumeUnit.Milliliter, true, new string[]{"ml"});
            yield return ("ru-RU", VolumeUnit.Milliliter, true, new string[]{"мл"});
            yield return ("en-US", VolumeUnit.OilBarrel, true, new string[]{"bbl"});
            yield return ("en-US", VolumeUnit.UkTablespoon, true, new string[]{""});
            yield return ("ru-RU", VolumeUnit.UkTablespoon, true, new string[]{""});
            yield return ("nb-NO", VolumeUnit.UkTablespoon, true, new string[]{""});
            yield return ("en-US", VolumeUnit.UsBeerBarrel, true, new string[]{"bl (U.S.)"});
            yield return ("en-US", VolumeUnit.UsCustomaryCup, true, new string[]{""});
            yield return ("en-US", VolumeUnit.UsGallon, true, new string[]{"gal (U.S.)"});
            yield return ("ru-RU", VolumeUnit.UsGallon, true, new string[]{"Американский галлон"});
            yield return ("en-US", VolumeUnit.UsLegalCup, true, new string[]{""});
            yield return ("en-US", VolumeUnit.UsOunce, true, new string[]{"oz (U.S.)"});
            yield return ("ru-RU", VolumeUnit.UsOunce, true, new string[]{"Американская унция"});
            yield return ("en-US", VolumeUnit.UsPint, true, new string[]{"pt (U.S.)"});
            yield return ("en-US", VolumeUnit.UsQuart, true, new string[]{"qt (U.S.)"});
            yield return ("en-US", VolumeUnit.UsTablespoon, true, new string[]{""});
            yield return ("ru-RU", VolumeUnit.UsTablespoon, true, new string[]{""});
            yield return ("nb-NO", VolumeUnit.UsTablespoon, true, new string[]{""});
            yield return ("en-US", VolumeUnit.UsTeaspoon, true, new string[]{""});
            yield return ("ru-RU", VolumeUnit.UsTeaspoon, true, new string[]{""});
            yield return ("nb-NO", VolumeUnit.UsTeaspoon, true, new string[]{""});
            yield return ("en-US", VolumeConcentrationUnit.CentilitersPerLiter, true, new string[]{"cL/L"});
            yield return ("en-US", VolumeConcentrationUnit.CentilitersPerMililiter, true, new string[]{"cL/mL"});
            yield return ("en-US", VolumeConcentrationUnit.DecilitersPerLiter, true, new string[]{"dL/L"});
            yield return ("en-US", VolumeConcentrationUnit.DecilitersPerMililiter, true, new string[]{"dL/mL"});
            yield return ("en-US", VolumeConcentrationUnit.DecimalFraction, true, new string[]{""});
            yield return ("en-US", VolumeConcentrationUnit.LitersPerLiter, true, new string[]{"L/L"});
            yield return ("en-US", VolumeConcentrationUnit.LitersPerMililiter, true, new string[]{"L/mL"});
            yield return ("en-US", VolumeConcentrationUnit.MicrolitersPerLiter, true, new string[]{"µL/L"});
            yield return ("en-US", VolumeConcentrationUnit.MicrolitersPerMililiter, true, new string[]{"µL/mL"});
            yield return ("en-US", VolumeConcentrationUnit.MillilitersPerLiter, true, new string[]{"mL/L"});
            yield return ("en-US", VolumeConcentrationUnit.MillilitersPerMililiter, true, new string[]{"mL/mL"});
            yield return ("en-US", VolumeConcentrationUnit.NanolitersPerLiter, true, new string[]{"nL/L"});
            yield return ("en-US", VolumeConcentrationUnit.NanolitersPerMililiter, true, new string[]{"nL/mL"});
            yield return ("en-US", VolumeConcentrationUnit.PartPerBillion, true, new string[]{"ppb"});
            yield return ("en-US", VolumeConcentrationUnit.PartPerMillion, true, new string[]{"ppm"});
            yield return ("en-US", VolumeConcentrationUnit.PartPerThousand, true, new string[]{"‰"});
            yield return ("en-US", VolumeConcentrationUnit.PartPerTrillion, true, new string[]{"ppt"});
            yield return ("en-US", VolumeConcentrationUnit.Percent, true, new string[]{"%", "% (v/v)"});
            yield return ("en-US", VolumeConcentrationUnit.PicolitersPerLiter, true, new string[]{"pL/L"});
            yield return ("en-US", VolumeConcentrationUnit.PicolitersPerMililiter, true, new string[]{"pL/mL"});
            yield return ("en-US", VolumeFlowUnit.AcreFootPerDay, true, new string[]{"af/d"});
            yield return ("en-US", VolumeFlowUnit.AcreFootPerHour, true, new string[]{"af/h"});
            yield return ("en-US", VolumeFlowUnit.AcreFootPerMinute, true, new string[]{"af/m"});
            yield return ("en-US", VolumeFlowUnit.AcreFootPerSecond, true, new string[]{"af/s"});
            yield return ("en-US", VolumeFlowUnit.CentiliterPerDay, true, new string[]{"cl/day", "cL/d", "cLPD"});
            yield return ("en-US", VolumeFlowUnit.CentiliterPerHour, true, new string[]{"cL/h", "cLPH"});
            yield return ("ru-RU", VolumeFlowUnit.CentiliterPerHour, true, new string[]{"сл/ч"});
            yield return ("en-US", VolumeFlowUnit.CentiliterPerMinute, true, new string[]{"cL/min", "cLPM"});
            yield return ("ru-RU", VolumeFlowUnit.CentiliterPerMinute, true, new string[]{"сл/мин"});
            yield return ("en-US", VolumeFlowUnit.CentiliterPerSecond, true, new string[]{"cL/s", "cLPS"});
            yield return ("ru-RU", VolumeFlowUnit.CentiliterPerSecond, true, new string[]{"сл/c"});
            yield return ("en-US", VolumeFlowUnit.CubicCentimeterPerMinute, true, new string[]{"cm³/min"});
            yield return ("ru-RU", VolumeFlowUnit.CubicCentimeterPerMinute, true, new string[]{"см³/мин"});
            yield return ("en-US", VolumeFlowUnit.CubicDecimeterPerMinute, true, new string[]{"dm³/min"});
            yield return ("ru-RU", VolumeFlowUnit.CubicDecimeterPerMinute, true, new string[]{"дм³/мин"});
            yield return ("en-US", VolumeFlowUnit.CubicFootPerHour, true, new string[]{"ft³/h", "cf/hr"});
            yield return ("en-US", VolumeFlowUnit.CubicFootPerMinute, true, new string[]{"ft³/min", "CFM"});
            yield return ("en-US", VolumeFlowUnit.CubicFootPerSecond, true, new string[]{"ft³/s"});
            yield return ("en-US", VolumeFlowUnit.CubicMeterPerDay, true, new string[]{"m³/d"});
            yield return ("en-US", VolumeFlowUnit.CubicMeterPerHour, true, new string[]{"m³/h"});
            yield return ("ru-RU", VolumeFlowUnit.CubicMeterPerHour, true, new string[]{"м³/ч"});
            yield return ("en-US", VolumeFlowUnit.CubicMeterPerMinute, true, new string[]{"m³/min"});
            yield return ("ru-RU", VolumeFlowUnit.CubicMeterPerMinute, true, new string[]{"м³/мин"});
            yield return ("en-US", VolumeFlowUnit.CubicMeterPerSecond, true, new string[]{"m³/s"});
            yield return ("ru-RU", VolumeFlowUnit.CubicMeterPerSecond, true, new string[]{"м³/с"});
            yield return ("en-US", VolumeFlowUnit.CubicMillimeterPerSecond, true, new string[]{"mm³/s"});
            yield return ("ru-RU", VolumeFlowUnit.CubicMillimeterPerSecond, true, new string[]{"мм³/с"});
            yield return ("en-US", VolumeFlowUnit.CubicYardPerDay, true, new string[]{"cy/day"});
            yield return ("en-US", VolumeFlowUnit.CubicYardPerHour, true, new string[]{"yd³/h"});
            yield return ("en-US", VolumeFlowUnit.CubicYardPerMinute, true, new string[]{"yd³/min"});
            yield return ("en-US", VolumeFlowUnit.CubicYardPerSecond, true, new string[]{"yd³/s"});
            yield return ("en-US", VolumeFlowUnit.DeciliterPerDay, true, new string[]{"dl/day", "dL/d", "dLPD"});
            yield return ("en-US", VolumeFlowUnit.DeciliterPerHour, true, new string[]{"dL/h", "dLPH"});
            yield return ("ru-RU", VolumeFlowUnit.DeciliterPerHour, true, new string[]{"дл/ч"});
            yield return ("en-US", VolumeFlowUnit.DeciliterPerMinute, true, new string[]{"dL/min", "dLPM"});
            yield return ("ru-RU", VolumeFlowUnit.DeciliterPerMinute, true, new string[]{"дл/мин"});
            yield return ("en-US", VolumeFlowUnit.DeciliterPerSecond, true, new string[]{"dL/s", "dLPS"});
            yield return ("ru-RU", VolumeFlowUnit.DeciliterPerSecond, true, new string[]{"дл/c"});
            yield return ("en-US", VolumeFlowUnit.KiloliterPerDay, true, new string[]{"kl/day", "kL/d", "kLPD"});
            yield return ("en-US", VolumeFlowUnit.KiloliterPerHour, true, new string[]{"kL/h", "kLPH"});
            yield return ("ru-RU", VolumeFlowUnit.KiloliterPerHour, true, new string[]{"кл/ч"});
            yield return ("en-US", VolumeFlowUnit.KiloliterPerMinute, true, new string[]{"kL/min", "kLPM"});
            yield return ("ru-RU", VolumeFlowUnit.KiloliterPerMinute, true, new string[]{"кл/мин"});
            yield return ("en-US", VolumeFlowUnit.KiloliterPerSecond, true, new string[]{"kL/s", "kLPS"});
            yield return ("ru-RU", VolumeFlowUnit.KiloliterPerSecond, true, new string[]{"кл/c"});
            yield return ("en-US", VolumeFlowUnit.KilousGallonPerMinute, true, new string[]{"kgal (U.S.)/min", "KGPM"});
            yield return ("en-US", VolumeFlowUnit.LiterPerDay, true, new string[]{"l/day", "L/d", "LPD"});
            yield return ("en-US", VolumeFlowUnit.LiterPerHour, true, new string[]{"L/h", "LPH"});
            yield return ("ru-RU", VolumeFlowUnit.LiterPerHour, true, new string[]{"л/ч"});
            yield return ("en-US", VolumeFlowUnit.LiterPerMinute, true, new string[]{"L/min", "LPM"});
            yield return ("ru-RU", VolumeFlowUnit.LiterPerMinute, true, new string[]{"л/мин"});
            yield return ("en-US", VolumeFlowUnit.LiterPerSecond, true, new string[]{"L/s", "LPS"});
            yield return ("ru-RU", VolumeFlowUnit.LiterPerSecond, true, new string[]{"л/c"});
            yield return ("en-US", VolumeFlowUnit.MegaliterPerDay, true, new string[]{"Ml/day", "ML/d", "MLPD"});
            yield return ("en-US", VolumeFlowUnit.MegaukGallonPerSecond, true, new string[]{"Mgal (imp.)/s"});
            yield return ("en-US", VolumeFlowUnit.MicroliterPerDay, true, new string[]{"µl/day", "µL/d", "µLPD"});
            yield return ("en-US", VolumeFlowUnit.MicroliterPerHour, true, new string[]{"µL/h", "µLPH"});
            yield return ("ru-RU", VolumeFlowUnit.MicroliterPerHour, true, new string[]{"мкл/ч"});
            yield return ("en-US", VolumeFlowUnit.MicroliterPerMinute, true, new string[]{"µL/min", "µLPM"});
            yield return ("ru-RU", VolumeFlowUnit.MicroliterPerMinute, true, new string[]{"мкл/мин"});
            yield return ("en-US", VolumeFlowUnit.MicroliterPerSecond, true, new string[]{"µL/s", "µLPS"});
            yield return ("ru-RU", VolumeFlowUnit.MicroliterPerSecond, true, new string[]{"мкл/c"});
            yield return ("en-US", VolumeFlowUnit.MilliliterPerDay, true, new string[]{"ml/day", "mL/d", "mLPD"});
            yield return ("en-US", VolumeFlowUnit.MilliliterPerHour, true, new string[]{"mL/h", "mLPH"});
            yield return ("ru-RU", VolumeFlowUnit.MilliliterPerHour, true, new string[]{"мл/ч"});
            yield return ("en-US", VolumeFlowUnit.MilliliterPerMinute, true, new string[]{"mL/min", "mLPM"});
            yield return ("ru-RU", VolumeFlowUnit.MilliliterPerMinute, true, new string[]{"мл/мин"});
            yield return ("en-US", VolumeFlowUnit.MilliliterPerSecond, true, new string[]{"mL/s", "mLPS"});
            yield return ("ru-RU", VolumeFlowUnit.MilliliterPerSecond, true, new string[]{"мл/c"});
            yield return ("en-US", VolumeFlowUnit.MillionUsGallonsPerDay, true, new string[]{"MGD"});
            yield return ("en-US", VolumeFlowUnit.NanoliterPerDay, true, new string[]{"nl/day", "nL/d", "nLPD"});
            yield return ("en-US", VolumeFlowUnit.NanoliterPerHour, true, new string[]{"nL/h", "nLPH"});
            yield return ("ru-RU", VolumeFlowUnit.NanoliterPerHour, true, new string[]{"нл/ч"});
            yield return ("en-US", VolumeFlowUnit.NanoliterPerMinute, true, new string[]{"nL/min", "nLPM"});
            yield return ("ru-RU", VolumeFlowUnit.NanoliterPerMinute, true, new string[]{"нл/мин"});
            yield return ("en-US", VolumeFlowUnit.NanoliterPerSecond, true, new string[]{"nL/s", "nLPS"});
            yield return ("ru-RU", VolumeFlowUnit.NanoliterPerSecond, true, new string[]{"нл/c"});
            yield return ("en-US", VolumeFlowUnit.OilBarrelPerDay, true, new string[]{"bbl/d", "BOPD"});
            yield return ("en-US", VolumeFlowUnit.OilBarrelPerHour, true, new string[]{"bbl/hr", "bph"});
            yield return ("en-US", VolumeFlowUnit.OilBarrelPerMinute, true, new string[]{"bbl/min", "bpm"});
            yield return ("en-US", VolumeFlowUnit.OilBarrelPerSecond, true, new string[]{"bbl/s"});
            yield return ("en-US", VolumeFlowUnit.UkGallonPerDay, true, new string[]{"gal (U. K.)/d"});
            yield return ("en-US", VolumeFlowUnit.UkGallonPerHour, true, new string[]{"gal (imp.)/h"});
            yield return ("en-US", VolumeFlowUnit.UkGallonPerMinute, true, new string[]{"gal (imp.)/min"});
            yield return ("en-US", VolumeFlowUnit.UkGallonPerSecond, true, new string[]{"gal (imp.)/s"});
            yield return ("en-US", VolumeFlowUnit.UsGallonPerDay, true, new string[]{"gpd", "gal/d"});
            yield return ("en-US", VolumeFlowUnit.UsGallonPerHour, true, new string[]{"gal (U.S.)/h"});
            yield return ("en-US", VolumeFlowUnit.UsGallonPerMinute, true, new string[]{"gal (U.S.)/min", "GPM"});
            yield return ("en-US", VolumeFlowUnit.UsGallonPerSecond, true, new string[]{"gal (U.S.)/s"});
            yield return ("en-US", VolumeFlowPerAreaUnit.CubicFootPerMinutePerSquareFoot, true, new string[]{"CFM/ft²"});
            yield return ("en-US", VolumeFlowPerAreaUnit.CubicMeterPerSecondPerSquareMeter, true, new string[]{"m³/(s·m²)"});
            yield return ("en-US", VolumePerLengthUnit.CubicMeterPerMeter, true, new string[]{"m³/m"});
            yield return ("en-US", VolumePerLengthUnit.CubicYardPerFoot, true, new string[]{"yd³/ft"});
            yield return ("en-US", VolumePerLengthUnit.CubicYardPerUsSurveyFoot, true, new string[]{"yd³/ftUS"});
            yield return ("en-US", VolumePerLengthUnit.LiterPerKilometer, true, new string[]{"l/km"});
            yield return ("en-US", VolumePerLengthUnit.LiterPerMeter, true, new string[]{"l/m"});
            yield return ("en-US", VolumePerLengthUnit.LiterPerMillimeter, true, new string[]{"l/mm"});
            yield return ("en-US", VolumePerLengthUnit.OilBarrelPerFoot, true, new string[]{"bbl/ft"});
            yield return ("en-US", VolumetricHeatCapacityUnit.BtuPerCubicFootDegreeFahrenheit, true, new string[]{"BTU/ft³·°F"});
            yield return ("en-US", VolumetricHeatCapacityUnit.CaloriePerCubicCentimeterDegreeCelsius, true, new string[]{"cal/cm³·°C"});
            yield return ("en-US", VolumetricHeatCapacityUnit.JoulePerCubicMeterDegreeCelsius, true, new string[]{"J/m³·°C"});
            yield return ("en-US", VolumetricHeatCapacityUnit.JoulePerCubicMeterKelvin, true, new string[]{"J/m³·K"});
            yield return ("en-US", VolumetricHeatCapacityUnit.KilocaloriePerCubicCentimeterDegreeCelsius, true, new string[]{"kcal/cm³·°C"});
            yield return ("en-US", VolumetricHeatCapacityUnit.KilojoulePerCubicMeterDegreeCelsius, true, new string[]{"kJ/m³·°C"});
            yield return ("en-US", VolumetricHeatCapacityUnit.KilojoulePerCubicMeterKelvin, true, new string[]{"kJ/m³·K"});
            yield return ("en-US", VolumetricHeatCapacityUnit.MegajoulePerCubicMeterDegreeCelsius, true, new string[]{"MJ/m³·°C"});
            yield return ("en-US", VolumetricHeatCapacityUnit.MegajoulePerCubicMeterKelvin, true, new string[]{"MJ/m³·K"});
            yield return ("en-US", WarpingMomentOfInertiaUnit.CentimeterToTheSixth, true, new string[]{"cm⁶", "cm^6"});
            yield return ("en-US", WarpingMomentOfInertiaUnit.DecimeterToTheSixth, true, new string[]{"dm⁶", "dm^6"});
            yield return ("en-US", WarpingMomentOfInertiaUnit.FootToTheSixth, true, new string[]{"ft⁶", "ft^6"});
            yield return ("en-US", WarpingMomentOfInertiaUnit.InchToTheSixth, true, new string[]{"in⁶", "in^6"});
            yield return ("en-US", WarpingMomentOfInertiaUnit.MeterToTheSixth, true, new string[]{"m⁶", "m^6"});
            yield return ("en-US", WarpingMomentOfInertiaUnit.MillimeterToTheSixth, true, new string[]{"mm⁶", "mm^6"});
        }
    }
}
