//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToElectricConductancePerArea;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToElectricConductancePerAreaExtensionsTests
    {
        [Fact]
        public void NumberToFemtosiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromFemtosiemensPerSquareMeter(2), 2.FemtosiemensPerSquareMeter());

        [Fact]
        public void NumberToKilosiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromKilosiemensPerSquareMeter(2), 2.KilosiemensPerSquareMeter());

        [Fact]
        public void NumberToMegasiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromMegasiemensPerSquareMeter(2), 2.MegasiemensPerSquareMeter());

        [Fact]
        public void NumberToMicrosiemensPerSquareCentimetersTest() =>
            Assert.Equal(ElectricConductancePerArea.FromMicrosiemensPerSquareCentimeters(2), 2.MicrosiemensPerSquareCentimeters());

        [Fact]
        public void NumberToMicrosiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromMicrosiemensPerSquareMeter(2), 2.MicrosiemensPerSquareMeter());

        [Fact]
        public void NumberToMillisiemensPerSquareCentimetersTest() =>
            Assert.Equal(ElectricConductancePerArea.FromMillisiemensPerSquareCentimeters(2), 2.MillisiemensPerSquareCentimeters());

        [Fact]
        public void NumberToMillisiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromMillisiemensPerSquareMeter(2), 2.MillisiemensPerSquareMeter());

        [Fact]
        public void NumberToNanosiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromNanosiemensPerSquareMeter(2), 2.NanosiemensPerSquareMeter());

        [Fact]
        public void NumberToPicosiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromPicosiemensPerSquareMeter(2), 2.PicosiemensPerSquareMeter());

        [Fact]
        public void NumberToSiemensPerSquareCentimetersTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareCentimeters(2), 2.SiemensPerSquareCentimeters());

        [Fact]
        public void NumberToSiemensPerSquareDecimetersTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareDecimeters(2), 2.SiemensPerSquareDecimeters());

        [Fact]
        public void NumberToSiemensPerSquareFeetTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareFeet(2), 2.SiemensPerSquareFeet());

        [Fact]
        public void NumberToSiemensPerSquareInchesTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareInches(2), 2.SiemensPerSquareInches());

        [Fact]
        public void NumberToSiemensPerSquareMeterTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareMeter(2), 2.SiemensPerSquareMeter());

        [Fact]
        public void NumberToSiemensPerSquareMilesTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareMiles(2), 2.SiemensPerSquareMiles());

        [Fact]
        public void NumberToSiemensPerSquareMillimetersTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareMillimeters(2), 2.SiemensPerSquareMillimeters());

        [Fact]
        public void NumberToSiemensPerSquareYardsTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerSquareYards(2), 2.SiemensPerSquareYards());

        [Fact]
        public void NumberToSiemensPerUsSurveySquareFeetTest() =>
            Assert.Equal(ElectricConductancePerArea.FromSiemensPerUsSurveySquareFeet(2), 2.SiemensPerUsSurveySquareFeet());

    }
}
