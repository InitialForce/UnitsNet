//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToMolarMaximumRateOfReaction;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToMolarMaximumRateOfReactionExtensionsTests
    {
        [Fact]
        public void NumberToCentimolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerHourPerGram(2), 2.CentimolesPerHourPerGram());

        [Fact]
        public void NumberToCentimolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerHourPerMicrogram(2), 2.CentimolesPerHourPerMicrogram());

        [Fact]
        public void NumberToCentimolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerHourPerMilligram(2), 2.CentimolesPerHourPerMilligram());

        [Fact]
        public void NumberToCentimolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerMinutePerGram(2), 2.CentimolesPerMinutePerGram());

        [Fact]
        public void NumberToCentimolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerMinutePerMicrogram(2), 2.CentimolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToCentimolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerMinutePerMilligram(2), 2.CentimolesPerMinutePerMilligram());

        [Fact]
        public void NumberToCentimolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerSecondPerGram(2), 2.CentimolesPerSecondPerGram());

        [Fact]
        public void NumberToCentimolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerSecondPerMicrogram(2), 2.CentimolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToCentimolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromCentimolesPerSecondPerMilligram(2), 2.CentimolesPerSecondPerMilligram());

        [Fact]
        public void NumberToDecamolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerHourPerGram(2), 2.DecamolesPerHourPerGram());

        [Fact]
        public void NumberToDecamolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerHourPerMicrogram(2), 2.DecamolesPerHourPerMicrogram());

        [Fact]
        public void NumberToDecamolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerHourPerMilligram(2), 2.DecamolesPerHourPerMilligram());

        [Fact]
        public void NumberToDecamolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerMinutePerGram(2), 2.DecamolesPerMinutePerGram());

        [Fact]
        public void NumberToDecamolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerMinutePerMicrogram(2), 2.DecamolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToDecamolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerMinutePerMilligram(2), 2.DecamolesPerMinutePerMilligram());

        [Fact]
        public void NumberToDecamolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerSecondPerGram(2), 2.DecamolesPerSecondPerGram());

        [Fact]
        public void NumberToDecamolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerSecondPerMicrogram(2), 2.DecamolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToDecamolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecamolesPerSecondPerMilligram(2), 2.DecamolesPerSecondPerMilligram());

        [Fact]
        public void NumberToDecimolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerHourPerGram(2), 2.DecimolesPerHourPerGram());

        [Fact]
        public void NumberToDecimolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerHourPerMicrogram(2), 2.DecimolesPerHourPerMicrogram());

        [Fact]
        public void NumberToDecimolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerHourPerMilligram(2), 2.DecimolesPerHourPerMilligram());

        [Fact]
        public void NumberToDecimolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerMinutePerGram(2), 2.DecimolesPerMinutePerGram());

        [Fact]
        public void NumberToDecimolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerMinutePerMicrogram(2), 2.DecimolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToDecimolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerMinutePerMilligram(2), 2.DecimolesPerMinutePerMilligram());

        [Fact]
        public void NumberToDecimolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerSecondPerGram(2), 2.DecimolesPerSecondPerGram());

        [Fact]
        public void NumberToDecimolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerSecondPerMicrogram(2), 2.DecimolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToDecimolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromDecimolesPerSecondPerMilligram(2), 2.DecimolesPerSecondPerMilligram());

        [Fact]
        public void NumberToHectomolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerHourPerGram(2), 2.HectomolesPerHourPerGram());

        [Fact]
        public void NumberToHectomolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerHourPerMicrogram(2), 2.HectomolesPerHourPerMicrogram());

        [Fact]
        public void NumberToHectomolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerHourPerMilligram(2), 2.HectomolesPerHourPerMilligram());

        [Fact]
        public void NumberToHectomolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerMinutePerGram(2), 2.HectomolesPerMinutePerGram());

        [Fact]
        public void NumberToHectomolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerMinutePerMicrogram(2), 2.HectomolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToHectomolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerMinutePerMilligram(2), 2.HectomolesPerMinutePerMilligram());

        [Fact]
        public void NumberToHectomolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerSecondPerGram(2), 2.HectomolesPerSecondPerGram());

        [Fact]
        public void NumberToHectomolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerSecondPerMicrogram(2), 2.HectomolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToHectomolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromHectomolesPerSecondPerMilligram(2), 2.HectomolesPerSecondPerMilligram());

        [Fact]
        public void NumberToKilomolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerHourPerGram(2), 2.KilomolesPerHourPerGram());

        [Fact]
        public void NumberToKilomolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerHourPerMicrogram(2), 2.KilomolesPerHourPerMicrogram());

        [Fact]
        public void NumberToKilomolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerHourPerMilligram(2), 2.KilomolesPerHourPerMilligram());

        [Fact]
        public void NumberToKilomolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerMinutePerGram(2), 2.KilomolesPerMinutePerGram());

        [Fact]
        public void NumberToKilomolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerMinutePerMicrogram(2), 2.KilomolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToKilomolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerMinutePerMilligram(2), 2.KilomolesPerMinutePerMilligram());

        [Fact]
        public void NumberToKilomolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerSecondPerGram(2), 2.KilomolesPerSecondPerGram());

        [Fact]
        public void NumberToKilomolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerSecondPerMicrogram(2), 2.KilomolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToKilomolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromKilomolesPerSecondPerMilligram(2), 2.KilomolesPerSecondPerMilligram());

        [Fact]
        public void NumberToMicromolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerHourPerGram(2), 2.MicromolesPerHourPerGram());

        [Fact]
        public void NumberToMicromolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerHourPerMicrogram(2), 2.MicromolesPerHourPerMicrogram());

        [Fact]
        public void NumberToMicromolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerHourPerMilligram(2), 2.MicromolesPerHourPerMilligram());

        [Fact]
        public void NumberToMicromolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerMinutePerGram(2), 2.MicromolesPerMinutePerGram());

        [Fact]
        public void NumberToMicromolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerMinutePerMicrogram(2), 2.MicromolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToMicromolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerMinutePerMilligram(2), 2.MicromolesPerMinutePerMilligram());

        [Fact]
        public void NumberToMicromolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerSecondPerGram(2), 2.MicromolesPerSecondPerGram());

        [Fact]
        public void NumberToMicromolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerSecondPerMicrogram(2), 2.MicromolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToMicromolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMicromolesPerSecondPerMilligram(2), 2.MicromolesPerSecondPerMilligram());

        [Fact]
        public void NumberToMillimolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerHourPerGram(2), 2.MillimolesPerHourPerGram());

        [Fact]
        public void NumberToMillimolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerHourPerMicrogram(2), 2.MillimolesPerHourPerMicrogram());

        [Fact]
        public void NumberToMillimolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerHourPerMilligram(2), 2.MillimolesPerHourPerMilligram());

        [Fact]
        public void NumberToMillimolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerMinutePerGram(2), 2.MillimolesPerMinutePerGram());

        [Fact]
        public void NumberToMillimolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerMinutePerMicrogram(2), 2.MillimolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToMillimolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerMinutePerMilligram(2), 2.MillimolesPerMinutePerMilligram());

        [Fact]
        public void NumberToMillimolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerSecondPerGram(2), 2.MillimolesPerSecondPerGram());

        [Fact]
        public void NumberToMillimolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerSecondPerMicrogram(2), 2.MillimolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToMillimolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMillimolesPerSecondPerMilligram(2), 2.MillimolesPerSecondPerMilligram());

        [Fact]
        public void NumberToMolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerHourPerGram(2), 2.MolesPerHourPerGram());

        [Fact]
        public void NumberToMolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerHourPerMicrogram(2), 2.MolesPerHourPerMicrogram());

        [Fact]
        public void NumberToMolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerHourPerMilligram(2), 2.MolesPerHourPerMilligram());

        [Fact]
        public void NumberToMolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerMinutePerGram(2), 2.MolesPerMinutePerGram());

        [Fact]
        public void NumberToMolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerMinutePerMicrogram(2), 2.MolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToMolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerMinutePerMilligram(2), 2.MolesPerMinutePerMilligram());

        [Fact]
        public void NumberToMolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerSecondPerGram(2), 2.MolesPerSecondPerGram());

        [Fact]
        public void NumberToMolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerSecondPerMicrogram(2), 2.MolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToMolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromMolesPerSecondPerMilligram(2), 2.MolesPerSecondPerMilligram());

        [Fact]
        public void NumberToNanomolesPerHourPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerHourPerGram(2), 2.NanomolesPerHourPerGram());

        [Fact]
        public void NumberToNanomolesPerHourPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerHourPerMicrogram(2), 2.NanomolesPerHourPerMicrogram());

        [Fact]
        public void NumberToNanomolesPerHourPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerHourPerMilligram(2), 2.NanomolesPerHourPerMilligram());

        [Fact]
        public void NumberToNanomolesPerMinutePerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerMinutePerGram(2), 2.NanomolesPerMinutePerGram());

        [Fact]
        public void NumberToNanomolesPerMinutePerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerMinutePerMicrogram(2), 2.NanomolesPerMinutePerMicrogram());

        [Fact]
        public void NumberToNanomolesPerMinutePerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerMinutePerMilligram(2), 2.NanomolesPerMinutePerMilligram());

        [Fact]
        public void NumberToNanomolesPerSecondPerGramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerSecondPerGram(2), 2.NanomolesPerSecondPerGram());

        [Fact]
        public void NumberToNanomolesPerSecondPerMicrogramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerSecondPerMicrogram(2), 2.NanomolesPerSecondPerMicrogram());

        [Fact]
        public void NumberToNanomolesPerSecondPerMilligramTest() =>
            Assert.Equal(MolarMaximumRateOfReaction.FromNanomolesPerSecondPerMilligram(2), 2.NanomolesPerSecondPerMilligram());

    }
}
