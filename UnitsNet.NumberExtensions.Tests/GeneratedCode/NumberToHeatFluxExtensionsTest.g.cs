//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using UnitsNet.NumberExtensions.NumberToHeatFlux;
using Xunit;

namespace UnitsNet.Tests
{
    public class NumberToHeatFluxExtensionsTests
    {
        [Fact]
        public void NumberToBtusPerHourSquareFootTest() =>
            Assert.Equal(HeatFlux<double>.FromBtusPerHourSquareFoot(2), 2.BtusPerHourSquareFoot());

        [Fact]
        public void NumberToBtusPerMinuteSquareFootTest() =>
            Assert.Equal(HeatFlux<double>.FromBtusPerMinuteSquareFoot(2), 2.BtusPerMinuteSquareFoot());

        [Fact]
        public void NumberToBtusPerSecondSquareFootTest() =>
            Assert.Equal(HeatFlux<double>.FromBtusPerSecondSquareFoot(2), 2.BtusPerSecondSquareFoot());

        [Fact]
        public void NumberToBtusPerSecondSquareInchTest() =>
            Assert.Equal(HeatFlux<double>.FromBtusPerSecondSquareInch(2), 2.BtusPerSecondSquareInch());

        [Fact]
        public void NumberToCaloriesPerSecondSquareCentimeterTest() =>
            Assert.Equal(HeatFlux<double>.FromCaloriesPerSecondSquareCentimeter(2), 2.CaloriesPerSecondSquareCentimeter());

        [Fact]
        public void NumberToCentiwattsPerSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromCentiwattsPerSquareMeter(2), 2.CentiwattsPerSquareMeter());

        [Fact]
        public void NumberToDeciwattsPerSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromDeciwattsPerSquareMeter(2), 2.DeciwattsPerSquareMeter());

        [Fact]
        public void NumberToKilocaloriesPerHourSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromKilocaloriesPerHourSquareMeter(2), 2.KilocaloriesPerHourSquareMeter());

        [Fact]
        public void NumberToKilocaloriesPerSecondSquareCentimeterTest() =>
            Assert.Equal(HeatFlux<double>.FromKilocaloriesPerSecondSquareCentimeter(2), 2.KilocaloriesPerSecondSquareCentimeter());

        [Fact]
        public void NumberToKilowattsPerSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromKilowattsPerSquareMeter(2), 2.KilowattsPerSquareMeter());

        [Fact]
        public void NumberToMicrowattsPerSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromMicrowattsPerSquareMeter(2), 2.MicrowattsPerSquareMeter());

        [Fact]
        public void NumberToMilliwattsPerSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromMilliwattsPerSquareMeter(2), 2.MilliwattsPerSquareMeter());

        [Fact]
        public void NumberToNanowattsPerSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromNanowattsPerSquareMeter(2), 2.NanowattsPerSquareMeter());

        [Fact]
        public void NumberToPoundsForcePerFootSecondTest() =>
            Assert.Equal(HeatFlux<double>.FromPoundsForcePerFootSecond(2), 2.PoundsForcePerFootSecond());

        [Fact]
        public void NumberToPoundsPerSecondCubedTest() =>
            Assert.Equal(HeatFlux<double>.FromPoundsPerSecondCubed(2), 2.PoundsPerSecondCubed());

        [Fact]
        public void NumberToWattsPerSquareFootTest() =>
            Assert.Equal(HeatFlux<double>.FromWattsPerSquareFoot(2), 2.WattsPerSquareFoot());

        [Fact]
        public void NumberToWattsPerSquareInchTest() =>
            Assert.Equal(HeatFlux<double>.FromWattsPerSquareInch(2), 2.WattsPerSquareInch());

        [Fact]
        public void NumberToWattsPerSquareMeterTest() =>
            Assert.Equal(HeatFlux<double>.FromWattsPerSquareMeter(2), 2.WattsPerSquareMeter());

    }
}
