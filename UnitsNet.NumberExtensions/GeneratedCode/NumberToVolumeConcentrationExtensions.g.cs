//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToVolumeConcentration
{
    /// <summary>
    /// A number to VolumeConcentration Extensions
    /// </summary>
    public static class NumberToVolumeConcentrationExtensions
    {
        /// <inheritdoc cref="VolumeConcentration{T}.FromCentilitersPerLiter(T)" />
        public static VolumeConcentration<double> CentilitersPerLiter<T>(this T value) =>
            VolumeConcentration<double>.FromCentilitersPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromCentilitersPerMililiter(T)" />
        public static VolumeConcentration<double> CentilitersPerMililiter<T>(this T value) =>
            VolumeConcentration<double>.FromCentilitersPerMililiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromDecilitersPerLiter(T)" />
        public static VolumeConcentration<double> DecilitersPerLiter<T>(this T value) =>
            VolumeConcentration<double>.FromDecilitersPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromDecilitersPerMililiter(T)" />
        public static VolumeConcentration<double> DecilitersPerMililiter<T>(this T value) =>
            VolumeConcentration<double>.FromDecilitersPerMililiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromDecimalFractions(T)" />
        public static VolumeConcentration<double> DecimalFractions<T>(this T value) =>
            VolumeConcentration<double>.FromDecimalFractions(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromLitersPerLiter(T)" />
        public static VolumeConcentration<double> LitersPerLiter<T>(this T value) =>
            VolumeConcentration<double>.FromLitersPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromLitersPerMililiter(T)" />
        public static VolumeConcentration<double> LitersPerMililiter<T>(this T value) =>
            VolumeConcentration<double>.FromLitersPerMililiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromMicrolitersPerLiter(T)" />
        public static VolumeConcentration<double> MicrolitersPerLiter<T>(this T value) =>
            VolumeConcentration<double>.FromMicrolitersPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromMicrolitersPerMililiter(T)" />
        public static VolumeConcentration<double> MicrolitersPerMililiter<T>(this T value) =>
            VolumeConcentration<double>.FromMicrolitersPerMililiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromMillilitersPerLiter(T)" />
        public static VolumeConcentration<double> MillilitersPerLiter<T>(this T value) =>
            VolumeConcentration<double>.FromMillilitersPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromMillilitersPerMililiter(T)" />
        public static VolumeConcentration<double> MillilitersPerMililiter<T>(this T value) =>
            VolumeConcentration<double>.FromMillilitersPerMililiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromNanolitersPerLiter(T)" />
        public static VolumeConcentration<double> NanolitersPerLiter<T>(this T value) =>
            VolumeConcentration<double>.FromNanolitersPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromNanolitersPerMililiter(T)" />
        public static VolumeConcentration<double> NanolitersPerMililiter<T>(this T value) =>
            VolumeConcentration<double>.FromNanolitersPerMililiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromPartsPerBillion(T)" />
        public static VolumeConcentration<double> PartsPerBillion<T>(this T value) =>
            VolumeConcentration<double>.FromPartsPerBillion(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromPartsPerMillion(T)" />
        public static VolumeConcentration<double> PartsPerMillion<T>(this T value) =>
            VolumeConcentration<double>.FromPartsPerMillion(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromPartsPerThousand(T)" />
        public static VolumeConcentration<double> PartsPerThousand<T>(this T value) =>
            VolumeConcentration<double>.FromPartsPerThousand(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromPartsPerTrillion(T)" />
        public static VolumeConcentration<double> PartsPerTrillion<T>(this T value) =>
            VolumeConcentration<double>.FromPartsPerTrillion(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromPercent(T)" />
        public static VolumeConcentration<double> Percent<T>(this T value) =>
            VolumeConcentration<double>.FromPercent(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromPicolitersPerLiter(T)" />
        public static VolumeConcentration<double> PicolitersPerLiter<T>(this T value) =>
            VolumeConcentration<double>.FromPicolitersPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="VolumeConcentration{T}.FromPicolitersPerMililiter(T)" />
        public static VolumeConcentration<double> PicolitersPerMililiter<T>(this T value) =>
            VolumeConcentration<double>.FromPicolitersPerMililiter(Convert.ToDouble(value));

    }
}
