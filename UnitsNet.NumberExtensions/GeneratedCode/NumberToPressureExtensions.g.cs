//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToPressure
{
    /// <summary>
    /// A number to Pressure Extensions
    /// </summary>
    public static class NumberToPressureExtensions
    {
        /// <inheritdoc cref="Pressure{T}.FromAtmospheres(T)" />
        public static Pressure<double> Atmospheres<T>(this T value) =>
            Pressure<double>.FromAtmospheres(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromBars(T)" />
        public static Pressure<double> Bars<T>(this T value) =>
            Pressure<double>.FromBars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromCentibars(T)" />
        public static Pressure<double> Centibars<T>(this T value) =>
            Pressure<double>.FromCentibars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromDecapascals(T)" />
        public static Pressure<double> Decapascals<T>(this T value) =>
            Pressure<double>.FromDecapascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromDecibars(T)" />
        public static Pressure<double> Decibars<T>(this T value) =>
            Pressure<double>.FromDecibars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromDynesPerSquareCentimeter(T)" />
        public static Pressure<double> DynesPerSquareCentimeter<T>(this T value) =>
            Pressure<double>.FromDynesPerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromFeetOfHead(T)" />
        public static Pressure<double> FeetOfHead<T>(this T value) =>
            Pressure<double>.FromFeetOfHead(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromGigapascals(T)" />
        public static Pressure<double> Gigapascals<T>(this T value) =>
            Pressure<double>.FromGigapascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromHectopascals(T)" />
        public static Pressure<double> Hectopascals<T>(this T value) =>
            Pressure<double>.FromHectopascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromInchesOfMercury(T)" />
        public static Pressure<double> InchesOfMercury<T>(this T value) =>
            Pressure<double>.FromInchesOfMercury(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromInchesOfWaterColumn(T)" />
        public static Pressure<double> InchesOfWaterColumn<T>(this T value) =>
            Pressure<double>.FromInchesOfWaterColumn(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilobars(T)" />
        public static Pressure<double> Kilobars<T>(this T value) =>
            Pressure<double>.FromKilobars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilogramsForcePerSquareCentimeter(T)" />
        public static Pressure<double> KilogramsForcePerSquareCentimeter<T>(this T value) =>
            Pressure<double>.FromKilogramsForcePerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilogramsForcePerSquareMeter(T)" />
        public static Pressure<double> KilogramsForcePerSquareMeter<T>(this T value) =>
            Pressure<double>.FromKilogramsForcePerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilogramsForcePerSquareMillimeter(T)" />
        public static Pressure<double> KilogramsForcePerSquareMillimeter<T>(this T value) =>
            Pressure<double>.FromKilogramsForcePerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilonewtonsPerSquareCentimeter(T)" />
        public static Pressure<double> KilonewtonsPerSquareCentimeter<T>(this T value) =>
            Pressure<double>.FromKilonewtonsPerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilonewtonsPerSquareMeter(T)" />
        public static Pressure<double> KilonewtonsPerSquareMeter<T>(this T value) =>
            Pressure<double>.FromKilonewtonsPerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilonewtonsPerSquareMillimeter(T)" />
        public static Pressure<double> KilonewtonsPerSquareMillimeter<T>(this T value) =>
            Pressure<double>.FromKilonewtonsPerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilopascals(T)" />
        public static Pressure<double> Kilopascals<T>(this T value) =>
            Pressure<double>.FromKilopascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilopoundsForcePerSquareFoot(T)" />
        public static Pressure<double> KilopoundsForcePerSquareFoot<T>(this T value) =>
            Pressure<double>.FromKilopoundsForcePerSquareFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromKilopoundsForcePerSquareInch(T)" />
        public static Pressure<double> KilopoundsForcePerSquareInch<T>(this T value) =>
            Pressure<double>.FromKilopoundsForcePerSquareInch(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMegabars(T)" />
        public static Pressure<double> Megabars<T>(this T value) =>
            Pressure<double>.FromMegabars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMeganewtonsPerSquareMeter(T)" />
        public static Pressure<double> MeganewtonsPerSquareMeter<T>(this T value) =>
            Pressure<double>.FromMeganewtonsPerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMegapascals(T)" />
        public static Pressure<double> Megapascals<T>(this T value) =>
            Pressure<double>.FromMegapascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMetersOfHead(T)" />
        public static Pressure<double> MetersOfHead<T>(this T value) =>
            Pressure<double>.FromMetersOfHead(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMicrobars(T)" />
        public static Pressure<double> Microbars<T>(this T value) =>
            Pressure<double>.FromMicrobars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMicropascals(T)" />
        public static Pressure<double> Micropascals<T>(this T value) =>
            Pressure<double>.FromMicropascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMillibars(T)" />
        public static Pressure<double> Millibars<T>(this T value) =>
            Pressure<double>.FromMillibars(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMillimetersOfMercury(T)" />
        public static Pressure<double> MillimetersOfMercury<T>(this T value) =>
            Pressure<double>.FromMillimetersOfMercury(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromMillipascals(T)" />
        public static Pressure<double> Millipascals<T>(this T value) =>
            Pressure<double>.FromMillipascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromNewtonsPerSquareCentimeter(T)" />
        public static Pressure<double> NewtonsPerSquareCentimeter<T>(this T value) =>
            Pressure<double>.FromNewtonsPerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromNewtonsPerSquareMeter(T)" />
        public static Pressure<double> NewtonsPerSquareMeter<T>(this T value) =>
            Pressure<double>.FromNewtonsPerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromNewtonsPerSquareMillimeter(T)" />
        public static Pressure<double> NewtonsPerSquareMillimeter<T>(this T value) =>
            Pressure<double>.FromNewtonsPerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromPascals(T)" />
        public static Pressure<double> Pascals<T>(this T value) =>
            Pressure<double>.FromPascals(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromPoundsForcePerSquareFoot(T)" />
        public static Pressure<double> PoundsForcePerSquareFoot<T>(this T value) =>
            Pressure<double>.FromPoundsForcePerSquareFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromPoundsForcePerSquareInch(T)" />
        public static Pressure<double> PoundsForcePerSquareInch<T>(this T value) =>
            Pressure<double>.FromPoundsForcePerSquareInch(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromPoundsPerInchSecondSquared(T)" />
        public static Pressure<double> PoundsPerInchSecondSquared<T>(this T value) =>
            Pressure<double>.FromPoundsPerInchSecondSquared(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromTechnicalAtmospheres(T)" />
        public static Pressure<double> TechnicalAtmospheres<T>(this T value) =>
            Pressure<double>.FromTechnicalAtmospheres(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromTonnesForcePerSquareCentimeter(T)" />
        public static Pressure<double> TonnesForcePerSquareCentimeter<T>(this T value) =>
            Pressure<double>.FromTonnesForcePerSquareCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromTonnesForcePerSquareMeter(T)" />
        public static Pressure<double> TonnesForcePerSquareMeter<T>(this T value) =>
            Pressure<double>.FromTonnesForcePerSquareMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromTonnesForcePerSquareMillimeter(T)" />
        public static Pressure<double> TonnesForcePerSquareMillimeter<T>(this T value) =>
            Pressure<double>.FromTonnesForcePerSquareMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="Pressure{T}.FromTorrs(T)" />
        public static Pressure<double> Torrs<T>(this T value) =>
            Pressure<double>.FromTorrs(Convert.ToDouble(value));

    }
}
