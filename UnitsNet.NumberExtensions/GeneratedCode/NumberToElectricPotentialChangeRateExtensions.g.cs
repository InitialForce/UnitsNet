//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToElectricPotentialChangeRate
{
    /// <summary>
    /// A number to ElectricPotentialChangeRate Extensions
    /// </summary>
    public static class NumberToElectricPotentialChangeRateExtensions
    {
        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromKilovoltsPerHours(T)" />
        public static ElectricPotentialChangeRate<double> KilovoltsPerHours<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromKilovoltsPerHours(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromKilovoltsPerMicroseconds(T)" />
        public static ElectricPotentialChangeRate<double> KilovoltsPerMicroseconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromKilovoltsPerMicroseconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromKilovoltsPerMinutes(T)" />
        public static ElectricPotentialChangeRate<double> KilovoltsPerMinutes<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromKilovoltsPerMinutes(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromKilovoltsPerSeconds(T)" />
        public static ElectricPotentialChangeRate<double> KilovoltsPerSeconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromKilovoltsPerSeconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMegavoltsPerHours(T)" />
        public static ElectricPotentialChangeRate<double> MegavoltsPerHours<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMegavoltsPerHours(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMegavoltsPerMicroseconds(T)" />
        public static ElectricPotentialChangeRate<double> MegavoltsPerMicroseconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMegavoltsPerMicroseconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMegavoltsPerMinutes(T)" />
        public static ElectricPotentialChangeRate<double> MegavoltsPerMinutes<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMegavoltsPerMinutes(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMegavoltsPerSeconds(T)" />
        public static ElectricPotentialChangeRate<double> MegavoltsPerSeconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMegavoltsPerSeconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMicrovoltsPerHours(T)" />
        public static ElectricPotentialChangeRate<double> MicrovoltsPerHours<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMicrovoltsPerHours(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMicrovoltsPerMicroseconds(T)" />
        public static ElectricPotentialChangeRate<double> MicrovoltsPerMicroseconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMicrovoltsPerMicroseconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMicrovoltsPerMinutes(T)" />
        public static ElectricPotentialChangeRate<double> MicrovoltsPerMinutes<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMicrovoltsPerMinutes(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMicrovoltsPerSeconds(T)" />
        public static ElectricPotentialChangeRate<double> MicrovoltsPerSeconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMicrovoltsPerSeconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMillivoltsPerHours(T)" />
        public static ElectricPotentialChangeRate<double> MillivoltsPerHours<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMillivoltsPerHours(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMillivoltsPerMicroseconds(T)" />
        public static ElectricPotentialChangeRate<double> MillivoltsPerMicroseconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMillivoltsPerMicroseconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMillivoltsPerMinutes(T)" />
        public static ElectricPotentialChangeRate<double> MillivoltsPerMinutes<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMillivoltsPerMinutes(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromMillivoltsPerSeconds(T)" />
        public static ElectricPotentialChangeRate<double> MillivoltsPerSeconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromMillivoltsPerSeconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromVoltsPerHours(T)" />
        public static ElectricPotentialChangeRate<double> VoltsPerHours<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromVoltsPerHours(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromVoltsPerMicroseconds(T)" />
        public static ElectricPotentialChangeRate<double> VoltsPerMicroseconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromVoltsPerMicroseconds(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromVoltsPerMinutes(T)" />
        public static ElectricPotentialChangeRate<double> VoltsPerMinutes<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromVoltsPerMinutes(Convert.ToDouble(value));

        /// <inheritdoc cref="ElectricPotentialChangeRate{T}.FromVoltsPerSeconds(T)" />
        public static ElectricPotentialChangeRate<double> VoltsPerSeconds<T>(this T value) =>
            ElectricPotentialChangeRate<double>.FromVoltsPerSeconds(Convert.ToDouble(value));

    }
}
