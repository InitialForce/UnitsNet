//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToVolume
{
    /// <summary>
    /// A number to Volume Extensions
    /// </summary>
    public static class NumberToVolumeExtensions
    {
        /// <inheritdoc cref="Volume{T}.FromAcreFeet(T)" />
        public static Volume<double> AcreFeet<T>(this T value) =>
            Volume<double>.FromAcreFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromAuTablespoons(T)" />
        public static Volume<double> AuTablespoons<T>(this T value) =>
            Volume<double>.FromAuTablespoons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromBoardFeet(T)" />
        public static Volume<double> BoardFeet<T>(this T value) =>
            Volume<double>.FromBoardFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCentiliters(T)" />
        public static Volume<double> Centiliters<T>(this T value) =>
            Volume<double>.FromCentiliters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicCentimeters(T)" />
        public static Volume<double> CubicCentimeters<T>(this T value) =>
            Volume<double>.FromCubicCentimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicDecimeters(T)" />
        public static Volume<double> CubicDecimeters<T>(this T value) =>
            Volume<double>.FromCubicDecimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicFeet(T)" />
        public static Volume<double> CubicFeet<T>(this T value) =>
            Volume<double>.FromCubicFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicHectometers(T)" />
        public static Volume<double> CubicHectometers<T>(this T value) =>
            Volume<double>.FromCubicHectometers(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicInches(T)" />
        public static Volume<double> CubicInches<T>(this T value) =>
            Volume<double>.FromCubicInches(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicKilometers(T)" />
        public static Volume<double> CubicKilometers<T>(this T value) =>
            Volume<double>.FromCubicKilometers(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicMeters(T)" />
        public static Volume<double> CubicMeters<T>(this T value) =>
            Volume<double>.FromCubicMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicMicrometers(T)" />
        public static Volume<double> CubicMicrometers<T>(this T value) =>
            Volume<double>.FromCubicMicrometers(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicMiles(T)" />
        public static Volume<double> CubicMiles<T>(this T value) =>
            Volume<double>.FromCubicMiles(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicMillimeters(T)" />
        public static Volume<double> CubicMillimeters<T>(this T value) =>
            Volume<double>.FromCubicMillimeters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromCubicYards(T)" />
        public static Volume<double> CubicYards<T>(this T value) =>
            Volume<double>.FromCubicYards(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromDecausGallons(T)" />
        public static Volume<double> DecausGallons<T>(this T value) =>
            Volume<double>.FromDecausGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromDeciliters(T)" />
        public static Volume<double> Deciliters<T>(this T value) =>
            Volume<double>.FromDeciliters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromDeciusGallons(T)" />
        public static Volume<double> DeciusGallons<T>(this T value) =>
            Volume<double>.FromDeciusGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromHectocubicFeet(T)" />
        public static Volume<double> HectocubicFeet<T>(this T value) =>
            Volume<double>.FromHectocubicFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromHectocubicMeters(T)" />
        public static Volume<double> HectocubicMeters<T>(this T value) =>
            Volume<double>.FromHectocubicMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromHectoliters(T)" />
        public static Volume<double> Hectoliters<T>(this T value) =>
            Volume<double>.FromHectoliters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromHectousGallons(T)" />
        public static Volume<double> HectousGallons<T>(this T value) =>
            Volume<double>.FromHectousGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromImperialBeerBarrels(T)" />
        public static Volume<double> ImperialBeerBarrels<T>(this T value) =>
            Volume<double>.FromImperialBeerBarrels(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromImperialGallons(T)" />
        public static Volume<double> ImperialGallons<T>(this T value) =>
            Volume<double>.FromImperialGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromImperialOunces(T)" />
        public static Volume<double> ImperialOunces<T>(this T value) =>
            Volume<double>.FromImperialOunces(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromImperialPints(T)" />
        public static Volume<double> ImperialPints<T>(this T value) =>
            Volume<double>.FromImperialPints(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromKilocubicFeet(T)" />
        public static Volume<double> KilocubicFeet<T>(this T value) =>
            Volume<double>.FromKilocubicFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromKilocubicMeters(T)" />
        public static Volume<double> KilocubicMeters<T>(this T value) =>
            Volume<double>.FromKilocubicMeters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromKiloimperialGallons(T)" />
        public static Volume<double> KiloimperialGallons<T>(this T value) =>
            Volume<double>.FromKiloimperialGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromKiloliters(T)" />
        public static Volume<double> Kiloliters<T>(this T value) =>
            Volume<double>.FromKiloliters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromKilousGallons(T)" />
        public static Volume<double> KilousGallons<T>(this T value) =>
            Volume<double>.FromKilousGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromLiters(T)" />
        public static Volume<double> Liters<T>(this T value) =>
            Volume<double>.FromLiters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMegacubicFeet(T)" />
        public static Volume<double> MegacubicFeet<T>(this T value) =>
            Volume<double>.FromMegacubicFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMegaimperialGallons(T)" />
        public static Volume<double> MegaimperialGallons<T>(this T value) =>
            Volume<double>.FromMegaimperialGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMegaliters(T)" />
        public static Volume<double> Megaliters<T>(this T value) =>
            Volume<double>.FromMegaliters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMegausGallons(T)" />
        public static Volume<double> MegausGallons<T>(this T value) =>
            Volume<double>.FromMegausGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMetricCups(T)" />
        public static Volume<double> MetricCups<T>(this T value) =>
            Volume<double>.FromMetricCups(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMetricTeaspoons(T)" />
        public static Volume<double> MetricTeaspoons<T>(this T value) =>
            Volume<double>.FromMetricTeaspoons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMicroliters(T)" />
        public static Volume<double> Microliters<T>(this T value) =>
            Volume<double>.FromMicroliters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromMilliliters(T)" />
        public static Volume<double> Milliliters<T>(this T value) =>
            Volume<double>.FromMilliliters(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromOilBarrels(T)" />
        public static Volume<double> OilBarrels<T>(this T value) =>
            Volume<double>.FromOilBarrels(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUkTablespoons(T)" />
        public static Volume<double> UkTablespoons<T>(this T value) =>
            Volume<double>.FromUkTablespoons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsBeerBarrels(T)" />
        public static Volume<double> UsBeerBarrels<T>(this T value) =>
            Volume<double>.FromUsBeerBarrels(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsCustomaryCups(T)" />
        public static Volume<double> UsCustomaryCups<T>(this T value) =>
            Volume<double>.FromUsCustomaryCups(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsGallons(T)" />
        public static Volume<double> UsGallons<T>(this T value) =>
            Volume<double>.FromUsGallons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsLegalCups(T)" />
        public static Volume<double> UsLegalCups<T>(this T value) =>
            Volume<double>.FromUsLegalCups(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsOunces(T)" />
        public static Volume<double> UsOunces<T>(this T value) =>
            Volume<double>.FromUsOunces(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsPints(T)" />
        public static Volume<double> UsPints<T>(this T value) =>
            Volume<double>.FromUsPints(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsQuarts(T)" />
        public static Volume<double> UsQuarts<T>(this T value) =>
            Volume<double>.FromUsQuarts(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsTablespoons(T)" />
        public static Volume<double> UsTablespoons<T>(this T value) =>
            Volume<double>.FromUsTablespoons(Convert.ToDouble(value));

        /// <inheritdoc cref="Volume{T}.FromUsTeaspoons(T)" />
        public static Volume<double> UsTeaspoons<T>(this T value) =>
            Volume<double>.FromUsTeaspoons(Convert.ToDouble(value));

    }
}
