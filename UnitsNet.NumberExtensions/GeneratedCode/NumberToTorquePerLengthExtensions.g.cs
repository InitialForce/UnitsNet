//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToTorquePerLength
{
    /// <summary>
    /// A number to TorquePerLength Extensions
    /// </summary>
    public static class NumberToTorquePerLengthExtensions
    {
        /// <inheritdoc cref="TorquePerLength{T}.FromKilogramForceCentimetersPerMeter(T)" />
        public static TorquePerLength<double> KilogramForceCentimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromKilogramForceCentimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromKilogramForceMetersPerMeter(T)" />
        public static TorquePerLength<double> KilogramForceMetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromKilogramForceMetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromKilogramForceMillimetersPerMeter(T)" />
        public static TorquePerLength<double> KilogramForceMillimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromKilogramForceMillimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromKilonewtonCentimetersPerMeter(T)" />
        public static TorquePerLength<double> KilonewtonCentimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromKilonewtonCentimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromKilonewtonMetersPerMeter(T)" />
        public static TorquePerLength<double> KilonewtonMetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromKilonewtonMetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromKilonewtonMillimetersPerMeter(T)" />
        public static TorquePerLength<double> KilonewtonMillimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromKilonewtonMillimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromKilopoundForceFeetPerFoot(T)" />
        public static TorquePerLength<double> KilopoundForceFeetPerFoot<T>(this T value) =>
            TorquePerLength<double>.FromKilopoundForceFeetPerFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromKilopoundForceInchesPerFoot(T)" />
        public static TorquePerLength<double> KilopoundForceInchesPerFoot<T>(this T value) =>
            TorquePerLength<double>.FromKilopoundForceInchesPerFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromMeganewtonCentimetersPerMeter(T)" />
        public static TorquePerLength<double> MeganewtonCentimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromMeganewtonCentimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromMeganewtonMetersPerMeter(T)" />
        public static TorquePerLength<double> MeganewtonMetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromMeganewtonMetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromMeganewtonMillimetersPerMeter(T)" />
        public static TorquePerLength<double> MeganewtonMillimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromMeganewtonMillimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromMegapoundForceFeetPerFoot(T)" />
        public static TorquePerLength<double> MegapoundForceFeetPerFoot<T>(this T value) =>
            TorquePerLength<double>.FromMegapoundForceFeetPerFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromMegapoundForceInchesPerFoot(T)" />
        public static TorquePerLength<double> MegapoundForceInchesPerFoot<T>(this T value) =>
            TorquePerLength<double>.FromMegapoundForceInchesPerFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromNewtonCentimetersPerMeter(T)" />
        public static TorquePerLength<double> NewtonCentimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromNewtonCentimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromNewtonMetersPerMeter(T)" />
        public static TorquePerLength<double> NewtonMetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromNewtonMetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromNewtonMillimetersPerMeter(T)" />
        public static TorquePerLength<double> NewtonMillimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromNewtonMillimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromPoundForceFeetPerFoot(T)" />
        public static TorquePerLength<double> PoundForceFeetPerFoot<T>(this T value) =>
            TorquePerLength<double>.FromPoundForceFeetPerFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromPoundForceInchesPerFoot(T)" />
        public static TorquePerLength<double> PoundForceInchesPerFoot<T>(this T value) =>
            TorquePerLength<double>.FromPoundForceInchesPerFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromTonneForceCentimetersPerMeter(T)" />
        public static TorquePerLength<double> TonneForceCentimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromTonneForceCentimetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromTonneForceMetersPerMeter(T)" />
        public static TorquePerLength<double> TonneForceMetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromTonneForceMetersPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="TorquePerLength{T}.FromTonneForceMillimetersPerMeter(T)" />
        public static TorquePerLength<double> TonneForceMillimetersPerMeter<T>(this T value) =>
            TorquePerLength<double>.FromTonneForceMillimetersPerMeter(Convert.ToDouble(value));

    }
}
