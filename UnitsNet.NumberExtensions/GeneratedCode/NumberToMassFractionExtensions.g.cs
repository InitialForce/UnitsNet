//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToMassFraction
{
    /// <summary>
    /// A number to MassFraction Extensions
    /// </summary>
    public static class NumberToMassFractionExtensions
    {
        /// <inheritdoc cref="MassFraction{T}.FromCentigramsPerGram(T)" />
        public static MassFraction<double> CentigramsPerGram<T>(this T value) =>
            MassFraction<double>.FromCentigramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromCentigramsPerKilogram(T)" />
        public static MassFraction<double> CentigramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromCentigramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromDecagramsPerGram(T)" />
        public static MassFraction<double> DecagramsPerGram<T>(this T value) =>
            MassFraction<double>.FromDecagramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromDecagramsPerKilogram(T)" />
        public static MassFraction<double> DecagramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromDecagramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromDecigramsPerGram(T)" />
        public static MassFraction<double> DecigramsPerGram<T>(this T value) =>
            MassFraction<double>.FromDecigramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromDecigramsPerKilogram(T)" />
        public static MassFraction<double> DecigramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromDecigramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromDecimalFractions(T)" />
        public static MassFraction<double> DecimalFractions<T>(this T value) =>
            MassFraction<double>.FromDecimalFractions(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromGramsPerGram(T)" />
        public static MassFraction<double> GramsPerGram<T>(this T value) =>
            MassFraction<double>.FromGramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromGramsPerKilogram(T)" />
        public static MassFraction<double> GramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromGramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromHectogramsPerGram(T)" />
        public static MassFraction<double> HectogramsPerGram<T>(this T value) =>
            MassFraction<double>.FromHectogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromHectogramsPerKilogram(T)" />
        public static MassFraction<double> HectogramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromHectogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromKilogramsPerGram(T)" />
        public static MassFraction<double> KilogramsPerGram<T>(this T value) =>
            MassFraction<double>.FromKilogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromKilogramsPerKilogram(T)" />
        public static MassFraction<double> KilogramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromKilogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromMicrogramsPerGram(T)" />
        public static MassFraction<double> MicrogramsPerGram<T>(this T value) =>
            MassFraction<double>.FromMicrogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromMicrogramsPerKilogram(T)" />
        public static MassFraction<double> MicrogramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromMicrogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromMilligramsPerGram(T)" />
        public static MassFraction<double> MilligramsPerGram<T>(this T value) =>
            MassFraction<double>.FromMilligramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromMilligramsPerKilogram(T)" />
        public static MassFraction<double> MilligramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromMilligramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromNanogramsPerGram(T)" />
        public static MassFraction<double> NanogramsPerGram<T>(this T value) =>
            MassFraction<double>.FromNanogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromNanogramsPerKilogram(T)" />
        public static MassFraction<double> NanogramsPerKilogram<T>(this T value) =>
            MassFraction<double>.FromNanogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromPartsPerBillion(T)" />
        public static MassFraction<double> PartsPerBillion<T>(this T value) =>
            MassFraction<double>.FromPartsPerBillion(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromPartsPerMillion(T)" />
        public static MassFraction<double> PartsPerMillion<T>(this T value) =>
            MassFraction<double>.FromPartsPerMillion(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromPartsPerThousand(T)" />
        public static MassFraction<double> PartsPerThousand<T>(this T value) =>
            MassFraction<double>.FromPartsPerThousand(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromPartsPerTrillion(T)" />
        public static MassFraction<double> PartsPerTrillion<T>(this T value) =>
            MassFraction<double>.FromPartsPerTrillion(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction{T}.FromPercent(T)" />
        public static MassFraction<double> Percent<T>(this T value) =>
            MassFraction<double>.FromPercent(Convert.ToDouble(value));

    }
}
