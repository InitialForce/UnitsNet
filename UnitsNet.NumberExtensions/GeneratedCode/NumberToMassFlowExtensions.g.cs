//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToMassFlow
{
    /// <summary>
    /// A number to MassFlow Extensions
    /// </summary>
    public static class NumberToMassFlowExtensions
    {
        /// <inheritdoc cref="MassFlow{T}.FromCentigramsPerDay(T)" />
        public static MassFlow<double> CentigramsPerDay<T>(this T value) =>
            MassFlow<double>.FromCentigramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromCentigramsPerSecond(T)" />
        public static MassFlow<double> CentigramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromCentigramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromDecagramsPerDay(T)" />
        public static MassFlow<double> DecagramsPerDay<T>(this T value) =>
            MassFlow<double>.FromDecagramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromDecagramsPerSecond(T)" />
        public static MassFlow<double> DecagramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromDecagramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromDecigramsPerDay(T)" />
        public static MassFlow<double> DecigramsPerDay<T>(this T value) =>
            MassFlow<double>.FromDecigramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromDecigramsPerSecond(T)" />
        public static MassFlow<double> DecigramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromDecigramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromGramsPerDay(T)" />
        public static MassFlow<double> GramsPerDay<T>(this T value) =>
            MassFlow<double>.FromGramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromGramsPerHour(T)" />
        public static MassFlow<double> GramsPerHour<T>(this T value) =>
            MassFlow<double>.FromGramsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromGramsPerSecond(T)" />
        public static MassFlow<double> GramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromGramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromHectogramsPerDay(T)" />
        public static MassFlow<double> HectogramsPerDay<T>(this T value) =>
            MassFlow<double>.FromHectogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromHectogramsPerSecond(T)" />
        public static MassFlow<double> HectogramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromHectogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromKilogramsPerDay(T)" />
        public static MassFlow<double> KilogramsPerDay<T>(this T value) =>
            MassFlow<double>.FromKilogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromKilogramsPerHour(T)" />
        public static MassFlow<double> KilogramsPerHour<T>(this T value) =>
            MassFlow<double>.FromKilogramsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromKilogramsPerMinute(T)" />
        public static MassFlow<double> KilogramsPerMinute<T>(this T value) =>
            MassFlow<double>.FromKilogramsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromKilogramsPerSecond(T)" />
        public static MassFlow<double> KilogramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromKilogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMegagramsPerDay(T)" />
        public static MassFlow<double> MegagramsPerDay<T>(this T value) =>
            MassFlow<double>.FromMegagramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMegapoundsPerDay(T)" />
        public static MassFlow<double> MegapoundsPerDay<T>(this T value) =>
            MassFlow<double>.FromMegapoundsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMegapoundsPerHour(T)" />
        public static MassFlow<double> MegapoundsPerHour<T>(this T value) =>
            MassFlow<double>.FromMegapoundsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMegapoundsPerMinute(T)" />
        public static MassFlow<double> MegapoundsPerMinute<T>(this T value) =>
            MassFlow<double>.FromMegapoundsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMegapoundsPerSecond(T)" />
        public static MassFlow<double> MegapoundsPerSecond<T>(this T value) =>
            MassFlow<double>.FromMegapoundsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMicrogramsPerDay(T)" />
        public static MassFlow<double> MicrogramsPerDay<T>(this T value) =>
            MassFlow<double>.FromMicrogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMicrogramsPerSecond(T)" />
        public static MassFlow<double> MicrogramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromMicrogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMilligramsPerDay(T)" />
        public static MassFlow<double> MilligramsPerDay<T>(this T value) =>
            MassFlow<double>.FromMilligramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromMilligramsPerSecond(T)" />
        public static MassFlow<double> MilligramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromMilligramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromNanogramsPerDay(T)" />
        public static MassFlow<double> NanogramsPerDay<T>(this T value) =>
            MassFlow<double>.FromNanogramsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromNanogramsPerSecond(T)" />
        public static MassFlow<double> NanogramsPerSecond<T>(this T value) =>
            MassFlow<double>.FromNanogramsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromPoundsPerDay(T)" />
        public static MassFlow<double> PoundsPerDay<T>(this T value) =>
            MassFlow<double>.FromPoundsPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromPoundsPerHour(T)" />
        public static MassFlow<double> PoundsPerHour<T>(this T value) =>
            MassFlow<double>.FromPoundsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromPoundsPerMinute(T)" />
        public static MassFlow<double> PoundsPerMinute<T>(this T value) =>
            MassFlow<double>.FromPoundsPerMinute(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromPoundsPerSecond(T)" />
        public static MassFlow<double> PoundsPerSecond<T>(this T value) =>
            MassFlow<double>.FromPoundsPerSecond(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromShortTonsPerHour(T)" />
        public static MassFlow<double> ShortTonsPerHour<T>(this T value) =>
            MassFlow<double>.FromShortTonsPerHour(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromTonnesPerDay(T)" />
        public static MassFlow<double> TonnesPerDay<T>(this T value) =>
            MassFlow<double>.FromTonnesPerDay(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFlow{T}.FromTonnesPerHour(T)" />
        public static MassFlow<double> TonnesPerHour<T>(this T value) =>
            MassFlow<double>.FromTonnesPerHour(Convert.ToDouble(value));

    }
}
