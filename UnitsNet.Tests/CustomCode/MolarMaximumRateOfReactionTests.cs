//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

namespace UnitsNet.Tests.CustomCode
{
    public class MolarMaximumRateOfReactionTests : MolarMaximumRateOfReactionTestsBase
    {
        protected override bool SupportsSIUnitSystem => false;
        protected override double CentimolesPerHourPerGramInOneMolePerSecondPerGram => 100d * 60d * 60d;
        protected override double CentimolesPerHourPerMicrogramInOneMolePerSecondPerGram => 100d * 60d * 60d * 0.000_001;
        protected override double CentimolesPerHourPerMilligramInOneMolePerSecondPerGram => 100d * 60d * 60d * 0.001;
        protected override double CentimolesPerMinutePerGramInOneMolePerSecondPerGram => 100d * 60d;
        protected override double CentimolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 100d * 60d * 0.000_001;
        protected override double CentimolesPerMinutePerMilligramInOneMolePerSecondPerGram => 100d * 60d * 0.001;
        protected override double CentimolesPerSecondPerGramInOneMolePerSecondPerGram => 100d;
        protected override double CentimolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 100d * 0.000_001;
        protected override double CentimolesPerSecondPerMilligramInOneMolePerSecondPerGram => 100d * 0.001;
        protected override double DecamolesPerHourPerGramInOneMolePerSecondPerGram => 0.1 * 60d * 60d;
        protected override double DecamolesPerHourPerMicrogramInOneMolePerSecondPerGram => 0.1 * 60d * 60d * 0.000_001;
        protected override double DecamolesPerHourPerMilligramInOneMolePerSecondPerGram => 0.1 * 60d * 60d * 0.001;
        protected override double DecamolesPerMinutePerGramInOneMolePerSecondPerGram => 0.1 * 60d;
        protected override double DecamolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 0.1 * 60d * 0.000_001;
        protected override double DecamolesPerMinutePerMilligramInOneMolePerSecondPerGram => 0.1 * 60d * 0.001;
        protected override double DecamolesPerSecondPerGramInOneMolePerSecondPerGram => 0.1;
        protected override double DecamolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 0.1 * 0.000_001;
        protected override double DecamolesPerSecondPerMilligramInOneMolePerSecondPerGram => 0.1 * 0.001;
        protected override double DecimolesPerHourPerGramInOneMolePerSecondPerGram => 10d * 60d * 60d;
        protected override double DecimolesPerHourPerMicrogramInOneMolePerSecondPerGram => 10d * 60d * 60d * 0.000_001;
        protected override double DecimolesPerHourPerMilligramInOneMolePerSecondPerGram => 10d * 60d * 60d * 0.001;
        protected override double DecimolesPerMinutePerGramInOneMolePerSecondPerGram => 10d * 60d;
        protected override double DecimolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 10d * 60d * 0.000_001;
        protected override double DecimolesPerMinutePerMilligramInOneMolePerSecondPerGram => 10d * 60d * 0.001;
        protected override double DecimolesPerSecondPerGramInOneMolePerSecondPerGram => 10d;
        protected override double DecimolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 10d * 0.000_001;
        protected override double DecimolesPerSecondPerMilligramInOneMolePerSecondPerGram => 10d * 0.001;
        protected override double HectomolesPerHourPerGramInOneMolePerSecondPerGram => 0.01 * 60d * 60d;
        protected override double HectomolesPerHourPerMicrogramInOneMolePerSecondPerGram => 0.01 * 60d * 60d * 0.000_001;
        protected override double HectomolesPerHourPerMilligramInOneMolePerSecondPerGram => 0.01 * 60d * 60d * 0.001;
        protected override double HectomolesPerMinutePerGramInOneMolePerSecondPerGram => 0.01 * 60d;
        protected override double HectomolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 0.01 * 60d * 0.000_001;
        protected override double HectomolesPerMinutePerMilligramInOneMolePerSecondPerGram => 0.01 * 60d * 0.001;
        protected override double HectomolesPerSecondPerGramInOneMolePerSecondPerGram => 0.01;
        protected override double HectomolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 0.01 * 0.000_001;
        protected override double HectomolesPerSecondPerMilligramInOneMolePerSecondPerGram => 0.01 * 0.001;
        protected override double KilomolesPerHourPerGramInOneMolePerSecondPerGram => 0.001 * 60d * 60d;
        protected override double KilomolesPerHourPerMicrogramInOneMolePerSecondPerGram => 0.001 * 60d * 60d * 0.000_001;
        protected override double KilomolesPerHourPerMilligramInOneMolePerSecondPerGram => 0.001 * 60d * 60d * 0.001;
        protected override double KilomolesPerMinutePerGramInOneMolePerSecondPerGram => 0.001 * 60d;
        protected override double KilomolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 0.001 * 60d * 0.000_001;
        protected override double KilomolesPerMinutePerMilligramInOneMolePerSecondPerGram => 0.001 * 60d * 0.001;
        protected override double KilomolesPerSecondPerGramInOneMolePerSecondPerGram => 0.001;
        protected override double KilomolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 0.001 * 0.000_001;
        protected override double KilomolesPerSecondPerMilligramInOneMolePerSecondPerGram => 0.001 * 0.001;
        protected override double MicromolesPerHourPerGramInOneMolePerSecondPerGram => 1_000_000d * 60d * 60d;
        protected override double MicromolesPerHourPerMicrogramInOneMolePerSecondPerGram => 1_000_000d * 60d * 60d * 0.000_001;
        protected override double MicromolesPerHourPerMilligramInOneMolePerSecondPerGram => 1_000_000d * 60d * 60d * 0.001;
        protected override double MicromolesPerMinutePerGramInOneMolePerSecondPerGram => 1_000_000d * 60d;
        protected override double MicromolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 1_000_000d * 60d * 0.000_001;
        protected override double MicromolesPerMinutePerMilligramInOneMolePerSecondPerGram => 1_000_000d * 60d * 0.001;
        protected override double MicromolesPerSecondPerGramInOneMolePerSecondPerGram => 1_000_000d;
        protected override double MicromolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 1_000_000d * 0.000_001;
        protected override double MicromolesPerSecondPerMilligramInOneMolePerSecondPerGram => 1_000_000d * 0.001;
        protected override double MillimolesPerHourPerGramInOneMolePerSecondPerGram => 1000d * 60d * 60d;
        protected override double MillimolesPerHourPerMicrogramInOneMolePerSecondPerGram => 1000d * 60d * 60d * 0.000_001;
        protected override double MillimolesPerHourPerMilligramInOneMolePerSecondPerGram => 1000d * 60d * 60d * 0.001;
        protected override double MillimolesPerMinutePerGramInOneMolePerSecondPerGram => 1000d * 60d;
        protected override double MillimolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 1000d * 60d * 0.000_001;
        protected override double MillimolesPerMinutePerMilligramInOneMolePerSecondPerGram => 1000d * 60d * 0.001;
        protected override double MillimolesPerSecondPerGramInOneMolePerSecondPerGram => 1000d;
        protected override double MillimolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 1000d * 0.000_001;
        protected override double MillimolesPerSecondPerMilligramInOneMolePerSecondPerGram => 1000d * 0.001;
        protected override double MolesPerHourPerGramInOneMolePerSecondPerGram => 1d * 60d * 60d;
        protected override double MolesPerHourPerMicrogramInOneMolePerSecondPerGram => 1d * 60d * 60d * 0.000_001;
        protected override double MolesPerHourPerMilligramInOneMolePerSecondPerGram => 1d * 60d * 60d * 0.001;
        protected override double MolesPerMinutePerGramInOneMolePerSecondPerGram => 1d * 60d;
        protected override double MolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 1d * 60d * 0.000_001;
        protected override double MolesPerMinutePerMilligramInOneMolePerSecondPerGram => 1d * 60d * 0.001;
        protected override double MolesPerSecondPerGramInOneMolePerSecondPerGram => 1d;
        protected override double MolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 1d * 0.000_001;
        protected override double MolesPerSecondPerMilligramInOneMolePerSecondPerGram => 1d * 0.001;
        protected override double NanomolesPerHourPerGramInOneMolePerSecondPerGram => 1_000_000_000d * 60d * 60d;
        protected override double NanomolesPerHourPerMicrogramInOneMolePerSecondPerGram => 1_000_000_000d * 60d * 60d * 0.000_001;
        protected override double NanomolesPerHourPerMilligramInOneMolePerSecondPerGram => 1_000_000_000d * 60d * 60d * 0.001;
        protected override double NanomolesPerMinutePerGramInOneMolePerSecondPerGram => 1_000_000_000d * 60d;
        protected override double NanomolesPerMinutePerMicrogramInOneMolePerSecondPerGram => 1_000_000_000d * 60d * 0.000_001;
        protected override double NanomolesPerMinutePerMilligramInOneMolePerSecondPerGram => 1_000_000_000d * 60d * 0.001;
        protected override double NanomolesPerSecondPerGramInOneMolePerSecondPerGram => 1_000_000_000d;
        protected override double NanomolesPerSecondPerMicrogramInOneMolePerSecondPerGram => 1_000_000_000d * 0.000_001;
        protected override double NanomolesPerSecondPerMilligramInOneMolePerSecondPerGram => 1_000_000_000d * 0.001;
    }
}
