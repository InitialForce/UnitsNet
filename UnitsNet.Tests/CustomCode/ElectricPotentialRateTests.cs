//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

namespace UnitsNet.Tests.CustomCode
{
    public class ElectricPotentialRateTests : ElectricPotentialRateTestsBase
    {
        protected override double KilovoltsPerHoursInOneVoltPerSecond => 3.6;
        protected override double KilovoltsPerMinutesInOneVoltPerSecond => 6E-2;
        protected override double KilovoltsPerSecondInOneVoltPerSecond => 1E-03;
        protected override double MegavoltsPerHoursInOneVoltPerSecond => 36E-4;
        protected override double MegavoltsPerMinutesInOneVoltPerSecond => 6E-05;
        protected override double MegavoltsPerSecondInOneVoltPerSecond => 1E-06;
        protected override double MicrovoltsPerHoursInOneVoltPerSecond => 36E8;
        protected override double MicrovoltsPerMinutesInOneVoltPerSecond => 6E7;
        protected override double MicrovoltsPerSecondInOneVoltPerSecond => 1E6;
        protected override double MillivoltsPerHoursInOneVoltPerSecond => 36E5;
        protected override double MillivoltsPerMinutesInOneVoltPerSecond => 6E4;
        protected override double MillivoltsPerSecondInOneVoltPerSecond => 1000;
        protected override double VoltsPerHoursInOneVoltPerSecond => 3600;
        protected override double VoltsPerMinutesInOneVoltPerSecond => 60;
        protected override double VoltsPerSecondInOneVoltPerSecond => 1;
    }
}
